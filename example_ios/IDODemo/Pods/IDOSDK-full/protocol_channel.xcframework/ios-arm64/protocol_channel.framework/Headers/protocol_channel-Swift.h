#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
#ifndef PROTOCOL_CHANNEL_SWIFT_H
#define PROTOCOL_CHANNEL_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Flutter;
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="protocol_channel",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;

/// 错误
SWIFT_CLASS("_TtC16protocol_channel8CmdError")
@interface CmdError : NSObject
/// 错误码
/// \code
/// 0 Successful command
/// 1 SVC handler is missing
/// 2 SoftDevice has not been enabled
/// 3 Internal Error
/// 4 No Memory for operation
/// 5 Not found
/// 6 Not supported
/// 7 Invalid Parameter
/// 8 Invalid state, operation disallowed in this state
/// 9 Invalid Length
/// 10 Invalid Flags
/// 11 Invalid Data
/// 12 Invalid Data size
/// 13 Operation timed out
/// 14 Null Pointer
/// 15 Forbidden Operation
/// 16 Bad Memory Address
/// 17 Busy
/// 18 Maximum connection count exceeded.
/// 19 Not enough resources for operation
/// 20 Bt Bluetooth upgrade error
/// 21 Not enough space for operation
/// 22 Low Battery
/// 23 Invalid File Name/Format
/// 24 空间够但需要整理
/// 25 空间整理中
///
/// 当指令发出前异常时:
/// -1 取消
/// -2 失败
/// -3 指令已存在队列中
/// -4 设备断线
/// -5 指令被中断(由于发出的指令不能被实际取消，故存在修改指令被中断后可能还会导致设备修改生效的情况)
/// -6 未连接设备
/// -99 json解析失败
///
/// \endcode
@property (nonatomic, readonly) NSInteger code;
@property (nonatomic, readonly, copy) NSString * _Nullable message;
@property (nonatomic) BOOL isOK;
- (nonnull instancetype)initWithCode:(NSInteger)code message:(NSString * _Nullable)message OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol IDOCancellable;
@class IDOLiveDataModel;
@class IDOErrorRecordModel;
@class IDOGpsInfoModel;
@class IDOVersionInfoModel;
@class IDOMtuInfoModel;
@class IDOAllHealthSwitchStateModel;
@class IDOGpsStatusModel;
@class IDOUnerasableMeunListModel;
@class IDOActivitySwitchModel;
@class IDOCmdGetResponseModel;
@class IDOFlashBinInfoModel;
@class IDOBtNoticeModel;
@class IDOUpHandGestureModel;
@class IDOWatchDialIdModel;
@class IDONotDisturbStatusModel;
@class IDOMainSportGoalModel;
@class IDOBpAlgVersionModel;
@class IDOScreenBrightnessModel;
@class IDOHotStartParamModel;
@class IDOSupportMaxSetItemsNumModel;
@class IDOWalkRemindModelObjc;
@class IDOStepGoalModel;
@class IDOContactReviseTimeModel;
@class IDOUpdateStatusModel;
@class IDOStressValModel;
@class IDOHeartRateModeModel;
@class IDOBatteryInfoModel;
@class IDODeviceLogStateModel;
@class IDOBleVoiceParamModel;
@class IDOCmdSetResponseModel;
@class IDOGpsControlParamModel;
@class IDOGpsControlModel;
@class IDOHeartRateModeSmartParamModel;
@class IDOStressCalibrationParamModel;
@class IDOStressCalibrationModel;
@class IDOHandWashingReminderParamModelObjc;
@class IDOSportGoalParamModel;
@class IDOWeatherDataParamModel;
@class IDONotificationStatusParamModel;
@class IDOScientificSleepSwitchParamModel;
@class IDOBpCalibrationParamModel;
@class IDOBpCalibrationModel;
@class IDOLostFindParamModel;
@class IDOWatchDialParamModel;
@class IDOUnitParamModel;
@class IDODownloadLanguageModel;
@class IDOMenuListModel;
@class IDOSportModeSelectParamModel;
@class IDOSportModeSortParamModel;
@class IDOLongSitParamModel;
@class IDOHeartRateModeParamModel;
@class IDOV3NoiseParamModel;
@class IDOWeatherSunTimeParamModel;
@class IDOShortcutParamModel;
@class IDOSetNoticeStatusModel;
@class IDONotificationCenterModel;
@class IDOTemperatureSwitchParamModel;
@class IDOSleepPeriodParamModel;
@class IDOUpHandGestureParamModel;
@class IDOTakingMedicineReminderParamModelObjc;
@class IDOSpo2SwitchParamModel;
@class IDOAlarmModelObjc;
@class IDOHabitInfoModel;
@class IDOFitnessGuidanceParamModelObjc;
@class IDODisplayModeParamModel;
@class IDOBpMeasurementParamModel;
@class IDOBpMeasurementModel;
@class IDOMusicOnOffParamModel;
@class IDORunPlanParamModel;
@class IDOSendRunPlanModel;
@class IDOWeatherV3ParamModel;
@class IDOMusicInfoModel;
@class IDOMusicControlParamModel;
@class IDOMusicOpearteParamModel;
@class IDOMusicOperateModel;
@class IDONoticeMessageParamModel;
@class IDONoticeMessageStateParamModel;
@class IDONoticeMessageStateModel;
@class IDONoticeMesaageParamModel;
@class IDOWorldTimeParamModel;
@class IDOSchedulerReminderParamModel;
@class IDOSchedulerReminderModel;
@class IDOWatchDialInfoModel;
@class IDOBpCalControlModel;
@class IDOWatchFaceParamModel;
@class IDOWatchFaceModel;
@class IDOSyncContactParamModel;
@class IDOSyncContactModel;
@class IDOWatchListModel;
@class IDOWatchListV2Model;
@class IDOSportSortParamModel;
@class IDOSportSortModel;
@class IDOSport100SortParamModel;
@class IDOSport100SortModel;
@class IDOMainUISortParamModel;
@class IDOMainUISortModel;
@class IDOHistoricalMenstruationParamModel;
@class IDOLanguageLibraryModel;
@class IDOBleBeepModel;
@class IDOHeartModeParamModel;
@class IDOHeartModeModel;
@class IDOVoiceReplyParamModel;
@class IDOWatchDialSortParamModel;
@class IDOWalkRemindTimesParamModel;
@class IDOWallpaperDialReplyV3ParamModel;
@class IDOWallpaperDialReplyV3Model;
@class IDODateTimeParamModel;
@class IDOUserInfoPramModel;
@class IDOCmdOTAResponseModel;
@class IDOHeartRateIntervalModel;
@class IDOMenstruationModel;
@class IDODefaultSportTypeModel;
@class IDODrinkWaterRemindModelObjc;
@class IDOMenstruationRemindParamModel;
@class IDOStressSwitchParamModelObjc;
@class IDONotDisturbParamModel;
@class IDOMenuListParamModel;
@class IDOSportParamModel;
@class IDOActivitySwitchParamModel;
@class IDOUnitModel;
@class IDOGpsHotStartParamModel;
@class IDOHeartRateModeSmartModel;
@class IDOSpo2SwitchModel;
@class IDOStressSwitchModel;
@class IDODefaultMessageConfigParamModel;
@class IDODefaultMessageConfigModel;

SWIFT_CLASS("_TtC16protocol_channel5Cmdoc")
@interface Cmdoc : NSObject
/// 获取SN信息 返回 sn
/// Get SN information Return sn
+ (id <IDOCancellable> _Nonnull)getSn:(void (^ _Nonnull)(CmdError * _Nonnull, NSString * _Nullable))completion;
/// 获取bt蓝牙名称
/// Get bt bluetooth name
+ (id <IDOCancellable> _Nonnull)getBtName:(void (^ _Nonnull)(CmdError * _Nonnull, NSString * _Nullable))completion;
/// 获得实时数据
/// Get Real-time Data event number
/// \param flag 0：无功能 1：强制打开心率监测 2：强制打开血压监测 | 0: No function 1: force on the heart rate monitor 2: force on the blood pressure monitor
///
+ (id <IDOCancellable> _Nonnull)getLiveData:(NSInteger)flag completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOLiveDataModel * _Nullable))completion;
/// 获取错误记录
/// Get error record
/// \param type 0 查询 1 清除记录 | 0 Query 1 Clear records
///
+ (id <IDOCancellable> _Nonnull)getErrorRecord:(NSInteger)type completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOErrorRecordModel * _Nullable))completion;
/// 获取HID信息
/// Get HID Information event number
+ (id <IDOCancellable> _Nonnull)getHidInfo:(void (^ _Nonnull)(CmdError * _Nonnull, BOOL))completion;
/// 获取gps信息
/// Get GPS Information event number
+ (id <IDOCancellable> _Nonnull)getGpsInfo:(void (^ _Nonnull)(CmdError * _Nonnull, IDOGpsInfoModel * _Nullable))completion;
/// 获取版本信息
/// Get version information event number
+ (id <IDOCancellable> _Nonnull)getVersionInfo:(void (^ _Nonnull)(CmdError * _Nonnull, IDOVersionInfoModel * _Nullable))completion;
/// 获取mtu信息
/// Get MTU Information event number
+ (id <IDOCancellable> _Nonnull)getMtuInfo:(void (^ _Nonnull)(CmdError * _Nonnull, IDOMtuInfoModel * _Nullable))completion;
/// 获取所有的健康监测开关
/// Get event number for all health monitoring switches
+ (id <IDOCancellable> _Nonnull)getAllHealthSwitchState:(void (^ _Nonnull)(CmdError * _Nonnull, IDOAllHealthSwitchStateModel * _Nullable))completion;
/// 获取gps状态
/// Get GPS Status event number
+ (id <IDOCancellable> _Nonnull)getGpsStatus:(void (^ _Nonnull)(CmdError * _Nonnull, IDOGpsStatusModel * _Nullable))completion;
/// 获取固件不可删除的快捷应用列表
/// Get non-deletable menu list in firmware event number
+ (id <IDOCancellable> _Nonnull)getUnerasableMeunList:(void (^ _Nonnull)(CmdError * _Nonnull, IDOUnerasableMeunListModel * _Nullable))completion;
/// 运动模式自动识别开关获取
/// Get event number for activity switch
+ (id <IDOCancellable> _Nonnull)getActivitySwitch:(void (^ _Nonnull)(CmdError * _Nonnull, IDOActivitySwitchModel * _Nullable))completion;
/// 获取红点提醒开关
/// Get unread app reminder switch event number
+ (id <IDOCancellable> _Nonnull)getUnreadAppReminder:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdGetResponseModel * _Nullable))completion;
/// 获取字库信息
/// Get Font Library Information event number
+ (id <IDOCancellable> _Nonnull)getFlashBinInfo:(void (^ _Nonnull)(CmdError * _Nonnull, IDOFlashBinInfoModel * _Nullable))completion;
/// 查询bt配对开关、连接、a2dp连接、hfp连接状态(仅支持带bt蓝牙的设备)
/// Query BT pairing switch, connection, A2DP connection, HFP connection status (Only Supported on devices with BT Bluetooth) event number
+ (id <IDOCancellable> _Nonnull)getBtNotice:(void (^ _Nonnull)(CmdError * _Nonnull, IDOBtNoticeModel * _Nullable))completion;
/// 获取抬腕数据
/// Get wrist up gesture data event number
+ (id <IDOCancellable> _Nonnull)getUpHandGesture:(void (^ _Nonnull)(CmdError * _Nonnull, IDOUpHandGestureModel * _Nullable))completion;
/// 获取表盘id
/// Get watch ID event number
+ (id <IDOCancellable> _Nonnull)getWatchDialId:(void (^ _Nonnull)(CmdError * _Nonnull, IDOWatchDialIdModel * _Nullable))completion;
/// 获取勿扰模式状态
/// Get Do Not Disturb mode status event number
+ (id <IDOCancellable> _Nonnull)getNotDisturbStatus:(void (^ _Nonnull)(CmdError * _Nonnull, IDONotDisturbStatusModel * _Nullable))completion;
/// 获取设置的卡路里/距离/中高运动时长 主界面
/// Get Set Calorie/Distance/Mid-High Sport Time Goal event number
/// \param timeGoalType 0: Invalid 1: Daily goal 2: Weekly goal
///
+ (id <IDOCancellable> _Nonnull)getMainSportGoal:(NSInteger)timeGoalType completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOMainSportGoalModel * _Nullable))completion;
/// 获取血压算法三级版本号信息事件号
/// Get blood pressure algorithm version information event number
+ (id <IDOCancellable> _Nonnull)getBpAlgVersion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOBpAlgVersionModel * _Nullable))completion;
/// 获取屏幕亮度
/// Get screen brightness event number
+ (id <IDOCancellable> _Nonnull)getScreenBrightness:(void (^ _Nonnull)(CmdError * _Nonnull, IDOScreenBrightnessModel * _Nullable))completion;
/// 获取热启动参数
/// Get Hot Start Parameters event number
+ (id <IDOCancellable> _Nonnull)getHotStartParam:(void (^ _Nonnull)(CmdError * _Nonnull, IDOHotStartParamModel * _Nullable))completion;
/// 获取固件支持的详情最大设置数量
/// Get maximum number of settings supported by firmware event number
+ (id <IDOCancellable> _Nonnull)getSupportMaxSetItemsNum:(void (^ _Nonnull)(CmdError * _Nonnull, IDOSupportMaxSetItemsNumModel * _Nullable))completion;
/// 获取走动提醒
/// Get walk reminder event number
+ (id <IDOCancellable> _Nonnull)getWalkRemind:(void (^ _Nonnull)(CmdError * _Nonnull, IDOWalkRemindModelObjc * _Nullable))completion;
/// 获取全天步数目标
/// Get daily step goal event number
+ (id <IDOCancellable> _Nonnull)getStepGoal:(void (^ _Nonnull)(CmdError * _Nonnull, IDOStepGoalModel * _Nullable))completion;
/// 获取手表名字
/// Get device name event number
+ (id <IDOCancellable> _Nonnull)getDeviceName:(void (^ _Nonnull)(CmdError * _Nonnull, NSString * _Nullable))completion;
/// 获取固件本地保存联系人文件修改时间
/// Get firmware local contact file modification time event number
+ (id <IDOCancellable> _Nonnull)getContactReviseTime:(void (^ _Nonnull)(CmdError * _Nonnull, IDOContactReviseTimeModel * _Nullable))completion;
/// 获取设备升级状态
/// Get device update status event number
+ (id <IDOCancellable> _Nonnull)getUpdateStatus:(void (^ _Nonnull)(CmdError * _Nonnull, IDOUpdateStatusModel * _Nullable))completion;
/// 获取压力值
/// Get stress value event number
+ (id <IDOCancellable> _Nonnull)getStressVal:(void (^ _Nonnull)(CmdError * _Nonnull, IDOStressValModel * _Nullable))completion;
/// 获取心率监测模式
/// Get Heart Rate Monitoring Mode event number
+ (id <IDOCancellable> _Nonnull)getHeartRateMode:(void (^ _Nonnull)(CmdError * _Nonnull, IDOHeartRateModeModel * _Nullable))completion;
/// 获取电池信息
/// Get battery information event number
+ (id <IDOCancellable> _Nonnull)getBatteryInfo:(void (^ _Nonnull)(CmdError * _Nonnull, IDOBatteryInfoModel * _Nullable))completion;
/// 获取设备的日志状态
/// Get device log state event number
+ (id <IDOCancellable> _Nonnull)getDeviceLogState:(void (^ _Nonnull)(CmdError * _Nonnull, IDODeviceLogStateModel * _Nullable))completion;
/// 手机音量下发给ble
/// Set phone volume for device event number
+ (id <IDOCancellable> _Nonnull)setBleVoice:(IDOBleVoiceParamModel * _Nonnull)bleVoiceParam completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置控制gps
/// Control GPS event number
+ (id <IDOCancellable> _Nonnull)setGpsControl:(IDOGpsControlParamModel * _Nonnull)gpsControl completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOGpsControlModel * _Nullable))completion;
/// 智能心率模式设置
/// Set Smart Heart Rate Mode Event
+ (id <IDOCancellable> _Nonnull)setHeartRateModeSmart:(IDOHeartRateModeSmartParamModel * _Nonnull)heartRateMode completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置压力校准
/// Set Stress Calibration Event Code
+ (id <IDOCancellable> _Nonnull)setStressCalibration:(IDOStressCalibrationParamModel * _Nonnull)stressCalibration completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOStressCalibrationModel * _Nullable))completion;
/// 设置洗手提醒
/// Set Hand Washing Reminder Event
+ (id <IDOCancellable> _Nonnull)setHandWashingReminder:(IDOHandWashingReminderParamModelObjc * _Nonnull)handWashingParam completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置运动目标
/// Set exercise goal event
+ (id <IDOCancellable> _Nonnull)setSportGoal:(IDOSportGoalParamModel * _Nonnull)sportGoalParam completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置天气数据
/// Set weather data event number
+ (id <IDOCancellable> _Nonnull)setWeatherData:(IDOWeatherDataParamModel * _Nonnull)weatherData completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 未读信息红点提示开关
/// Unread message reminder switch event number
+ (id <IDOCancellable> _Nonnull)setUnreadAppReminder:(BOOL)open completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 手机app通过这个命令开关，实现通知应用状态设置
/// Notification app status setting event
+ (id <IDOCancellable> _Nonnull)setNotificationStatus:(IDONotificationStatusParamModel * _Nonnull)statusParam completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置科学睡眠开关
/// Scientific sleep switch setting event
+ (id <IDOCancellable> _Nonnull)setScientificSleepSwitch:(IDOScientificSleepSwitchParamModel * _Nonnull)sleepSwitchParam completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 血压校准
/// Blood pressure calibration event number
+ (id <IDOCancellable> _Nonnull)setBpCalibration:(IDOBpCalibrationParamModel * _Nonnull)bpParam completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOBpCalibrationModel * _Nullable))completion;
/// 设置防丢
/// Set Lost Find Event
+ (id <IDOCancellable> _Nonnull)setLostFind:(IDOLostFindParamModel * _Nonnull)lostFindParam completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置表盘（废弃）
/// Set watch face event number
+ (id <IDOCancellable> _Nonnull)setWatchDial:(IDOWatchDialParamModel * _Nonnull)watchDial completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置天气开关
/// Set weather switch event number
+ (id <IDOCancellable> _Nonnull)setWeatherSwitch:(BOOL)open completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置单位
/// Set Unit event number
+ (id <IDOCancellable> _Nonnull)setUnit:(IDOUnitParamModel * _Nonnull)unitParam completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置寻找手机
/// Set Find Phone
+ (id <IDOCancellable> _Nonnull)setFindPhone:(BOOL)open completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 获取下载语言支持
/// Get Download Language Support
+ (id <IDOCancellable> _Nonnull)getDownloadLanguage:(void (^ _Nonnull)(CmdError * _Nonnull, IDODownloadLanguageModel * _Nullable))completion;
/// 设置停止寻找手机
/// Stop Find Phone
+ (id <IDOCancellable> _Nonnull)setOverFindPhone:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 获取设备支持的菜单列表
/// Get Supported Menu List
+ (id <IDOCancellable> _Nonnull)getMenuList:(void (^ _Nonnull)(CmdError * _Nonnull, IDOMenuListModel * _Nullable))completion;
/// 设置一键呼叫
/// Set the one-touch calling event number
/// \param open on / off
///
/// \param phoneType 0: Invalid  1: Doro phone  2: Non-Doro phone
///
+ (id <IDOCancellable> _Nonnull)setOnekeySOS:(BOOL)open phoneType:(NSInteger)phoneType completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置运动模式选择
/// Set sport mode select event number
+ (id <IDOCancellable> _Nonnull)setSportModeSelect:(IDOSportModeSelectParamModel * _Nonnull)sportModeSelect completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置运动模式排序
/// Set Sport Mode Sorting
+ (id <IDOCancellable> _Nonnull)setSportModeSort:(NSArray<IDOSportModeSortParamModel *> * _Nonnull)items completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置久坐
/// Set Long Sit Event
+ (id <IDOCancellable> _Nonnull)setLongSit:(IDOLongSitParamModel * _Nonnull)longSit completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置心率模式
/// Set Heart Rate Mode Event
+ (id <IDOCancellable> _Nonnull)setHeartRateMode:(IDOHeartRateModeParamModel * _Nonnull)heartRateMode completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置身体电量开关
/// Set body power switch event number
+ (id <IDOCancellable> _Nonnull)setBodyPowerTurn:(BOOL)open completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置呼吸率开关
/// Respiration rate switch setting event
+ (id <IDOCancellable> _Nonnull)setRRespiRateTurn:(BOOL)open completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 环境音量的开关和阀值
/// Set Environmental Noise Volume On/Off and Threshold Event
+ (id <IDOCancellable> _Nonnull)setV3Noise:(IDOV3NoiseParamModel * _Nonnull)noiseParam completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置日出日落时间
/// Set sunrise and sunset time event number
+ (id <IDOCancellable> _Nonnull)setWeatherSunTime:(IDOWeatherSunTimeParamModel * _Nonnull)weatherSunTime completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置快捷方式
/// Set shortcut
+ (id <IDOCancellable> _Nonnull)setShortcut:(IDOShortcutParamModel * _Nonnull)shortcutParam completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 获取通知中心开关
/// Get notification center status event number
+ (id <IDOCancellable> _Nonnull)getNoticeStatus:(void (^ _Nonnull)(CmdError * _Nonnull, IDOSetNoticeStatusModel * _Nullable))completion;
/// 设置通知中心
/// Set Notification Center Event
+ (id <IDOCancellable> _Nonnull)setNoticeStatus:(IDOSetNoticeStatusModel * _Nonnull)noticeStatus completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDONotificationCenterModel * _Nullable))completion;
/// 设置夜间体温开关
/// Set Night-time Temperature Switch Event Code
+ (id <IDOCancellable> _Nonnull)setTemperatureSwitch:(IDOTemperatureSwitchParamModel * _Nonnull)switchParam completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置睡眠时间段
/// Set sleep period event
+ (id <IDOCancellable> _Nonnull)setSleepPeriod:(IDOSleepPeriodParamModel * _Nonnull)sleepPeriod completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置抬手亮屏
/// Raise-to-wake gesture event number
+ (id <IDOCancellable> _Nonnull)setUpHandGesture:(IDOUpHandGestureParamModel * _Nonnull)upHandGesture completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置吃药提醒
/// Set Taking Medicine Reminder Event Code
+ (id <IDOCancellable> _Nonnull)setTakingMedicineReminder:(IDOTakingMedicineReminderParamModelObjc * _Nonnull)takingMedicine completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置血氧开关
/// Set SpO2 switch event
+ (id <IDOCancellable> _Nonnull)setSpo2Switch:(IDOSpo2SwitchParamModel * _Nonnull)spo2Switch completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置天气城市名称
/// Set weather city name event number
+ (id <IDOCancellable> _Nonnull)setWeatherCityName:(NSString * _Nonnull)cityName completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// app获取ble的闹钟
/// Getting Alarms for V3APP Devices
/// \param flag Flag for getting alarms  0: Get all alarms 1: Get alarms modified by the device notification
///
+ (id <IDOCancellable> _Nonnull)getAlarm:(NSInteger)flag completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOAlarmModelObjc * _Nullable))completion;
/// app设置ble的闹钟
/// Getting Alarms for V3APP Devices
+ (id <IDOCancellable> _Nonnull)setAlarm:(IDOAlarmModelObjc * _Nonnull)alarm completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 获取用户习惯信息
/// Get User Habit Information in V3
+ (id <IDOCancellable> _Nonnull)getHabitInfo:(void (^ _Nonnull)(CmdError * _Nonnull, IDOHabitInfoModel * _Nullable))completion;
/// 健身指导
/// Fitness Guidance Event
+ (id <IDOCancellable> _Nonnull)setFitnessGuidance:(IDOFitnessGuidanceParamModelObjc * _Nonnull)fitness completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 显示模式
/// Display mode event number
+ (id <IDOCancellable> _Nonnull)setDisplayMode:(IDODisplayModeParamModel * _Nonnull)displayMode completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 血压测量
/// Blood pressure measurement event number
+ (id <IDOCancellable> _Nonnull)setBpMeasurement:(IDOBpMeasurementParamModel * _Nonnull)bpMeasurment completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOBpMeasurementModel * _Nullable))completion;
/// 音乐开关
/// Set Music On/Off Event
+ (id <IDOCancellable> _Nonnull)setMusicOnOff:(IDOMusicOnOffParamModel * _Nonnull)musicOnOff completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// app下发跑步计划(运动计划)
/// App issued running plan (exercise plan) event number
+ (id <IDOCancellable> _Nonnull)setSendRunPlan:(IDORunPlanParamModel * _Nonnull)runPlan completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOSendRunPlanModel * _Nullable))completion;
/// v3 下发v3天气协议
/// Send the v3 weather protocol event number under v3
+ (id <IDOCancellable> _Nonnull)setWeatherV3:(IDOWeatherV3ParamModel * _Nonnull)weather completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 获取固件的歌曲名和文件夹
/// Get Firmware Song Names and Folders
+ (id <IDOCancellable> _Nonnull)getBleMusicInfo:(void (^ _Nonnull)(CmdError * _Nonnull, IDOMusicInfoModel * _Nullable))completion;
/// 控制音乐
/// Music control event number
+ (id <IDOCancellable> _Nonnull)musicControl:(IDOMusicControlParamModel * _Nonnull)musicControl completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 操作歌曲或者文件夹
/// Operation for songs or folders event
+ (id <IDOCancellable> _Nonnull)setMusicOperate:(IDOMusicOpearteParamModel * _Nonnull)musicOpt completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOMusicOperateModel * _Nullable))completion;
/// 通知消息提醒
/// Notification message reminder event number
+ (id <IDOCancellable> _Nonnull)noticeMessageV3:(IDONoticeMessageParamModel * _Nonnull)noticeMsg completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置消息通知状态
/// Setting Notification Status for a Single App
+ (id <IDOCancellable> _Nonnull)setNoticeMessageState:(IDONoticeMessageStateParamModel * _Nonnull)noticeMsgState completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDONoticeMessageStateModel * _Nullable))completion;
/// 动态消息通知
/// V3 dynamic notification message event number
+ (id <IDOCancellable> _Nonnull)setNoticeAppName:(IDONoticeMesaageParamModel * _Nonnull)noticeMsgParam completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 下发v3世界时间
/// v3 set v3 world time
+ (id <IDOCancellable> _Nonnull)setWorldTimeV3:(NSArray<IDOWorldTimeParamModel *> * _Nonnull)worldTimes completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置日程提醒
/// Schedule Reminder
+ (id <IDOCancellable> _Nonnull)setSchedulerReminder:(IDOSchedulerReminderParamModel * _Nonnull)schedulerReminderParam completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOSchedulerReminderModel * _Nullable))completion;
/// 获取屏幕信息
/// Get Screen Information
+ (id <IDOCancellable> _Nonnull)getWatchDialInfo:(void (^ _Nonnull)(CmdError * _Nonnull, IDOWatchDialInfoModel * _Nullable))completion;
/// 血压校准控制
/// Blood Pressure Calibration Control
/// \param operate 0: Invalid
/// 1: Start blood pressure calibration
/// 2: Stop blood pressure calibration
/// 3: Get feature vector information
///
/// \param filePath The file path to save the raw data obtained during firmware blood pressure calibration
/// Path includes file name (../../blood.txt)
/// Valid when operate=1
///
+ (id <IDOCancellable> _Nonnull)setBpCalControlV3:(NSInteger)operate filePath:(NSString * _Nonnull)filePath completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOBpCalControlModel * _Nullable))completion;
/// 设置表盘
/// Set Watch Face
+ (id <IDOCancellable> _Nonnull)setWatchFaceData:(IDOWatchFaceParamModel * _Nonnull)watchFace completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOWatchFaceModel * _Nullable))completion;
/// 同步常用联系人
/// Synchronization Protocol Bluetooth Call Common Contacts
+ (id <IDOCancellable> _Nonnull)setSyncContact:(IDOSyncContactParamModel * _Nonnull)syncContactParam completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOSyncContactModel * _Nullable))completion;
/// 获取表盘列表 v3
/// Getting watch face list for V3 (New)
+ (id <IDOCancellable> _Nonnull)getWatchListV3:(void (^ _Nonnull)(CmdError * _Nonnull, IDOWatchListModel * _Nullable))completion;
/// 获取表盘列表 v2
/// Get Watch Face List in V2
+ (id <IDOCancellable> _Nonnull)getWatchListV2:(void (^ _Nonnull)(CmdError * _Nonnull, IDOWatchListV2Model * _Nullable))completion;
/// 设置运动子项数据排列
/// Set and Query Sports Sub-item Data Sorting
+ (id <IDOCancellable> _Nonnull)setSportParamSort:(IDOSportSortParamModel * _Nonnull)sportSortParam completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOSportSortModel * _Nullable))completion;
/// 新的100种运动排序
/// Set and Query 100 Sports Sorting
+ (id <IDOCancellable> _Nonnull)setSport100Sort:(IDOSport100SortParamModel * _Nonnull)sport100SortParam completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOSport100SortModel * _Nullable))completion;
/// 设置主界面控件排序
/// Setting and Query Sorting of Main UI Controls
+ (id <IDOCancellable> _Nonnull)setMainUISortV3:(IDOMainUISortParamModel * _Nonnull)mainUISortParam completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOMainUISortModel * _Nullable))completion;
/// 经期的历史数据下发
/// Menstrual historical data delivery event number
+ (id <IDOCancellable> _Nonnull)setHistoricalMenstruation:(IDOHistoricalMenstruationParamModel * _Nonnull)historical completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 获取语言库列表
/// Get Language Library List
+ (id <IDOCancellable> _Nonnull)getLanguageLibrary:(void (^ _Nonnull)(CmdError * _Nonnull, IDOLanguageLibraryModel * _Nullable))completion;
/// 获取固件本地提示音文件信息
/// Getting firmware local beep file information for V3
+ (id <IDOCancellable> _Nonnull)getBleBeep:(void (^ _Nonnull)(CmdError * _Nonnull, IDOBleBeepModel * _Nullable))completion;
/// 设置运动城市名称
/// V3 Setting the Name of a Sports City event number
/// \param cityName City name Maximum 74 bytes
///
+ (id <IDOCancellable> _Nonnull)setLongCityNameV3:(NSString * _Nonnull)cityName completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// V3设置心率模式
/// Set Heart Rate Mode V3
+ (id <IDOCancellable> _Nonnull)setHeartMode:(IDOHeartModeParamModel * _Nonnull)heartModeParam completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOHeartModeModel * _Nullable))completion;
/// 语音回复文本
/// V3 voice reply text event number
+ (id <IDOCancellable> _Nonnull)setVoiceReplyText:(IDOVoiceReplyParamModel * _Nonnull)voiceReplyParam completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置表盘顺序
/// Set watch dial sort event
+ (id <IDOCancellable> _Nonnull)setWatchDialSort:(IDOWatchDialSortParamModel * _Nonnull)watchDialSortParam completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置多个走动提醒的时间点
/// Set multiple walk reminder times event number
+ (id <IDOCancellable> _Nonnull)setWalkRemindTimes:(IDOWalkRemindTimesParamModel * _Nonnull)walkRemindTimes completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置壁纸表盘列表
/// Set wallpaper dial list event number
+ (id <IDOCancellable> _Nonnull)setWallpaperDialReply:(IDOWallpaperDialReplyV3ParamModel * _Nonnull)wallpaperDial completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOWallpaperDialReplyV3Model * _Nullable))completion;
/// 设置时间
/// Set Time
+ (id <IDOCancellable> _Nonnull)setDateTime:(IDODateTimeParamModel * _Nonnull)dateTimeParam completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置用户信息
/// Set user information
+ (id <IDOCancellable> _Nonnull)setUserInfo:(IDOUserInfoPramModel * _Nonnull)userInfo completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 重启设备
+ (id <IDOCancellable> _Nonnull)reboot:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 恢复出厂设置
+ (id <IDOCancellable> _Nonnull)factoryReset:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 控制寻找设备开始
+ (id <IDOCancellable> _Nonnull)findDeviceStart:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 控制寻找设备结束
+ (id <IDOCancellable> _Nonnull)findDeviceStop:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 开始拍照 (app -> ble)
+ (id <IDOCancellable> _Nonnull)photoStart:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 结束拍照 (app -> ble)
+ (id <IDOCancellable> _Nonnull)photoStop:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置左右手
+ (id <IDOCancellable> _Nonnull)setHand:(BOOL)isRightHand completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置屏幕亮度
+ (id <IDOCancellable> _Nonnull)setScreenBrightness:(IDOScreenBrightnessModel * _Nonnull)screenBrightness completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 进入升级模式
+ (id <IDOCancellable> _Nonnull)otaStart:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdOTAResponseModel * _Nullable))completion;
/// 设置心率区间
+ (id <IDOCancellable> _Nonnull)setHeartRateInterval:(IDOHeartRateIntervalModel * _Nonnull)heartRateInterval completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置卡路里和距离目标(设置日常三环)
+ (id <IDOCancellable> _Nonnull)setCalorieDistanceGoal:(IDOMainSportGoalModel * _Nonnull)sportGoal completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置走动提醒
+ (id <IDOCancellable> _Nonnull)setWalkRemind:(IDOWalkRemindModelObjc * _Nonnull)walkRemind completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置经期
+ (id <IDOCancellable> _Nonnull)setMenstruation:(IDOMenstruationModel * _Nonnull)menstruation completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 获取默认的运动类型
/// Get the default motion type
+ (id <IDOCancellable> _Nonnull)getDefaultSportType:(void (^ _Nonnull)(CmdError * _Nonnull, IDODefaultSportTypeModel * _Nullable))completion;
/// 设置喝水提醒
/// Set Drink Water Reminder
+ (id <IDOCancellable> _Nonnull)setDrinkWaterRemind:(IDODrinkWaterRemindModelObjc * _Nonnull)drinkWaterRemind completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置经期提醒
/// Set Menstrual Reminder
+ (id <IDOCancellable> _Nonnull)setMenstruationRemind:(IDOMenstruationRemindParamModel * _Nonnull)menstruationRemind completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置压力开关
/// Set Pressure Switch
+ (id <IDOCancellable> _Nonnull)setStressSwitch:(IDOStressSwitchParamModelObjc * _Nonnull)stressSwitchParam completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置语音助手开关
/// Setting Voice Assistant Switch
+ (id <IDOCancellable> _Nonnull)setVoiceAssistantOnOff:(BOOL)isOpen completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置勿扰模式
/// Set do not disturb mode
+ (id <IDOCancellable> _Nonnull)setNotDisturb:(IDONotDisturbParamModel * _Nonnull)notDisturbModel completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置菜单列表
/// Settings menu list
+ (id <IDOCancellable> _Nonnull)setMenuList:(IDOMenuListParamModel * _Nonnull)menuListParam completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置运动类型排序
/// Set sport type sorting
+ (id <IDOCancellable> _Nonnull)setSportSortV3:(IDOSportParamModel * _Nonnull)sportParam completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 设置固件来电快捷回复开关
/// Set the firmware quick reply switch for incoming calls
+ (id <IDOCancellable> _Nonnull)setCallQuickReplyOnOff:(BOOL)isOpen completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 获取运动默认的类型 V3
/// Get the default type of motion V3
+ (id <IDOCancellable> _Nonnull)getSportTypeV3:(void (^ _Nonnull)(CmdError * _Nonnull, IDODefaultSportTypeModel * _Nullable))completion;
/// 获取BT连接手机型号
/// Get BT connected mobile phone model
+ (id <IDOCancellable> _Nonnull)getBtConnectPhoneModel:(void (^ _Nonnull)(CmdError * _Nonnull, NSString * _Nullable))completion;
/// 设置运动模式识别开关
/// Set the sports mode recognition switch
+ (id <IDOCancellable> _Nonnull)setActivitySwitch:(IDOActivitySwitchParamModel * _Nonnull)switchParam completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 控制音乐开始
/// Control music start
+ (id <IDOCancellable> _Nonnull)musicStart:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 控制音乐停止
/// Control music stop
+ (id <IDOCancellable> _Nonnull)musicStop:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// APP下发配对结果
/// The APP delivers the pairing result
+ (id <IDOCancellable> _Nonnull)sendBindResult:(BOOL)isSuccess :(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 获取单位
/// Get Unit event number
+ (id <IDOCancellable> _Nonnull)getUnit:(void (^ _Nonnull)(CmdError * _Nonnull, IDOUnitModel * _Nullable))completion;
/// 设置热启动参数
/// Set hot boot parameters
+ (id <IDOCancellable> _Nonnull)setHotStartParam:(IDOGpsHotStartParamModel * _Nonnull)gpsHotStart completion:(void (^ _Nonnull)(CmdError * _Nonnull, IDOCmdSetResponseModel * _Nullable))completion;
/// 获取智能心率模式
/// Get Smart Heart Rate Mode
+ (id <IDOCancellable> _Nonnull)getSmartHeartRateMode:(void (^ _Nonnull)(CmdError * _Nonnull, IDOHeartRateModeSmartModel * _Nullable))completion;
/// 获取血氧开关
/// Get blood oxygen switch
+ (id <IDOCancellable> _Nonnull)getSpo2Switch:(void (^ _Nonnull)(CmdError * _Nonnull, IDOSpo2SwitchModel * _Nullable))completion;
/// 获取压力开关
/// Get the pressure switch
+ (id <IDOCancellable> _Nonnull)getStressSwitch:(void (^ _Nonnull)(CmdError * _Nonnull, IDOStressSwitchModel * _Nullable))completion;
/// 设置默认的消息应用列表
/// Set the default messaging app list
+ (id <IDOCancellable> _Nonnull)setDefaultMsgList:(IDODefaultMessageConfigParamModel * _Nonnull)paramModel :(void (^ _Nonnull)(CmdError * _Nonnull, IDODefaultMessageConfigModel * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Get event number for activity switch
SWIFT_CLASS("_TtC16protocol_channel22IDOActivitySwitchModel")
@interface IDOActivitySwitchModel : NSObject
/// 0 for success
/// non-zero for error
@property (nonatomic) NSInteger errCode;
/// Auto identify walking switch: 0 for off, 1 for on, -1 for not supported
@property (nonatomic) NSInteger autoIdentifySportWalk;
/// Auto identify running switch: 0 for off, 1 for on, -1 for not supported
@property (nonatomic) NSInteger autoIdentifySportRun;
/// Auto identify cycling switch: 0 for off, 1 for on, -1 for not supported
@property (nonatomic) NSInteger autoIdentifySportBicycle;
/// Auto pause switch: 0 for off, 1 for on, -1 for not supported
@property (nonatomic) NSInteger autoPauseOnOff;
/// End reminder switch: 0 for off, 1 for on, -1 for not supported
@property (nonatomic) NSInteger autoEndRemindOnOffOnOff;
/// Auto identify elliptical switch: 0 for off, 1 for on, -1 for not supported
@property (nonatomic) NSInteger autoIdentifySportElliptical;
/// Auto identify rowing switch: 0 for off, 1 for on, -1 for not supported
@property (nonatomic) NSInteger autoIdentifySportRowing;
/// Auto identify swimming switch: 0 for off, 1 for on, -1 for not supported
@property (nonatomic) NSInteger autoIdentifySportSwim;
/// Auto identify smart rope switch: 0 for off, 1 for on, -1 for not supported
@property (nonatomic) NSInteger autoIdentifySportSmartRope;
- (nonnull instancetype)initWithErrCode:(NSInteger)errCode autoIdentifySportWalk:(NSInteger)autoIdentifySportWalk autoIdentifySportRun:(NSInteger)autoIdentifySportRun autoIdentifySportBicycle:(NSInteger)autoIdentifySportBicycle autoPauseOnOff:(NSInteger)autoPauseOnOff autoEndRemindOnOffOnOff:(NSInteger)autoEndRemindOnOffOnOff autoIdentifySportElliptical:(NSInteger)autoIdentifySportElliptical autoIdentifySportRowing:(NSInteger)autoIdentifySportRowing autoIdentifySportSwim:(NSInteger)autoIdentifySportSwim autoIdentifySportSmartRope:(NSInteger)autoIdentifySportSmartRope OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel27IDOActivitySwitchParamModel")
@interface IDOActivitySwitchParamModel : NSObject
/// Automatic recognition of walking switch 0 off 1 on
/// Function table: getAutoActivitySetGetUseNewStructExchange
@property (nonatomic) NSInteger autoIdentifySportWalk;
/// Automatic recognition of running switch 0 off 1 on
/// Function table: getAutoActivitySetGetUseNewStructExchange
@property (nonatomic) NSInteger autoIdentifySportRun;
/// Automatically identify bicycle switch 0 off 1 on
/// Function table: getAutoActivitySetGetUseNewStructExchange
@property (nonatomic) NSInteger autoIdentifySportBicycle;
/// Motion auto-pause 0 off 1 on
/// Function table: getAutoActivitySetGetUseNewStructExchange
@property (nonatomic) NSInteger autoPauseOnOff;
/// End reminder 0 off 1 on
/// Function table: getAutoActivitySetGetUseNewStructExchange
@property (nonatomic) NSInteger autoEndRemindOnOffOnOff;
/// Automatically identify the elliptical machine switch 0 off 1 on
/// Function table: getAutoActivitySetGetUseNewStructExchange
@property (nonatomic) NSInteger autoIdentifySportElliptical;
/// Automatically identify rowing machine switch 0 off 1 on
/// Function table: getAutoActivitySetGetUseNewStructExchange
@property (nonatomic) NSInteger autoIdentifySportRowing;
/// Automatic recognition of swimming switch 0 off 1 on
/// Function table: getAutoActivitySetGetUseNewStructExchange
@property (nonatomic) NSInteger autoIdentifySportSwim;
/// Automatically identify smart rope skipping switch 0 off 1 on
/// Function table: getAutoActivitySetGetUseNewStructExchange
@property (nonatomic) NSInteger autoIdentifySportSmartRope;
- (nonnull instancetype)initWithAutoIdentifySportWalk:(NSInteger)autoIdentifySportWalk autoIdentifySportRun:(NSInteger)autoIdentifySportRun autoIdentifySportBicycle:(NSInteger)autoIdentifySportBicycle autoPauseOnOff:(NSInteger)autoPauseOnOff autoEndRemindOnOffOnOff:(NSInteger)autoEndRemindOnOffOnOff autoIdentifySportElliptical:(NSInteger)autoIdentifySportElliptical autoIdentifySportRowing:(NSInteger)autoIdentifySportRowing autoIdentifySportSwim:(NSInteger)autoIdentifySportSwim autoIdentifySportSmartRope:(NSInteger)autoIdentifySportSmartRope OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel12IDOAlarmItem")
@interface IDOAlarmItem : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class IDOWeekObjc;
enum IDOAlarmStatus : NSInteger;
enum IDOAlarmType : NSInteger;

SWIFT_CLASS("_TtC16protocol_channel16IDOAlarmItemObjc")
@interface IDOAlarmItemObjc : NSObject
/// Alarm ID, starting from 1, 1~maximum supported number of alarms
@property (nonatomic) NSInteger alarmID;
/// Delay in minutes
@property (nonatomic) NSInteger delayMin;
@property (nonatomic) NSInteger hour;
@property (nonatomic) NSInteger minute;
/// Alarm name, maximum 23 bytes
@property (nonatomic, copy) NSString * _Nonnull name;
/// Repeat
@property (nonatomic, copy) NSArray<IDOWeekObjc *> * _Nonnull repeats;
/// on/off
@property (nonatomic) BOOL isOpen;
/// Number of repeated alarms
/// Number of times the alarm is repeated, delay switch, set to 0 to turn off, set to a number to repeat that many times
@property (nonatomic) NSInteger repeatTimes;
@property (nonatomic) NSInteger shockOnOff;
/// 0: Hidden (deleted) 1: Displayed -1:Invailed
@property (nonatomic) enum IDOAlarmStatus status;
@property (nonatomic) NSInteger tsnoozeDuration;
/// Alarm type
@property (nonatomic) enum IDOAlarmType type;
- (nonnull instancetype)initWithAlarmID:(NSInteger)alarmID delayMin:(NSInteger)delayMin hour:(NSInteger)hour minute:(NSInteger)minute name:(NSString * _Nonnull)name repeats:(NSArray<IDOWeekObjc *> * _Nonnull)repeats isOpen:(BOOL)isOpen repeatTimes:(NSInteger)repeatTimes shockOnOff:(NSInteger)shockOnOff status:(enum IDOAlarmStatus)status tsnoozeDuration:(NSInteger)tsnoozeDuration type:(enum IDOAlarmType)type OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel13IDOAlarmModel")
@interface IDOAlarmModel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel17IDOAlarmModelObjc")
@interface IDOAlarmModelObjc : NSObject
@property (nonatomic, copy) NSArray<IDOAlarmItemObjc *> * _Nonnull items;
- (nonnull instancetype)initWithItems:(NSArray<IDOAlarmItemObjc *> * _Nonnull)items OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, IDOAlarmStatus, open) {
  IDOAlarmStatusInvalid = -1,
  IDOAlarmStatusHidden = 0,
  IDOAlarmStatusDisplayed = 1,
};

typedef SWIFT_ENUM(NSInteger, IDOAlarmType, open) {
  IDOAlarmTypeWakeUp = 0x00,
  IDOAlarmTypeSleep = 0x01,
  IDOAlarmTypeExercise = 0x02,
  IDOAlarmTypeMedication = 0x03,
  IDOAlarmTypeDate = 0x04,
  IDOAlarmTypeGathering = 0x05,
  IDOAlarmTypeMeeting = 0x06,
  IDOAlarmTypeOther = 0x07,
};

/// alexa授权登录结果
typedef SWIFT_ENUM(NSInteger, IDOAlexaAuthorizeResult, open) {
/// 成功
  IDOAlexaAuthorizeResultSuccessful = 0,
/// 失败
  IDOAlexaAuthorizeResultFailure = 1,
/// 超时
  IDOAlexaAuthorizeResultTimeout = 3,
};

enum IDOGetValueType : NSInteger;

SWIFT_PROTOCOL("_TtP16protocol_channel16IDOAlexaDelegate_")
@protocol IDOAlexaDelegate <NSObject>
/// 获取健康数据
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     dataType: 健康数据类型
///   </li>
/// </ul>
///
/// returns:
/// 对应健康数据
- (NSInteger)getHealthValueWithValueType:(enum IDOGetValueType)valueType SWIFT_WARN_UNUSED_RESULT;
/// 获取心率
/// \param dataType 0: 平均，1： 最大，2： 最小
///
/// \param timeType 0：今天，1：上周，2：上个月，3：上一年
///
///
/// returns:
/// 心率
- (NSInteger)getHrValueWithDataType:(NSInteger)dataType timeType:(NSInteger)timeType SWIFT_WARN_UNUSED_RESULT;
/// 功能控制
/// funType 0 关闭找手机功能
- (void)functionControlWithFunType:(NSInteger)funType;
@end

enum IDOAlexaLoginState : NSInteger;

/// Alexa
SWIFT_PROTOCOL("_TtP16protocol_channel17IDOAlexaInterface_")
@protocol IDOAlexaInterface
/// 网络变更需实时调用此方法
- (void)onNetworkChangedWithHasNetwork:(BOOL)hasNetwork;
/// 配置alexa
/// \param delegate 代理
///
/// \param clientId Alexa后台生成的ID
///
- (void)setupAlexaWithDelegate:(id <IDOAlexaDelegate> _Nonnull)delegate clientId:(NSString * _Nonnull)clientId;
/// 是否已登录
@property (nonatomic, readonly) BOOL isLogin;
/// 监听登录状态变更
- (void)onLoginStateChangedWithHandle:(void (^ _Nonnull)(enum IDOAlexaLoginState))handle;
/// Alexa CBL授权
/// \param productId 在alexa后台注册的产品ID
///
/// \param handle 回调Alexa认证需要打开的verificationUri和pairCode
///
/// \param completion 授权结果
///
///
/// returns:
/// 可取消实例
- (id <IDOCancellable> _Nonnull)authorizeRequestWithProductId:(NSString * _Nonnull)productId handle:(void (^ _Nonnull)(NSString * _Nonnull, NSString * _Nonnull))handle completion:(void (^ _Nonnull)(enum IDOAlexaAuthorizeResult))completion;
/// 退出登录
- (void)logout;
@end

/// Alexa登录状态
typedef SWIFT_ENUM(NSInteger, IDOAlexaLoginState, open) {
/// 登录中
  IDOAlexaLoginStateLogging = 0,
/// 已登录
  IDOAlexaLoginStateLogined = 1,
/// 未登录
  IDOAlexaLoginStateLogout = 2,
};


/// Get event number for all health monitoring switches
SWIFT_CLASS("_TtC16protocol_channel28IDOAllHealthSwitchStateModel")
@interface IDOAllHealthSwitchStateModel : NSObject
/// Continuous heart rate measurement switch:
/// 1:On
/// 0:Off
/// -1:Not Support
@property (nonatomic) NSInteger heartMode;
/// Automatic blood pressure measurement switch
/// 1:On
/// 0:Off
/// -1:Not Support
@property (nonatomic) NSInteger pressureMode;
/// Automatic blood oxygen measurement switch
/// 1:On
/// 0:Off
/// -1:Not Support
@property (nonatomic) NSInteger spo2Mode;
/// Scientific sleep switch
/// 2:scientific sleep mode
/// 1:normal sleep mode
/// -1:Not Support
@property (nonatomic) NSInteger scienceMode;
/// Nighttime temperature switch
/// 1:On
/// 0:Off
/// -1:Not Support
@property (nonatomic) NSInteger temperatureMode;
/// Noise switch
/// 1:On
/// 0:Off
/// -1:Not Support
@property (nonatomic) NSInteger noiseMode;
/// Menstrual cycle switch
/// 1:On
/// 0:Off
/// -1:Not Support
@property (nonatomic) NSInteger menstrualMode;
/// Walking reminder switch
/// 1:On
/// 0:Off
/// -1:Not Support
@property (nonatomic) NSInteger walkMode;
/// Handwashing reminder switch
/// 1:On
/// 0:Off
/// -1:Not Support
@property (nonatomic) NSInteger handwashingMode;
/// Respiration rate switch
/// 1:On
/// 0:Off
/// -1:Not Support
@property (nonatomic) NSInteger respirRateState;
/// Body battery switch
/// 1:On
/// 0:Off
/// -1:Not Support
@property (nonatomic) NSInteger bodyPowerState;
/// Drink water reminder switch
/// 1:On
/// 0:Off
/// -1:Not Support
@property (nonatomic) NSInteger drinkwaterMode;
/// Heart rate notification status:
/// 0 for invalid
/// 1 for allow notification
/// 2 for silent notification
/// 3 for disable notification
@property (nonatomic) NSInteger heartmodeNotifyFlag;
/// Blood pressure notification status:
/// 0 for invalid
/// 1 for allow notification
/// 2 for silent notification
/// 3 for disable notification
@property (nonatomic) NSInteger pressureNotifyFlag;
/// Blood oxygen notification status:
/// 0 for invalid
/// 1 for allow notification
/// 2 for silent notification
/// 3 for disable notification
@property (nonatomic) NSInteger spo2NotifyFlag;
/// Menstrual cycle notification status:
/// 0 for invalid
/// 1 for allow notification
/// 2 for silent notification
/// 3 for disable notification
@property (nonatomic) NSInteger menstrualNotifyFlag;
/// Fitness guidance notification status:
/// 0 for invalid
/// 1 for allow notification
/// 2 for silent notification
/// 3 for disable notification
@property (nonatomic) NSInteger guidanceNotifyFlag;
/// Reminder notification status:
/// 0 for invalid
/// 1 for allow notification
/// 2 for silent notification
/// 3 for disable notification
@property (nonatomic) NSInteger reminderNotifyFlag;
- (nonnull instancetype)initWithHeartMode:(NSInteger)heartMode pressureMode:(NSInteger)pressureMode spo2Mode:(NSInteger)spo2Mode scienceMode:(NSInteger)scienceMode temperatureMode:(NSInteger)temperatureMode noiseMode:(NSInteger)noiseMode menstrualMode:(NSInteger)menstrualMode walkMode:(NSInteger)walkMode handwashingMode:(NSInteger)handwashingMode respirRateState:(NSInteger)respirRateState bodyPowerState:(NSInteger)bodyPowerState drinkwaterMode:(NSInteger)drinkwaterMode heartmodeNotifyFlag:(NSInteger)heartmodeNotifyFlag pressureNotifyFlag:(NSInteger)pressureNotifyFlag spo2NotifyFlag:(NSInteger)spo2NotifyFlag menstrualNotifyFlag:(NSInteger)menstrualNotifyFlag guidanceNotifyFlag:(NSInteger)guidanceNotifyFlag reminderNotifyFlag:(NSInteger)reminderNotifyFlag OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class IDOExchangeBaseModel;

/// app 获取v3多运动数据
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel33IDOAppActivityDataV3ExchangeModel")
@interface IDOAppActivityDataV3ExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 年份
@property (nonatomic) NSInteger year;
/// 月份
@property (nonatomic) NSInteger month;
/// 协议库版本号
@property (nonatomic) NSInteger version;
/// 心率间隔 单位分钟
@property (nonatomic) NSInteger hrInterval;
/// 步数
@property (nonatomic) NSInteger step;
/// 持续时间
@property (nonatomic) NSInteger durations;
/// 卡路里
@property (nonatomic) NSInteger calories;
/// 距离
@property (nonatomic) NSInteger distance;
/// 脂肪燃烧的心率持续时间 单位分钟
@property (nonatomic) NSInteger burnFatMins;
/// 有氧运动的持续时间 单位分钟
@property (nonatomic) NSInteger aerobicMins;
/// 极限锻炼的持续时间 单位分钟
@property (nonatomic) NSInteger limitMins;
/// 热身运动
@property (nonatomic) NSInteger warmUp;
/// 脂肪燃烧
@property (nonatomic) NSInteger fatBurning;
/// 有氧训练
@property (nonatomic) NSInteger aerobicExercise;
/// 无氧训练
@property (nonatomic) NSInteger anaerobicExercise;
/// 极限训练
@property (nonatomic) NSInteger extremeExercise;
/// 热身运动的累计时长 单位秒
@property (nonatomic) NSInteger warmUpTime;
/// 脂肪燃烧的累计时长 单位秒
@property (nonatomic) NSInteger fatBurningTime;
/// 有氧运动的累计时长 单位秒
@property (nonatomic) NSInteger aerobicExerciseTime;
/// 无氧运动的累计时长 单位秒
@property (nonatomic) NSInteger anaerobicExerciseTime;
/// 极限锻炼的累计时长 单位秒
@property (nonatomic) NSInteger extremeExerciseTime;
/// 平均速度 单位km/h
@property (nonatomic) NSInteger avgSpeed;
/// 最快速度 单位km/h
@property (nonatomic) NSInteger maxSpeed;
/// 平均步幅
@property (nonatomic) NSInteger avgStepStride;
/// 最大步幅
@property (nonatomic) NSInteger maxStepStride;
/// 平均公里配速
@property (nonatomic) NSInteger kmSpeed;
/// 最快公里配速
@property (nonatomic) NSInteger fastKmSpeed;
/// 平均步频
@property (nonatomic) NSInteger avgStepFrequency;
/// 最大步频
@property (nonatomic) NSInteger maxStepFrequency;
/// 平均心率
@property (nonatomic) NSInteger avgHrValue;
/// 最大心率
@property (nonatomic) NSInteger maxHrValue;
/// 恢复时长 单位小时 app收到该数据之后，每过1小时需要自减1
@property (nonatomic) NSInteger recoverTime;
/// 最大摄氧量 单位 ml/kg/min
@property (nonatomic) NSInteger vo2max;
/// 训练效果 范围： 1.0 - 5.0 （扩大10倍传输）
@property (nonatomic) NSInteger trainingEffect;
/// 摄氧量等级 1：低等 2：业余 3：一般 4：平均 5：良好 6：优秀 7：专业
@property (nonatomic) NSInteger grade;
/// 步频详情个数
@property (nonatomic) NSInteger stepsFrequencyCount;
/// 英里配速个数 最大100
@property (nonatomic) NSInteger miSpeedCount;
/// 实时速度个数
@property (nonatomic) NSInteger realSpeedCount;
/// 实时配速个数
@property (nonatomic) NSInteger paceSpeedCount;
/// 公里配速详情个数 最大100
@property (nonatomic) NSInteger kmSpeedCount;
/// 本次动作训练个数
@property (nonatomic) NSInteger actionDataCount;
/// 课程内运动热量 单位千卡
@property (nonatomic) NSInteger inClassCalories;
/// 动作完成率 0—100
@property (nonatomic) NSInteger completionRate;
/// 心率控制率 0—100
@property (nonatomic) NSInteger hrCompletionRate;
/// 每公里耗时秒数 配速集合
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable kmSpeeds;
/// 步频集合 单位步/分钟
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable stepsFrequency;
/// 英里配速数组
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable itemsMiSpeed;
/// 实时速度数组 单位km/h
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable itemRealSpeed;
/// 实时配速数组
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable paceSpeedItems;
/// 动作完成内容
/// type : 动作类型  1快走；2慢跑; 3中速跑；4快跑
/// heart_con_value : 每个动作心率控制
/// time : 动作完成时间 单位秒
/// goal_time ：动作目标时间
@property (nonatomic, copy) NSArray<NSDictionary<NSString *, id> *> * _Nullable actionData;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel year:(NSInteger)year month:(NSInteger)month version:(NSInteger)version hrInterval:(NSInteger)hrInterval step:(NSInteger)step durations:(NSInteger)durations calories:(NSInteger)calories distance:(NSInteger)distance burnFatMins:(NSInteger)burnFatMins aerobicMins:(NSInteger)aerobicMins limitMins:(NSInteger)limitMins warmUp:(NSInteger)warmUp fatBurning:(NSInteger)fatBurning aerobicExercise:(NSInteger)aerobicExercise anaerobicExercise:(NSInteger)anaerobicExercise extremeExercise:(NSInteger)extremeExercise warmUpTime:(NSInteger)warmUpTime fatBurningTime:(NSInteger)fatBurningTime aerobicExerciseTime:(NSInteger)aerobicExerciseTime anaerobicExerciseTime:(NSInteger)anaerobicExerciseTime extremeExerciseTime:(NSInteger)extremeExerciseTime avgSpeed:(NSInteger)avgSpeed maxSpeed:(NSInteger)maxSpeed avgStepStride:(NSInteger)avgStepStride maxStepStride:(NSInteger)maxStepStride kmSpeed:(NSInteger)kmSpeed fastKmSpeed:(NSInteger)fastKmSpeed avgStepFrequency:(NSInteger)avgStepFrequency maxStepFrequency:(NSInteger)maxStepFrequency avgHrValue:(NSInteger)avgHrValue maxHrValue:(NSInteger)maxHrValue recoverTime:(NSInteger)recoverTime vo2max:(NSInteger)vo2max trainingEffect:(NSInteger)trainingEffect grade:(NSInteger)grade stepsFrequencyCount:(NSInteger)stepsFrequencyCount miSpeedCount:(NSInteger)miSpeedCount realSpeedCount:(NSInteger)realSpeedCount paceSpeedCount:(NSInteger)paceSpeedCount kmSpeedCount:(NSInteger)kmSpeedCount actionDataCount:(NSInteger)actionDataCount inClassCalories:(NSInteger)inClassCalories completionRate:(NSInteger)completionRate hrCompletionRate:(NSInteger)hrCompletionRate kmSpeeds:(NSArray<NSNumber *> * _Nullable)kmSpeeds stepsFrequency:(NSArray<NSNumber *> * _Nullable)stepsFrequency itemsMiSpeed:(NSArray<NSNumber *> * _Nullable)itemsMiSpeed itemRealSpeed:(NSArray<NSNumber *> * _Nullable)itemRealSpeed paceSpeedItems:(NSArray<NSNumber *> * _Nullable)paceSpeedItems actionData:(NSArray<NSDictionary<NSString *, id> *> * _Nullable)actionData OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// app发起运动 ble设备发送交换运动数据结束
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel25IDOAppBleEndExchangeModel")
@interface IDOAppBleEndExchangeModel : NSObject
/// 持续时长 单位s
@property (nonatomic) NSInteger duration;
/// 卡路里 单位大卡
@property (nonatomic) NSInteger calories;
/// 距离 单位0.01km
@property (nonatomic) NSInteger distance;
/// 平均心率
@property (nonatomic) NSInteger avgHr;
/// 最大心率
@property (nonatomic) NSInteger maxHr;
/// 脂肪燃烧时长 单位分钟
@property (nonatomic) NSInteger burnFatMins;
/// 心肺锻炼时长 单位分钟
@property (nonatomic) NSInteger aerobicMins;
/// 极限锻炼时长 单位分钟
@property (nonatomic) NSInteger limitMins;
/// 0:不保存，1:保存
@property (nonatomic) NSInteger isSave;
- (nonnull instancetype)initWithDuration:(NSInteger)duration calories:(NSInteger)calories distance:(NSInteger)distance avgHr:(NSInteger)avgHr maxHr:(NSInteger)maxHr burnFatMins:(NSInteger)burnFatMins aerobicMins:(NSInteger)aerobicMins limitMins:(NSInteger)limitMins isSave:(NSInteger)isSave OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// app发起运动 ble设备发送交换运动数据结束 app回复
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel30IDOAppBleEndReplyExchangeModel")
@interface IDOAppBleEndReplyExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 0: 成功; 1: 没有进入运动模式失败
@property (nonatomic) NSInteger errCode;
/// 持续时长 单位s
@property (nonatomic) NSInteger duration;
/// 卡路里 单位大卡
@property (nonatomic) NSInteger calories;
/// 距离 单位0.01km
@property (nonatomic) NSInteger distance;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel errCode:(NSInteger)errCode duration:(NSInteger)duration calories:(NSInteger)calories distance:(NSInteger)distance OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// app发起运动 ble设备发送交换运动数据暂停
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel27IDOAppBlePauseExchangeModel")
@interface IDOAppBlePauseExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// app发起运动 ble设备发送交换运动数据暂停 app回复
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel32IDOAppBlePauseReplyExchangeModel")
@interface IDOAppBlePauseReplyExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 0: 成功; 1: 没有进入运动模式失败
@property (nonatomic) NSInteger errCode;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel errCode:(NSInteger)errCode OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// app发起运动 ble设备发送交换运动数据恢复
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel29IDOAppBleRestoreExchangeModel")
@interface IDOAppBleRestoreExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// app发起运动 ble设备发送交换运动数据恢复 app回复
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel34IDOAppBleRestoreReplyExchangeModel")
@interface IDOAppBleRestoreReplyExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 0: 成功; 1: 没有进入运动模式失败
@property (nonatomic) NSInteger errCode;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel errCode:(NSInteger)errCode OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// app 发起运动结束
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel22IDOAppEndExchangeModel")
@interface IDOAppEndExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 持续时长（单位：s）
@property (nonatomic) NSInteger duration;
/// 卡路里，单位大卡
@property (nonatomic) NSInteger calories;
/// 距离（单位：米）
@property (nonatomic) NSInteger distance;
/// 0:不保存，1:保存
@property (nonatomic) NSInteger isSave;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel duration:(NSInteger)duration calories:(NSInteger)calories distance:(NSInteger)distance isSave:(NSInteger)isSave OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// app 发起运动结束 ble回复
SWIFT_CLASS("_TtC16protocol_channel27IDOAppEndReplyExchangeModel")
@interface IDOAppEndReplyExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 0:成功; 1:设备结束失败
@property (nonatomic) NSInteger errorCode;
/// 卡路里，单位大卡
@property (nonatomic) NSInteger calories;
/// 距离（单位：米）
@property (nonatomic) NSInteger distance;
/// 步数 (单位:步)
@property (nonatomic) NSInteger step;
/// 平均心率
@property (nonatomic) NSInteger avgHr;
/// 最大心率
@property (nonatomic) NSInteger maxHr;
/// 脂肪燃烧时长 单位分钟
@property (nonatomic) NSInteger burnFatMins;
/// 心肺锻炼时长 单位分钟
@property (nonatomic) NSInteger aerobicMins;
/// 极限锻炼时长 单位分钟
@property (nonatomic) NSInteger limitMins;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// app v3 多运动数交换中获取gps数据
SWIFT_CLASS("_TtC16protocol_channel26IDOAppGpsDataExchangeModel")
@interface IDOAppGpsDataExchangeModel : NSObject
/// 基础数据 日期、时间、运动类型
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 协议版本号
@property (nonatomic) NSInteger version;
/// 坐标点时间间隔 单位秒
@property (nonatomic) NSInteger intervalSecond;
/// 坐标点个数
@property (nonatomic) NSInteger gpsCount;
/// gps数据详情集合 [{‘latitude’:0,‘longitude’:0}]
@property (nonatomic, copy) NSArray<NSDictionary<NSString *, id> *> * _Nullable gpsData;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel version:(NSInteger)version intervalSecond:(NSInteger)intervalSecond gpsCount:(NSInteger)gpsCount gpsData:(NSArray<NSDictionary<NSString *, id> *> * _Nullable)gpsData OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel25IDOAppHrDataExchangeModel")
@interface IDOAppHrDataExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 协议版本号
@property (nonatomic) NSInteger version;
/// 心率数据数组长度 最大60
@property (nonatomic) NSInteger heartRateHistoryLen;
/// 心率间隔 单位秒
@property (nonatomic) NSInteger interval;
/// 心率数据数组 存一分钟的心率数据, 1s存一个
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable heartRates;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel version:(NSInteger)version heartRateHistoryLen:(NSInteger)heartRateHistoryLen interval:(NSInteger)interval heartRates:(NSArray<NSNumber *> * _Nullable)heartRates OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSNumber;
@class IDOAppIconItemModel;

/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel19IDOAppIconInfoModel")
@interface IDOAppIconInfoModel : NSObject
/// 版本号
@property (nonatomic, strong) NSNumber * _Nullable version;
/// icon宽度
@property (nonatomic, strong) NSNumber * _Nullable iconWidth;
/// icon高度
@property (nonatomic, strong) NSNumber * _Nullable iconHeight;
/// 颜色格式
@property (nonatomic, strong) NSNumber * _Nullable colorFormat;
/// 压缩块大小
@property (nonatomic, strong) NSNumber * _Nullable blockSize;
/// 总个数
@property (nonatomic, strong) NSNumber * _Nullable totalNum;
/// 包名详情集合
@property (nonatomic, copy) NSArray<IDOAppIconItemModel *> * _Nullable items;
- (nonnull instancetype)initWithVersion:(NSNumber * _Nullable)version iconWidth:(NSNumber * _Nullable)iconWidth iconHeight:(NSNumber * _Nullable)iconHeight colorFormat:(NSNumber * _Nullable)colorFormat blockSize:(NSNumber * _Nullable)blockSize totalNum:(NSNumber * _Nullable)totalNum items:(NSArray<IDOAppIconItemModel *> * _Nullable)items OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel19IDOAppIconItemModel")
@interface IDOAppIconItemModel : NSObject
/// 事件类型
@property (nonatomic, readonly) int64_t evtType;
/// 应用包名
@property (nonatomic, readonly, copy) NSString * _Nonnull packName;
/// 应用名称
@property (nonatomic, readonly, copy) NSString * _Nonnull appName;
/// icon 沙盒小图标地址 (设备使用)
@property (nonatomic, readonly, copy) NSString * _Nonnull iconLocalPath;
/// 每个包名给一个id 由0开始
@property (nonatomic, readonly, strong) NSNumber * _Nullable itemId;
/// 消息收到次数
@property (nonatomic, readonly, strong) NSNumber * _Nullable msgCount;
/// icon 云端地址
@property (nonatomic, readonly, copy) NSString * _Nullable iconCloudPath;
/// 消息图标更新状态
/// 0：不需要更新 1：需要更新icon ，2：需要更新app名，3：icon和app都需要更新
@property (nonatomic, readonly, strong) NSNumber * _Nullable state;
/// icon 沙盒大图标地址 (app 列表上展示)
@property (nonatomic, readonly, copy) NSString * _Nullable iconLocalPathBig;
/// 国家编码
@property (nonatomic, readonly, copy) NSString * _Nullable countryCode;
/// 应用版本号
@property (nonatomic, readonly, copy) NSString * _Nullable appVersion;
/// 是否已经下载APP信息
@property (nonatomic, readonly, strong) NSNumber * _Nullable isDownloadAppInfo;
/// 是否已经更新应用名称
@property (nonatomic, readonly, strong) NSNumber * _Nullable isUpdateAppName;
/// 是否已经更新应用图标
@property (nonatomic, readonly, strong) NSNumber * _Nullable isUpdateAppIcon;
/// 是否为默认应用
@property (nonatomic, readonly, strong) NSNumber * _Nullable isDefault;
- (nonnull instancetype)initWithEvtType:(int64_t)evtType packName:(NSString * _Nonnull)packName appName:(NSString * _Nonnull)appName iconLocalPath:(NSString * _Nonnull)iconLocalPath itemId:(NSNumber * _Nullable)itemId msgCount:(NSNumber * _Nullable)msgCount iconCloudPath:(NSString * _Nullable)iconCloudPath state:(NSNumber * _Nullable)state iconLocalPathBig:(NSString * _Nullable)iconLocalPathBig countryCode:(NSString * _Nullable)countryCode appVersion:(NSString * _Nullable)appVersion isDownloadAppInfo:(NSNumber * _Nullable)isDownloadAppInfo isUpdateAppName:(NSNumber * _Nullable)isUpdateAppName isUpdateAppIcon:(NSNumber * _Nullable)isUpdateAppIcon isDefault:(NSNumber * _Nullable)isDefault OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// app 交换运动数据
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel22IDOAppIngExchangeModel")
@interface IDOAppIngExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 持续时长 单位s
@property (nonatomic) NSInteger duration;
/// 卡路里 单位大卡
@property (nonatomic) NSInteger calories;
/// 距离 单位0.01km
@property (nonatomic) NSInteger distance;
/// 0: 全部有效、1: 距离无效、 2: GPS信号弱
@property (nonatomic) NSInteger status;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel duration:(NSInteger)duration calories:(NSInteger)calories distance:(NSInteger)distance status:(NSInteger)status OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// app 交换运动数据 ble回复
SWIFT_CLASS("_TtC16protocol_channel27IDOAppIngReplyExchangeModel")
@interface IDOAppIngReplyExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 卡路里 单位大卡
@property (nonatomic) NSInteger calories;
/// 距离 单位0.01km
@property (nonatomic) NSInteger distance;
/// 0: 全部有效、1: 距离无效、 2: GPS信号弱
@property (nonatomic) NSInteger status;
/// 步数
@property (nonatomic) NSInteger step;
/// 当前心率
@property (nonatomic) NSInteger currentHr;
/// 心率间隔 单位s
@property (nonatomic) NSInteger interval;
/// 序列号
@property (nonatomic) NSInteger hrSerial;
/// 心率值数据
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable hrJson;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel calories:(NSInteger)calories distance:(NSInteger)distance status:(NSInteger)status step:(NSInteger)step currentHr:(NSInteger)currentHr interval:(NSInteger)interval hrSerial:(NSInteger)hrSerial hrJson:(NSArray<NSNumber *> * _Nullable)hrJson OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// app v3交换运动数据
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel24IDOAppIngV3ExchangeModel")
@interface IDOAppIngV3ExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 协议版本号
@property (nonatomic) NSInteger version;
/// 0: 表示信号弱 2: 表示信号强
@property (nonatomic) NSInteger signal;
/// app 距离
@property (nonatomic) NSInteger distance;
/// app计算显示实时配速，单位km/h，100倍
@property (nonatomic) NSInteger speed;
/// 持续时间
@property (nonatomic) NSInteger duration;
/// 卡路里
@property (nonatomic) NSInteger calories;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel version:(NSInteger)version signal:(NSInteger)signal distance:(NSInteger)distance speed:(NSInteger)speed duration:(NSInteger)duration calories:(NSInteger)calories OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// app v3交换运动数据 ble回复
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel29IDOAppIngV3ReplyExchangeModel")
@interface IDOAppIngV3ReplyExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 协议版本号
@property (nonatomic) NSInteger version;
/// 心率数据
@property (nonatomic) NSInteger heartRate;
/// 距离 单位根据单位设置的单位显示
@property (nonatomic) NSInteger distance;
/// 持续时间 秒钟
@property (nonatomic) NSInteger duration;
/// 动态卡路里
@property (nonatomic) NSInteger realTimeCalories;
/// 实时速度，单位km/h，扩大100倍
@property (nonatomic) NSInteger realTimeSpeed;
/// 实时公里配速 单位s/公里
@property (nonatomic) NSInteger kmSpeed;
/// 步数
@property (nonatomic) NSInteger steps;
/// 主泳姿
@property (nonatomic) NSInteger swimPosture;
/// 状态 0：无效 1：开始 2：手动暂停 3：结束 4：自动暂停
@property (nonatomic) NSInteger status;
/// 实时的配速，单位秒，5秒使用滑动平均，第5秒使用1-5秒数据，第6秒使用2-6秒数据
@property (nonatomic) NSInteger realTimeSpeedPace;
/// 有氧训练效果等级  单位无  范围 0-50 扩大10倍传输
@property (nonatomic) NSInteger trainingEffect;
/// 无氧运动训练效果等级 单位无  范围 0-50 扩大10倍传输
@property (nonatomic) NSInteger anaerobicTrainingEffect;
/// 动作类型
/// 1快走
/// 2慢跑
/// 3中速跑
/// 4快跑
/// 5结束课程运动 （还要等待用户是否有自由运动）
/// 6课程结束后自由运动（此字段当operate为5起作用）
/// 运动累积时间=课程内训练时间+课程结束后计时
@property (nonatomic) NSInteger actionType;
/// 需要固件开启功能表
/// action_type = 1—5时，该字段是运动倒计时时间（注：时间递减）
/// action_type = 6时，该字段是课程结束后计时（注：时间递增）
@property (nonatomic) NSInteger countHour;
/// 需要固件开启功能表
/// action_type = 1—5时，该字段是运动倒计时时间（注：时间递减）
/// action_type = 6时，该字段是课程结束后计时（注：时间递增）
@property (nonatomic) NSInteger countMinute;
/// 需要固件开启功能表
/// action_type = 1—5时，该字段是运动倒计时时间（注：时间递减）
/// action_type = 6时，该字段是课程结束后计时（注：时间递增）
@property (nonatomic) NSInteger countSecond;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel version:(NSInteger)version heartRate:(NSInteger)heartRate distance:(NSInteger)distance duration:(NSInteger)duration realTimeCalories:(NSInteger)realTimeCalories realTimeSpeed:(NSInteger)realTimeSpeed kmSpeed:(NSInteger)kmSpeed steps:(NSInteger)steps swimPosture:(NSInteger)swimPosture status:(NSInteger)status realTimeSpeedPace:(NSInteger)realTimeSpeedPace trainingEffect:(NSInteger)trainingEffect anaerobicTrainingEffect:(NSInteger)anaerobicTrainingEffect actionType:(NSInteger)actionType countHour:(NSInteger)countHour countMinute:(NSInteger)countMinute countSecond:(NSInteger)countSecond OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// app 操作计划运动
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel30IDOAppOperatePlanExchangeModel")
@interface IDOAppOperatePlanExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 1:开始运动，2：暂停运动, 3:恢复运动 ，4：结束运动, 5: 切换动作
@property (nonatomic) NSInteger operate;
/// 训练的课程日期偏移 从0开始
@property (nonatomic) NSInteger trainingOffset;
/// 计划类型：1：跑步计划3km，2：跑步计划5km，
/// 3：跑步计划10km，4：半程马拉松训练（二期，5：马拉松训练（二期）
@property (nonatomic) NSInteger planType;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel operate:(NSInteger)operate trainingOffset:(NSInteger)trainingOffset planType:(NSInteger)planType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// app 操作计划运动 ble回复
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel35IDOAppOperatePlanReplyExchangeModel")
@interface IDOAppOperatePlanReplyExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 计划类型：1：跑步计划3km，2：跑步计划5km，
/// 3：跑步计划10km，4：半程马拉松训练（二期，5：马拉松训练（二期）
@property (nonatomic) NSInteger planType;
/// 1:开始运动，2：暂停运动, 3:恢复运动 ，4：结束运动, 5: 切换动作
@property (nonatomic) NSInteger operate;
/// 动作类型  1:快走；2:慢跑；3:中速跑；4:快跑  ；
/// 5:结束课程运动 （还要等待用户是否有自由运动）；
/// 6:课程结束后自由运动 （此字段当operate为5起作用）
@property (nonatomic) NSInteger actionType;
/// 0为成功，非0为失败
@property (nonatomic) NSInteger errorCode;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel planType:(NSInteger)planType operate:(NSInteger)operate actionType:(NSInteger)actionType errorCode:(NSInteger)errorCode OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// app 交换运动数据暂停
SWIFT_CLASS("_TtC16protocol_channel24IDOAppPauseExchangeModel")
@interface IDOAppPauseExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nonnull baseModel;
/// 暂停时
@property (nonatomic) NSInteger pauseHour;
/// 暂停分
@property (nonatomic) NSInteger pauseMinute;
/// 暂停秒
@property (nonatomic) NSInteger pauseSecond;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nonnull)baseModel OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// app 交换运动数据暂停 ble回复
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel29IDOAppPauseReplyExchangeModel")
@interface IDOAppPauseReplyExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 暂停错误码 0:成功 非0:失败
@property (nonatomic) NSInteger errCode;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel errCode:(NSInteger)errCode OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// app 交换运动数据恢复
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel26IDOAppRestoreExchangeModel")
@interface IDOAppRestoreExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// app 交换运动数据恢复 ble回复
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel31IDOAppRestoreReplyExchangeModel")
@interface IDOAppRestoreReplyExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 暂停错误码 0:成功 非0:失败
@property (nonatomic) NSInteger errCode;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel errCode:(NSInteger)errCode OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// app 开始发起运动
SWIFT_CLASS("_TtC16protocol_channel24IDOAppStartExchangeModel")
@interface IDOAppStartExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 目标类型
@property (nonatomic) NSInteger targetType;
/// 目标值
@property (nonatomic) NSInteger targetValue;
/// 是否强制开始 0:不强制,1:强制
@property (nonatomic) NSInteger forceStart;
/// 最大摄氧量 单位 ml/kg/min
@property (nonatomic) NSInteger vo2max;
/// 恢复时长：单位小时
@property (nonatomic) NSInteger recoverTime;
/// 上个月平均每周的运动时间 单位分钟
@property (nonatomic) NSInteger avgWeekActivityTime;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel targetType:(NSInteger)targetType targetValue:(NSInteger)targetValue forceStart:(NSInteger)forceStart vo2max:(NSInteger)vo2max recoverTime:(NSInteger)recoverTime avgWeekActivityTime:(NSInteger)avgWeekActivityTime OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// app 开始发起运动 ble回复
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel29IDOAppStartReplyExchangeModel")
@interface IDOAppStartReplyExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 0:成功; 1:设备已经进入运动模式失败;
/// 2:设备电量低失败;3:手环正在充电
/// 4:正在使用Alexa 5:通话中
@property (nonatomic) NSInteger retCode;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel retCode:(NSInteger)retCode OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Get battery information event number
SWIFT_CLASS("_TtC16protocol_channel19IDOBatteryInfoModel")
@interface IDOBatteryInfoModel : NSObject
/// Battery type: 0: Rechargeable lithium battery, 1: Button battery
@property (nonatomic) NSInteger type;
/// Voltage
@property (nonatomic) NSInteger voltage;
/// Battery status
/// 0: Normal
/// 1: Charging
/// 2: Charging complete
/// 3: Low battery
@property (nonatomic) NSInteger status;
/// Level
@property (nonatomic) NSInteger level;
/// Last charging time, year
@property (nonatomic) NSInteger lastChargingYear;
/// Last charging time, month
@property (nonatomic) NSInteger lastChargingMonth;
/// Last charging time, day
@property (nonatomic) NSInteger lastChargingDay;
/// Last charging time, hour
@property (nonatomic) NSInteger lastChargingHour;
/// Last charging time, minute
@property (nonatomic) NSInteger lastChargingMinute;
/// Last charging time, second
@property (nonatomic) NSInteger lastChargingSecond;
/// 0: Invalid
/// 1: Normal mode (non-power saving mode)
/// 2: Power saving mode
@property (nonatomic) NSInteger mode;
- (nonnull instancetype)initWithType:(NSInteger)type voltage:(NSInteger)voltage status:(NSInteger)status level:(NSInteger)level lastChargingYear:(NSInteger)lastChargingYear lastChargingMonth:(NSInteger)lastChargingMonth lastChargingDay:(NSInteger)lastChargingDay lastChargingHour:(NSInteger)lastChargingHour lastChargingMinute:(NSInteger)lastChargingMinute lastChargingSecond:(NSInteger)lastChargingSecond mode:(NSInteger)mode OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// 绑定状态
typedef SWIFT_ENUM(NSInteger, IDOBindStatus, open) {
/// 绑定失败
  IDOBindStatusFailed = 0,
/// 绑定成功
  IDOBindStatusSuccessful = 1,
/// 已经绑定
  IDOBindStatusBinded = 2,
/// 需要授权码绑定
  IDOBindStatusNeedAuth = 3,
/// 拒绝绑定
  IDOBindStatusRefusedBind = 4,
/// 绑定错误设备
  IDOBindStatusWrongDevice = 5,
/// 授权码校验失败
  IDOBindStatusAuthCodeCheckFailed = 6,
/// 取消绑定
  IDOBindStatusCanceled = 7,
/// 绑定失败（获取功能表失败)
  IDOBindStatusFailedOnGetFunctionTable = 8,
/// 绑定失败（获取设备信息失败)
  IDOBindStatusFailedOnGetDeviceInfo = 9,
/// 绑定超时（支持该功能的设备专用）
  IDOBindStatusTimeout = 10,
/// 新账户绑定，用户确定删除设备数据（支持该功能的设备专用）
  IDOBindStatusAgreeDeleteDeviceData = 11,
/// 新账户绑定，用户不删除设备数据，绑定失败（支持该功能的设备专用）
  IDOBindStatusDenyDeleteDeviceData = 12,
/// 新账户绑定，用户不选择，设备超时（支持该功能的设备专用）
  IDOBindStatusTimeoutOnNewAccount = 13,
/// 设备同意配对(绑定)请求，等待APP下发配对结果（支持该功能的设备专用）
  IDOBindStatusNeedConfirmByApp = 14,
};


SWIFT_CLASS("_TtC16protocol_channel14IDOBleBeepItem")
@interface IDOBleBeepItem : NSObject
@property (nonatomic, copy) NSString * _Nonnull name;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel15IDOBleBeepModel")
@interface IDOBleBeepModel : NSObject
/// Error code, 0 for success, non-zero for failure
@property (nonatomic) NSInteger errCode;
@property (nonatomic, copy) NSArray<IDOBleBeepItem *> * _Nullable items;
- (nonnull instancetype)initWithErrCode:(NSInteger)errCode items:(NSArray<IDOBleBeepItem *> * _Nonnull)items OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSData;

SWIFT_CLASS("_TtC16protocol_channel10IDOBleData")
@interface IDOBleData : NSObject
/// 响应数据
@property (nonatomic, copy) NSData * _Nullable data;
/// 设备Mac地址
@property (nonatomic, copy) NSString * _Nullable macAddress;
/// 0 BLE数据, 1 SPP数据
@property (nonatomic) NSInteger type;
- (nonnull instancetype)initWithData:(NSData * _Nullable)data macAddress:(NSString * _Nullable)macAddress type:(NSInteger)type OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class IDODeviceModel;
@class IDOBluetoothStateModel;
@class IDODeviceStateModel;
@class IDOReceiveData;

SWIFT_PROTOCOL("_TtP16protocol_channel14IDOBleDelegate_")
@protocol IDOBleDelegate <NSObject>
/// 搜索设备结果
- (void)scanResultWithList:(NSArray<IDODeviceModel *> * _Nullable)list;
/// 蓝牙状态
- (void)bluetoothStateWithState:(IDOBluetoothStateModel * _Nonnull)state;
/// 设备状态状态
- (void)deviceStateWithState:(IDODeviceStateModel * _Nonnull)state;
/// 接收到的蓝牙数据
- (void)receiveDataWithData:(IDOReceiveData * _Nonnull)data;
@end


/// ble发起的运动 ble设备发送交换运动数据结束
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel22IDOBleEndExchangeModel")
@interface IDOBleEndExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// ble发起的运动 ble设备发送交换运动数据结束 app回复
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel27IDOBleEndReplyExchangeModel")
@interface IDOBleEndReplyExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 0: 成功 非0: 失败
@property (nonatomic) NSInteger retCode;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel retCode:(NSInteger)retCode OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// ble发起的运动 ble设备交换运动数据过程中
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel22IDOBleIngExchangeModel")
@interface IDOBleIngExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 距离 单位：0.01km
@property (nonatomic) NSInteger distance;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel distance:(NSInteger)distance OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// ble发起的运动 ble设备交换运动数据过程中 app回复
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel27IDOBleIngReplyExchangeModel")
@interface IDOBleIngReplyExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 距离 单位：0.01km
@property (nonatomic) NSInteger distance;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel distance:(NSInteger)distance OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol IDODfuDelegate;
@class IDOWriteStateModel;
@class IDODfuConfig;

/// 蓝牙接口
SWIFT_PROTOCOL("_TtP16protocol_channel15IDOBleInterface_")
@protocol IDOBleInterface
/// 添加蓝牙代理
- (void)addBleDelegateWithApi:(id <IDOBleDelegate> _Nullable)api;
/// 添加DFU升级 (nordic)
- (void)addDfuDelegateWithApi:(id <IDODfuDelegate> _Nullable)api;
/// 开始搜索
/// macAddress（Android）:根据Mac地址搜索
/// 返回指定搜索的设备，如未指定返回null
- (void)startScanWithMacAddress:(NSString * _Nullable)macAddress completion:(void (^ _Nonnull)(NSArray<IDODeviceModel *> * _Nullable))completion;
/// 搜索筛选条件
/// \code
/// deviceName: 只搜索deviceName的设备
/// deviceID：只搜索deviceID的设备
/// macAddress：只搜索macAddress的设备
/// uuid：只搜索uuid的设备
///
/// \endcode
- (void)scanFilterWithDeviceName:(NSArray<NSString *> * _Nullable)deviceName deviceID:(NSArray<NSNumber *> * _Nullable)deviceID macAddress:(NSArray<NSString *> * _Nullable)macAddress uuid:(NSArray<NSString *> * _Nullable)uuid;
/// 停止搜索
- (void)stopScan;
/// 连接
/// device: Mac地址必传，iOS要带上uuid，最好使用搜索返回的对象
- (void)connectWithDevice:(IDODeviceModel * _Nullable)device;
/// 使用这个重连设备
- (void)autoConnectWithDevice:(IDODeviceModel * _Nullable)device;
/// 取消连接
- (void)cancelConnectWithMacAddress:(NSString * _Nullable)macAddress completion:(void (^ _Nonnull)(BOOL))completion;
/// 获取蓝牙状态
- (void)getBluetoothStateWithCompletion:(void (^ _Nonnull)(IDOBluetoothStateModel * _Nonnull))completion;
/// 获取设备连接状态
- (void)getDeviceStateWithDevice:(IDODeviceModel * _Nullable)device completion:(void (^ _Nonnull)(IDODeviceStateModel * _Nonnull))completion;
/// 发送数据
/// \param data 数据
///
/// \param device 发送数据的设备
///
/// \param type 0 BLE数据, 1 SPP数据
///
/// \param platform 0 爱都, 1 恒玄, 2 VC
///
/// \param completion 结果 IDOWriteStateModel
///
- (void)writeDataWithData:(NSData * _Nonnull)data device:(IDODeviceModel * _Nonnull)device type:(NSInteger)type platform:(NSInteger)platform completion:(void (^ _Nonnull)(IDOWriteStateModel * _Nonnull))completion;
/// bt配对（android）
- (void)setBtPairWithDevice:(IDODeviceModel * _Nonnull)device;
/// 取消配对（android）
- (void)cancelPairWithDevice:(IDODeviceModel * _Nullable)device;
/// 连接SPP
- (void)connectSPPWithBtMacAddress:(NSString * _Nonnull)btMacAddress;
/// 断开SPP
- (void)disconnectSPPWithBtMacAddress:(NSString * _Nonnull)btMacAddress;
/// 发起dfu升级
- (void)startNordicDFUWithConfig:(IDODfuConfig * _Nonnull)config;
/// 导出ble日志，返回压缩后日志zip文件绝对路径
- (void)exportLogWithCompletion:(void (^ _Nonnull)(NSString * _Nullable))completion;
@end


/// ble 操作计划运动
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel30IDOBleOperatePlanExchangeModel")
@interface IDOBleOperatePlanExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 1:开始运动，2：暂停运动, 3:恢复运动 ，4：结束运动, 5: 切换动作
@property (nonatomic) NSInteger operate;
/// 计划类型：1：跑步计划3km，2：跑步计划5km，
/// 3：跑步计划10km，4：半程马拉松训练（二期，5：马拉松训练（二期）
@property (nonatomic) NSInteger planType;
/// 动作类型  1:快走；2:慢跑；3:中速跑；4:快跑  ；
/// 5:结束课程运动 （还要等待用户是否有自由运动）；
/// 6:课程结束后自由运动 （此字段当operate为5起作用）
@property (nonatomic) NSInteger actionType;
/// 0为成功，非0为失败
@property (nonatomic) NSInteger errorCode;
/// 训练课程年份
@property (nonatomic) NSInteger trainingYear;
/// 训练课程月份
@property (nonatomic) NSInteger trainingMonth;
/// 训练课程日期
@property (nonatomic) NSInteger trainingDay;
/// 动作目标时间  单位秒
@property (nonatomic) NSInteger time;
/// 心率范围低值
@property (nonatomic) NSInteger lowHeart;
/// 心率范围高值
@property (nonatomic) NSInteger heightHeart;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel operate:(NSInteger)operate planType:(NSInteger)planType actionType:(NSInteger)actionType errorCode:(NSInteger)errorCode trainingYear:(NSInteger)trainingYear trainingMonth:(NSInteger)trainingMonth trainingDay:(NSInteger)trainingDay time:(NSInteger)time lowHeart:(NSInteger)lowHeart heightHeart:(NSInteger)heightHeart OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// ble 操作计划运动 app回复
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel35IDOBleOperatePlanReplyExchangeModel")
@interface IDOBleOperatePlanReplyExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 1:开始运动，2：暂停运动, 3:恢复运动 ，4：结束运动, 5: 切换动作
@property (nonatomic) NSInteger operate;
/// 计划类型：1：跑步计划3km，2：跑步计划5km，
/// 3：跑步计划10km，4：半程马拉松训练（二期，5：马拉松训练（二期）
@property (nonatomic) NSInteger planType;
/// 动作类型  1:快走；2:慢跑；3:中速跑；4:快跑  ；
/// 5:结束课程运动 （还要等待用户是否有自由运动）；
/// 6:课程结束后自由运动 （此字段当operate为5起作用）
@property (nonatomic) NSInteger actionType;
/// 0为成功，非0为失败
@property (nonatomic) NSInteger errorCode;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel operate:(NSInteger)operate planType:(NSInteger)planType actionType:(NSInteger)actionType errorCode:(NSInteger)errorCode OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// ble发起的运动 ble设备发送交换运动数据暂停
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel24IDOBlePauseExchangeModel")
@interface IDOBlePauseExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// ble发起的运动 ble设备发送交换运动数据暂停 app回复
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel29IDOBlePauseReplyExchangeModel")
@interface IDOBlePauseReplyExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 0: 成功 非0: 失败
@property (nonatomic) NSInteger retCode;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel retCode:(NSInteger)retCode OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// ble发起的运动 ble设备发送交换运动数据恢复
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel26IDOBleRestoreExchangeModel")
@interface IDOBleRestoreExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// ble发起的运动 ble设备发送交换运动数据恢复 app回复
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel31IDOBleRestoreReplyExchangeModel")
@interface IDOBleRestoreReplyExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 0: 成功 非0: 失败
@property (nonatomic) NSInteger retCode;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel retCode:(NSInteger)retCode OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// ble发起运动 ble设备发送交换运动数据开始
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel24IDOBleStartExchangeModel")
@interface IDOBleStartExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 1：请求app打开gps 2：发起运动请求
@property (nonatomic) NSInteger operate;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel operate:(NSInteger)operate OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// ble发起的运动 ble设备发送交换运动数据开始 app回复
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel29IDOBleStartReplyExchangeModel")
@interface IDOBleStartReplyExchangeModel : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 1：请求app打开gps 2：发起运动请求
@property (nonatomic) NSInteger operate;
/// 0: 成功 非0: 失败
@property (nonatomic) NSInteger retCode;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel operate:(NSInteger)operate retCode:(NSInteger)retCode OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Set phone volume for device event number
SWIFT_CLASS("_TtC16protocol_channel21IDOBleVoiceParamModel")
@interface IDOBleVoiceParamModel : NSObject
/// Total volume
@property (nonatomic) NSInteger totalVolume;
/// Current volume
@property (nonatomic) NSInteger currentVolume;
- (nonnull instancetype)initWithTotalVolume:(NSInteger)totalVolume currentVolume:(NSInteger)currentVolume OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// 扫描状态
typedef SWIFT_ENUM(NSInteger, IDOBluetoothScanType, open) {
/// 扫描中
  IDOBluetoothScanTypeScanning = 0,
/// 扫描结束
  IDOBluetoothScanTypeStop = 1,
/// 找到设备（android）
  IDOBluetoothScanTypeFind = 2,
};

enum IDOBluetoothStateType : NSInteger;

SWIFT_CLASS("_TtC16protocol_channel22IDOBluetoothStateModel")
@interface IDOBluetoothStateModel : NSObject
@property (nonatomic, readonly) enum IDOBluetoothStateType type;
@property (nonatomic, readonly) enum IDOBluetoothScanType scanType;
- (nonnull instancetype)initWithType:(enum IDOBluetoothStateType)type scanType:(enum IDOBluetoothScanType)scanType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// 蓝牙状态
typedef SWIFT_ENUM(NSInteger, IDOBluetoothStateType, open) {
/// 未知
  IDOBluetoothStateTypeUnknown = 0,
/// 系统服务重启中
  IDOBluetoothStateTypeResetting = 1,
/// 不支持
  IDOBluetoothStateTypeUnsupported = 2,
/// 未授权
  IDOBluetoothStateTypeUnauthorized = 3,
/// 蓝牙关闭
  IDOBluetoothStateTypePoweredOff = 4,
/// 蓝牙打开
  IDOBluetoothStateTypePoweredOn = 5,
};


/// Get blood pressure algorithm version information event number
SWIFT_CLASS("_TtC16protocol_channel20IDOBpAlgVersionModel")
@interface IDOBpAlgVersionModel : NSObject
/// Firmware blood pressure algorithm version1
@property (nonatomic) NSInteger bpVersion1;
/// Firmware blood pressure algorithm version2
@property (nonatomic) NSInteger bpVersion2;
/// Firmware blood pressure algorithm version3
@property (nonatomic) NSInteger bpVersion3;
- (nonnull instancetype)initWithBpVersion1:(NSInteger)bpVersion1 bpVersion2:(NSInteger)bpVersion2 bpVersion3:(NSInteger)bpVersion3 OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel20IDOBpCalControlModel")
@interface IDOBpCalControlModel : NSObject
/// Error code: 0 for success, non-zero for failure
@property (nonatomic) NSInteger errorCode;
/// Operation
/// \code
/// 0: Invalid
/// 1: Start blood pressure calibration
/// 2: Stop blood pressure calibration
/// 3: Get feature vector
///
/// \endcode
@property (nonatomic) NSInteger operate;
/// Number of high blood pressure PPG feature vectors
/// Valid when operate=3
@property (nonatomic) NSInteger sbpPpgFeatureNum;
/// Number of low blood pressure PPG feature vectors
/// Valid when operate=3
@property (nonatomic) NSInteger dbpPpgFeatureNum;
/// Array of high blood pressure PPG feature vectors
/// Valid when operate=3
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull sbpPpgFeatureItems;
/// Array of low blood pressure PPG feature vectors
/// Valid when operate=3
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull dbpPpgFeatureItems;
- (nonnull instancetype)initWithErrorCode:(NSInteger)errorCode operate:(NSInteger)operate sbpPpgFeatureNum:(NSInteger)sbpPpgFeatureNum dbpPpgFeatureNum:(NSInteger)dbpPpgFeatureNum sbpPpgFeatureItems:(NSArray<NSNumber *> * _Nonnull)sbpPpgFeatureItems dbpPpgFeatureItems:(NSArray<NSNumber *> * _Nonnull)dbpPpgFeatureItems OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Blood pressure calibration event number
SWIFT_CLASS("_TtC16protocol_channel21IDOBpCalibrationModel")
@interface IDOBpCalibrationModel : NSObject
/// 0: Success
/// 1: Successfully entered calibration mode, calibration in progress
/// 2: In exercise mode
/// 3: Device busy
/// 4: Invalid status
@property (nonatomic) NSInteger retCode;
- (nonnull instancetype)initWithRetCode:(NSInteger)retCode OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Blood pressure calibration event number
SWIFT_CLASS("_TtC16protocol_channel26IDOBpCalibrationParamModel")
@interface IDOBpCalibrationParamModel : NSObject
/// 1: Blood pressure calibration settings
/// 2: Blood pressure calibration query result
@property (nonatomic) NSInteger flag;
/// Systolic pressure
@property (nonatomic) NSInteger diastolic;
/// Diastolic pressure
@property (nonatomic) NSInteger systolic;
- (nonnull instancetype)initWithFlag:(NSInteger)flag diastolic:(NSInteger)diastolic systolic:(NSInteger)systolic OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Blood pressure measurement event number
SWIFT_CLASS("_TtC16protocol_channel21IDOBpMeasurementModel")
@interface IDOBpMeasurementModel : NSObject
/// 0: Not supported
/// 1: Measurement in progress
/// 2: Measurement successful
/// 3: Measurement failed
/// 4: Device in exercise mode
@property (nonatomic) NSInteger status;
/// Systolic blood pressure
@property (nonatomic) NSInteger systolicBp;
/// Diastolic blood pressure
@property (nonatomic) NSInteger diastolicBp;
- (nonnull instancetype)initWithStatus:(NSInteger)status systolicBp:(NSInteger)systolicBp diastolicBp:(NSInteger)diastolicBp OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Blood pressure measurement event number
SWIFT_CLASS("_TtC16protocol_channel26IDOBpMeasurementParamModel")
@interface IDOBpMeasurementParamModel : NSObject
/// 1: Start measurement
/// 2: End measurement
/// 3: Get blood pressure data
@property (nonatomic) NSInteger flag;
- (nonnull instancetype)initWithFlag:(NSInteger)flag OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum IDOStatusNotification : NSInteger;
@class IDODeviceNotificationModel;

SWIFT_PROTOCOL("_TtP16protocol_channel17IDOBridgeDelegate_")
@protocol IDOBridgeDelegate <NSObject>
/// 监听状态通知（SDK)
- (void)listenStatusNotificationWithStatus:(enum IDOStatusNotification)status;
/// 监听设备主动通知/控制事件 (设备)
- (void)listenDeviceNotificationWithModel:(IDODeviceNotificationModel * _Nonnull)model;
/// 根据设备macAddress查询绑定状态（由APP端提供） true: 已绑定，false：未绑定
- (BOOL)checkDeviceBindStateWithMacAddress:(NSString * _Nonnull)macAddress SWIFT_WARN_UNUSED_RESULT;
@end

enum IDOLogType : NSInteger;

/// 桥接接口
SWIFT_PROTOCOL("_TtP16protocol_channel18IDOBridgeInterface_")
@protocol IDOBridgeInterface
/// 注册,程序开始运行调用（全局只调用一次即可）
/// \param delegate 代理
///
/// \param logType log等级
///
- (void)setupBridgeWithDelegate:(id <IDOBridgeDelegate> _Nonnull)delegate logType:(enum IDOLogType)logType;
@end


/// Query BT pairing switch, connection, A2DP connection, HFP connection status (Only Supported on devices with BT Bluetooth) event number
SWIFT_CLASS("_TtC16protocol_channel16IDOBtNoticeModel")
@interface IDOBtNoticeModel : NSObject
/// 1: BT connection status on
/// 0: BT connection status off
/// -1: Invalid
@property (nonatomic) NSInteger btConnectStates;
/// 1: BT pairing status on
/// 0: BT pairing status off
/// -1: Invalid
@property (nonatomic) NSInteger btPairStates;
/// 1: A2DP connection status on
/// 0: A2DP connection status off
/// -1: Invalid
@property (nonatomic) NSInteger a2dpConnectStates;
/// 1: HFP connection status on
/// 0: HFP connection status off
/// -1: Invalid
@property (nonatomic) NSInteger hfpConnectStates;
- (nonnull instancetype)initWithBtConnectStates:(NSInteger)btConnectStates btPairStates:(NSInteger)btPairStates a2dpConnectStates:(NSInteger)a2dpConnectStates hfpConnectStates:(NSInteger)hfpConnectStates OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP16protocol_channel14IDOCancellable_")
@protocol IDOCancellable
@property (nonatomic, readonly) BOOL isCancelled;
- (void)cancel;
@end


SWIFT_CLASS("_TtC16protocol_channel22IDOCmdGetResponseModel")
@interface IDOCmdGetResponseModel : NSObject
/// Switch status
/// 1: On
/// 0: Off
/// -1:Not Support
@property (nonatomic) NSInteger onOff;
- (nonnull instancetype)initOnOff:(NSInteger)onOff OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol IDODeviceInterface;
@protocol IDOFuncTableInterface;
enum NoticeMessageType : NSInteger;

/// 指令
SWIFT_PROTOCOL("_TtP16protocol_channel15IDOCmdInterface_")
@protocol IDOCmdInterface
/// 是否在绑定中 (绑定中，切换设备将受到限制）
@property (nonatomic, readonly) BOOL isBinding;
/// 设备绑定
- (void)bindWithOsVersion:(NSInteger)osVersion onDeviceInfo:(void (^ _Nullable)(id <IDODeviceInterface> _Nonnull))onDeviceInfo onFuncTable:(void (^ _Nullable)(id <IDOFuncTableInterface> _Nonnull))onFuncTable completion:(void (^ _Nonnull)(enum IDOBindStatus))completion;
/// 取消当前绑定请求（仅限需要app确认绑定结果的设备使用）
- (void)cancelBind;
/// APP下发绑定结果（仅限需要app确认绑定结果的设备使用）
/// 唯一使用场景：bind(…)方法返回IDOBindStatus.needConfirmByApp时调用
- (void)appMarkBindResultWithSuccess:(BOOL)success;
/// 发起解绑
/// macAddress: 设备Mac地址
/// isForceRemove：强制删除设备，设备无响应也删除
- (void)unbindWithMacAddress:(NSString * _Nonnull)macAddress isForceRemove:(BOOL)isForceRemove completion:(void (^ _Nonnull)(BOOL))completion;
/// 发送授权配对码
/// code 配对码
/// osVersion: 系统版本 (取主版本号)
- (void)setAuthCodeWithCode:(NSString * _Nonnull)code osVersion:(NSInteger)osVersion completion:(void (^ _Nonnull)(BOOL))completion;
/// v2发送来电提醒以及来电电话号码和来电联系人(部分设备实现)
/// \param contactText 联系人名称
///
/// \param phoneNumber 号码
///
///
/// returns:
/// 是否成功
- (void)setV2CallEvtWithContactText:(NSString * _Nonnull)contactText phoneNumber:(NSString * _Nonnull)phoneNumber completion:(void (^ _Nonnull)(BOOL))completion;
/// v2发送信息提醒以及信息内容(部分设备实现)
/// \param type 信息类型
///
/// \param contactText 通知内容
///
/// \param phoneNumber 号码
///
/// \param dataText 消息内容
///
///
/// returns:
/// 是否成功
- (void)setV2NoticeEvtWithType:(enum NoticeMessageType)type contactText:(NSString * _Nonnull)contactText phoneNumber:(NSString * _Nonnull)phoneNumber dataText:(NSString * _Nonnull)dataText completion:(void (^ _Nonnull)(BOOL))completion;
/// v2发送来电提醒状态为来电已接, 告诉设备停止提醒用户(部分设备实现)
///
/// returns:
/// 是否成功
- (void)stopV2CallEvtWithCompletion:(void (^ _Nonnull)(BOOL))completion;
/// v2发送来电提醒状态为来电已拒, 告诉设备停止提醒用户(部分设备实现)
///
/// returns:
/// 是否成功
- (void)missedV2MissedCallEvtWithCompletion:(void (^ _Nonnull)(BOOL))completion;
@end


SWIFT_CLASS("_TtC16protocol_channel22IDOCmdOTAResponseModel")
@interface IDOCmdOTAResponseModel : NSObject
/// 0: 进入OTA成功
/// 1: 失败：电量过低
/// 2: 失败：设备不支持
/// 3: 失败：参数不正确
/// 0: Enter OTA successfully
/// 1: Failure: Battery is too low
/// 2: Failure: Device not supported
/// 3: Failure: Incorrect parameters
@property (nonatomic) NSInteger errFlag;
- (nonnull instancetype)initWithErrFlag:(NSInteger)errFlag OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel22IDOCmdSetResponseModel")
@interface IDOCmdSetResponseModel : NSObject
/// 0: Success， other: Failed
@property (nonatomic) NSInteger isSuccess;
- (nonnull instancetype)initWithIsSuccess:(NSInteger)isSuccess OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// 连接错误
typedef SWIFT_ENUM(NSInteger, IDOConnectErrorType, open) {
/// 无状态
  IDOConnectErrorTypeNone = 0,
/// UUID或Mac地址异常
  IDOConnectErrorTypeAbnormalUUIDMacAddress = 1,
/// 蓝牙关闭
  IDOConnectErrorTypeBluetoothOff = 2,
/// 主动断开连接
  IDOConnectErrorTypeConnectCancel = 3,
/// 连接失败
  IDOConnectErrorTypeFail = 4,
/// 连接超时
  IDOConnectErrorTypeTimeOut = 5,
/// 发现服务失败
  IDOConnectErrorTypeServiceFail = 6,
/// 发现特征失败
  IDOConnectErrorTypeCharacteristicsFail = 7,
/// 配对异常
  IDOConnectErrorTypePairFail = 8,
/// 获取基本信息失败
  IDOConnectErrorTypeInformationFail = 9,
};


SWIFT_CLASS("_TtC16protocol_channel14IDOContactItem")
@interface IDOContactItem : NSObject
/// Contact phone number content, maximum of 14 bytes + ‘\0’ line break
@property (nonatomic, copy) NSString * _Nonnull phone;
/// Contact name content, maximum of 31 bytes + ‘\0’ line break
@property (nonatomic, copy) NSString * _Nonnull name;
- (nonnull instancetype)initWithPhone:(NSString * _Nonnull)phone name:(NSString * _Nonnull)name OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Get firmware local contact file modification time event number
SWIFT_CLASS("_TtC16protocol_channel25IDOContactReviseTimeModel")
@interface IDOContactReviseTimeModel : NSObject
/// 0: No need to send contact file
/// 1: Need to send contact data
@property (nonatomic) NSInteger result;
- (nonnull instancetype)initWithResult:(NSInteger)result OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum IDOExchangeStatus : NSInteger;
@protocol IDOExchangeDataOCDelegate;

/// 数据交换
SWIFT_PROTOCOL("_TtP16protocol_channel26IDODataExchangeOCInterface_")
@protocol IDODataExchangeOCInterface
/// 获取是否支持v3运动数据交换
@property (nonatomic, readonly) BOOL supportV3ActivityExchange;
/// 数据交换状态
@property (nonatomic, readonly) enum IDOExchangeStatus status;
/// 设置监听代理
- (void)addExchangeWithDelegate:(id <IDOExchangeDataOCDelegate> _Nullable)delegate;
/// app执行数据交换
/// \code
/// app 开始发起运动 IDOAppStartExchangeModel
/// app 发起运动结束 IDOAppEndExchangeModel
/// app 交换运动数据 IDOAppIngExchangeModel
/// app 交换运动数据暂停 IDOAppPauseExchangeModel
/// app 交换运动数据恢复 IDOAppRestoreExchangeModel
/// app v3交换运动数据 IDOAppIngV3ExchangeModel
/// app 操作计划运动 IDOAppOperatePlanExchangeModel
///
/// \endcode\param model 
///
- (void)appExecWithModel:(NSObject * _Nonnull)model;
/// ble发起运动 ble执行数据交换 app回复
/// \code
/// ble设备发送交换运动数据开始 app回复 IDOBleStartReplyExchangeModel
/// ble设备交换运动数据过程中 app回复 IDOBleIngReplyExchangeModel
/// ble设备发送交换运动数据结束 app回复 IDOBleEndReplyExchangeModel
/// ble设备发送交换运动数据暂停 app回复 IDOBlePauseReplyExchangeModel
/// ble设备发送交换运动数据恢复 app回复 IDOBleRestoreReplyExchangeModel
/// ble设备操作运动计划 app回复 IDOBleOperatePlanReplyExchangeModel
///
/// app发起运动 ble执行数据交换 app回复:
///
/// ble设备发送交换运动数据暂停 app回复 IDOAppBlePauseReplyExchangeModel
/// ble设备发送交换运动数据恢复 app回复 IDOAppBleRestoreReplyExchangeModel
/// ble设备发送交换运动数据结束 app回复 IDOAppBleEndReplyExchangeModel
///
/// \endcode
- (void)appReplyExecWithModel:(NSObject * _Nonnull)model;
/// 获取多运动数据最后一次数据
- (void)getLastActivityData;
/// 获取多运动一分钟心率数据
- (void)getActivityHrData;
/// 获取多运动一段时间的gps数据
- (void)getActivityGpsData;
@end


/// Get data transfer configuration event number
SWIFT_CLASS("_TtC16protocol_channel22IDODataTranConfigModel")
@interface IDODataTranConfigModel : NSObject
/// Error code
/// 0: Normal
/// Non-zero: Error
@property (nonatomic) NSInteger errCode;
/// Icon type corresponding to the activity type
/// 0: Invalid
/// 1: Small icon for activity
/// 2: Large icon for activity
/// 3: Animated icon for activity
/// 4: Medium-sized icons for activity
@property (nonatomic) NSInteger type;
/// Event type
/// 0: Invalid
/// For example, 1: SMS, 2: Email, 3: WeChat, etc.
@property (nonatomic) NSInteger evtType;
/// Activity type
/// 0: Invalid
/// Activity mode type, 1: Walking, 2: Running, etc.
@property (nonatomic) NSInteger sportType;
/// Width required by the firmware icon (determined by type and evt_type/sport_type)
@property (nonatomic) NSInteger iconWidth;
/// Height required by the firmware icon (determined by type and evt_type/sport_type)
@property (nonatomic) NSInteger iconHeight;
/// Color format
@property (nonatomic) NSInteger format;
/// Compression block size
@property (nonatomic) NSInteger blockSize;
/// Number of big sports icons
@property (nonatomic) NSInteger bigSportsNum;
/// Number of message icons
@property (nonatomic) NSInteger msgNum;
/// Number of small sports and animation icons
@property (nonatomic) NSInteger smallSportsAndAnimationNum;
/// Number of medium-sized icons
@property (nonatomic) NSInteger mediumNum;
- (nonnull instancetype)initWithErrCode:(NSInteger)errCode type:(NSInteger)type evtType:(NSInteger)evtType sportType:(NSInteger)sportType iconWidth:(NSInteger)iconWidth iconHeight:(NSInteger)iconHeight format:(NSInteger)format blockSize:(NSInteger)blockSize bigSportsNum:(NSInteger)bigSportsNum msgNum:(NSInteger)msgNum smallSportsAndAnimationNum:(NSInteger)smallSportsAndAnimationNum mediumNum:(NSInteger)mediumNum OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// 设置时间
SWIFT_CLASS("_TtC16protocol_channel21IDODateTimeParamModel")
@interface IDODateTimeParamModel : NSObject
@property (nonatomic) NSInteger year;
@property (nonatomic) NSInteger monuth;
@property (nonatomic) NSInteger day;
@property (nonatomic) NSInteger hour;
@property (nonatomic) NSInteger minute;
@property (nonatomic) NSInteger second;
/// Week: 0-6 for Monday to Sunday
@property (nonatomic) NSInteger week;
/// Timezone in a 24-hour format: 0-12 for East ,13-24 for West
@property (nonatomic) NSInteger timeZone;
- (nonnull instancetype)initWithYear:(NSInteger)year monuth:(NSInteger)monuth day:(NSInteger)day hour:(NSInteger)hour minute:(NSInteger)minute second:(NSInteger)second week:(NSInteger)week timeZone:(NSInteger)timeZone OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class IDODefaultMessageItem;

SWIFT_CLASS("_TtC16protocol_channel28IDODefaultMessageConfigModel")
@interface IDODefaultMessageConfigModel : NSObject
/// 操作类型 0:无效 1:设置 2:查询
@property (nonatomic) NSInteger operate;
/// 错误码 0:成功 非0失败
@property (nonatomic) NSInteger errorCode;
@property (nonatomic, copy) NSArray<IDODefaultMessageItem *> * _Nullable items;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel33IDODefaultMessageConfigParamModel")
@interface IDODefaultMessageConfigParamModel : NSObject
/// 操作类型 0:无效 1:设置 2:查询
@property (nonatomic) NSInteger operate;
/// 包列表
/// \code
/// 包名详情个数 最多设置50个详情
/// operate = 1 时有效
///
/// \endcode
@property (nonatomic, copy) NSArray<IDODefaultMessageItem *> * _Nullable items;
- (nonnull instancetype)initWithOperate:(NSInteger)operate items:(NSArray<IDODefaultMessageItem *> * _Nullable)items OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel21IDODefaultMessageItem")
@interface IDODefaultMessageItem : NSObject
/// 包名
@property (nonatomic, copy) NSString * _Nonnull packageName;
- (nonnull instancetype)initWithPackageName:(NSString * _Nonnull)packageName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class IDOSportTypeItem;

SWIFT_CLASS("_TtC16protocol_channel24IDODefaultSportTypeModel")
@interface IDODefaultSportTypeModel : NSObject
/// 默认显示的数量
@property (nonatomic) NSInteger defaultShowNum;
/// 最小支持的数量
@property (nonatomic) NSInteger minShowNum;
/// 最大支持的数量
@property (nonatomic) NSInteger maxShowNum;
/// 是否支持默认排序 0 不支持 ，1 支持
@property (nonatomic) NSInteger isSupportsSort;
/// 运动类型列表集合 type的集合
@property (nonatomic, copy) NSArray<IDOSportTypeItem *> * _Nonnull sportTypes;
- (nonnull instancetype)initWithDefaultShowNum:(NSInteger)defaultShowNum minShowNum:(NSInteger)minShowNum maxShowNum:(NSInteger)maxShowNum isSupportsSort:(NSInteger)isSupportsSort sportTypes:(NSArray<IDOSportTypeItem *> * _Nonnull)sportTypes OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// 设备信息
SWIFT_PROTOCOL("_TtP16protocol_channel18IDODeviceInterface_")
@protocol IDODeviceInterface
/// 设备模式 0：运动模式，1：睡眠模式
@property (nonatomic, readonly) NSInteger deviceMode;
/// 电量状态 0:正常, 1:正在充电, 2:充满, 3:电量低
@property (nonatomic, readonly) NSInteger battStatus;
/// 电量级别 0～100
@property (nonatomic, readonly) NSInteger battLevel;
/// 是否重启 0:未重启 1:重启
@property (nonatomic, readonly) NSInteger rebootFlag;
/// 绑定状态 0:未绑定 1:已绑定
@property (nonatomic, readonly) NSInteger bindState;
/// 绑定类型 0:默认 1:单击 2:长按 3:屏幕点击 横向确认和取消,确认在左边 4:屏幕点击 横向确认和取消,确认在右边
/// 5:屏幕点击 竖向确认和取消,确认在上边 6:屏幕点击 竖向确认和取消,确认在下边 7:点击(右边一个按键)
@property (nonatomic, readonly) NSInteger bindType;
/// 绑定超时 最长为15秒,0表示不超时
@property (nonatomic, readonly) NSInteger bindTimeout;
/// 设备平台 0:nordic, 10:realtek 8762x, 20:cypress psoc6, 30:Apollo3, 40:汇顶, 50:nordic+泰凌微,
/// 60:泰凌微+5340+no nand flash, 70:汇顶+富瑞坤, 80:5340
@property (nonatomic, readonly) NSInteger platform;
/// 设备形状类型 0：无效；1：圆形；2：方形的； 3：椭圆
@property (nonatomic, readonly) NSInteger deviceShapeType;
/// 设备类型 0：无效；1：手环；2：手表
@property (nonatomic, readonly) NSInteger deviceType;
/// 自定义表盘主版本 从1开始 0:不支持对应的自定义表盘功能
@property (nonatomic, readonly) NSInteger dialMainVersion;
/// 固件绑定时候显示勾ui界面 0:不需要 1:需要
@property (nonatomic, readonly) NSInteger showBindChoiceUi;
/// 设备id
@property (nonatomic, readonly) NSInteger deviceId;
/// 设备固件主版本号
@property (nonatomic, readonly) NSInteger firmwareVersion;
/// 当前设备mac地址 - 无冒号
@property (nonatomic, readonly, copy) NSString * _Nonnull macAddress;
/// 当前设备mac地址 - 带冒号
@property (nonatomic, readonly, copy) NSString * _Nonnull macAddressFull;
/// 注意：该名称是由调用 markConnectedDevice(…)传入，sdk不会主动去刷新该值
/// 需要获取最新值可以使用 Cmds.getDeviceName().send(..) 方法
@property (nonatomic, readonly, copy) NSString * _Nonnull deviceName;
/// OTA模式
@property (nonatomic, readonly) BOOL otaMode;
/// UUID ios专用
@property (nonatomic, readonly, copy) NSString * _Nonnull uuid;
/// BT macAddress - 带冒号
@property (nonatomic, readonly, copy) NSString * _Nonnull macAddressBt;
/// 设备SN
@property (nonatomic, readonly, copy) NSString * _Nullable sn;
/// BtName
@property (nonatomic, readonly, copy) NSString * _Nullable btName;
/// GPS芯片平台 0：无效 1：索尼 sony 2：洛达 Airoh 3：芯与物 icoe
@property (nonatomic, readonly) NSInteger gpsPlatform;
/// 固件版本version1
@property (nonatomic, readonly) NSInteger fwVersion1;
/// 固件版本version2
@property (nonatomic, readonly) NSInteger fwVersion2;
/// 固件版本version3
@property (nonatomic, readonly) NSInteger fwVersion3;
/// BT版本生效标志位 0：无效 1：说明固件有对应的BT固件
@property (nonatomic, readonly) NSInteger fwBtFlag;
/// BT的版本version1
@property (nonatomic, readonly) NSInteger fwBtVersion1;
/// BT的版本version2
@property (nonatomic, readonly) NSInteger fwBtVersion2;
/// BT的版本version3
@property (nonatomic, readonly) NSInteger fwBtVersion3;
/// BT的所需要匹配的版本version1
@property (nonatomic, readonly) NSInteger fwBtMatchVersion1;
/// BT的所需要匹配的版本version2
@property (nonatomic, readonly) NSInteger fwBtMatchVersion2;
/// BT的所需要匹配的版本version3
@property (nonatomic, readonly) NSInteger fwBtMatchVersion3;
- (NSString * _Nullable)printProperties SWIFT_WARN_UNUSED_RESULT;
/// 刷新设备信息
- (void)refreshDeviceInfoWithForced:(BOOL)forced completion:(void (^ _Nonnull)(BOOL))completion;
/// 刷新设备三级版本
- (void)refreshFirmwareVersionWithForced:(BOOL)forced completion:(void (^ _Nonnull)(BOOL))completion;
@end

@class IDODeviceLogTypeClass;

/// 设备日志
SWIFT_PROTOCOL("_TtP16protocol_channel21IDODeviceLogInterface_")
@protocol IDODeviceLogInterface
/// 是否正在获取日志中
@property (nonatomic, readonly) BOOL getLogIng;
/// 获取所有日志目录地址
/// 返回：/xx/../ido_sdk/devices/{macAddress}/device_logs
/// lash 日志目录 Flash
/// 电池日志目录 Battery
/// 过热日志目录 Heat
/// 旧的重启日志目录 Reboot
@property (nonatomic, readonly, copy) NSString * _Nonnull logDirPath;
/// 开始获取日志
/// \param types 日志类型集合
///
/// \param timeOut 获取日志超时
///
/// \param progress 日志获取进度 (0-100)
///
/// \param completion 日志获取完成回调
///
- (void)startGetWithTypes:(NSArray<IDODeviceLogTypeClass *> * _Nonnull)types timeOut:(NSInteger)timeOut progress:(void (^ _Nonnull)(double))progress completion:(void (^ _Nonnull)(BOOL))completion;
/// 取消获取日志
- (void)cancelWithCompletion:(void (^ _Nonnull)(void))completion;
@end


/// Get device log state event number
SWIFT_CLASS("_TtC16protocol_channel22IDODeviceLogStateModel")
@interface IDODeviceLogStateModel : NSObject
/// 0: No corresponding log
/// 1: Firmware restart log
/// 2: Firmware exception
@property (nonatomic) NSInteger type;
/// Error code of firmware restart log, 0 is normal
@property (nonatomic) NSInteger errCode;
- (nonnull instancetype)initWithType:(NSInteger)type errCode:(NSInteger)errCode OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// 日志类型
typedef SWIFT_ENUM(NSInteger, IDODeviceLogType, open) {
  IDODeviceLogTypeInitial = 0,
/// 1: 旧的重启日志
  IDODeviceLogTypeReboot = 1,
/// 2: 通用日志
  IDODeviceLogTypeGeneral = 2,
/// 3: 复位日志
  IDODeviceLogTypeReset = 3,
/// 4: 硬件日志
  IDODeviceLogTypeHardware = 4,
/// 5: 算法日志
  IDODeviceLogTypeAlgorithm = 5,
/// 6: 新重启日志
  IDODeviceLogTypeRestart = 6,
/// 7:电池日志
  IDODeviceLogTypeBattery = 7,
/// 8: 过热日志
  IDODeviceLogTypeHeat = 8,
};


SWIFT_CLASS("_TtC16protocol_channel21IDODeviceLogTypeClass")
@interface IDODeviceLogTypeClass : NSObject
- (nonnull instancetype)initWithLogType:(enum IDODeviceLogType)logType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum IDODeviceStateType : NSInteger;

SWIFT_CLASS("_TtC16protocol_channel14IDODeviceModel")
@interface IDODeviceModel : NSObject
/// rssi
@property (nonatomic, readonly) NSInteger rssi;
/// 设备名称
@property (nonatomic, readonly, copy) NSString * _Nullable name;
/// 设备状态
@property (nonatomic, readonly) enum IDODeviceStateType state;
/// uuid
@property (nonatomic, readonly, copy) NSString * _Nullable uuid;
/// mac address
@property (nonatomic, readonly, copy) NSString * _Nullable macAddress;
/// ota mac address
@property (nonatomic, readonly, copy) NSString * _Nullable otaMacAddress;
/// bt mac address
@property (nonatomic, readonly, copy) NSString * _Nullable btMacAddress;
/// 设备ID
@property (nonatomic, readonly) NSInteger deviceId;
/// 设备类型 0:无效 1: 手表 2: 手环
@property (nonatomic, readonly) NSInteger deviceType;
/// 是否ota模式
@property (nonatomic, readonly) BOOL isOta;
/// 是否泰凌微ota
@property (nonatomic, readonly) BOOL isTlwOta;
/// bt版本号
@property (nonatomic, readonly) NSInteger bltVersion;
/// 配对状态（Android）
@property (nonatomic, readonly) BOOL isPair;
- (nonnull instancetype)initWithRssi:(NSInteger)rssi name:(NSString * _Nullable)name state:(enum IDODeviceStateType)state uuid:(NSString * _Nullable)uuid macAddress:(NSString * _Nullable)macAddress otaMacAddress:(NSString * _Nullable)otaMacAddress btMacAddress:(NSString * _Nullable)btMacAddress deviceId:(NSInteger)deviceId deviceType:(NSInteger)deviceType isOta:(BOOL)isOta isTlwOta:(BOOL)isTlwOta bltVersion:(NSInteger)bltVersion isPair:(BOOL)isPair OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// 设备通知
/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel26IDODeviceNotificationModel")
@interface IDODeviceNotificationModel : NSObject
/// 监听设备状态
/// code详细说明如下:
/// \code
/// 0 无效
/// 1 手环已经解绑
/// 2 心率模式改变
/// 3 血氧产生数据，发生改变
/// 4 压力产生数据，发生改变
/// 5  Alexa识别过程中退出
/// 6 固件发起恢复出厂设置，通知app弹框提醒
/// 7 app需要进入相机界面（TIT01定制）
/// 8 sos事件通知（205土耳其定制）
/// 9 alexa设置的闹钟，固件修改，需要发送对应的通知位给app，app收到后发送获取V3的闹钟命令
/// 10 固件有删除日程提醒，app这边( cmd = 0x33 ,  cmd_id = 0x36 )查询列表，要更新对应的列表数据
/// 11 固件端有修改对应的表盘子样式，通知app获取（command\_id为0x33， key为 0x5000）
/// 12 固件通知ios更新通知图标和名字
/// 13 固件通知app图标已经更新，通知app获取已经更新的图标状态
/// 14 固件请求重新设置天气，app收到收，下发天气数据
/// 15 固件步数每次增加2000步，设备请求app同步数据，app调用同步接口
/// 16 固件探测到睡眠结束，请求app同步睡眠数据，app调用同步接口同步
/// 17 固件三环数据修改，通知app更新三环数据
/// 18 固件充满电完成发送提醒，app收到后通知栏显示设备充电完成
/// 19 结束运动后，手动测量心率后，手动测量血氧后，手动测量压力后，设备自动请求同步，先检查链接状态，未连接本次同步不执行，满足下个自动同步条件后再次判断发起同步请求
/// 20 固件修改 心率通知状态类型、压力通知状态类型、血氧通知状态类型、生理周期通知状态类型、健康指导通知状态类型、提醒事项通知状态类型通知app更新心率、压力、血氧、生理周期、健康指导、提醒事项通知状态类型
/// 21 固件压力值计算完成，通知app获取压力值
/// 22 固件通知app，固件压力校准失败(固件退出测量界面/检测失败/检测超时/未佩戴)
/// 23 固件产生心率过高或者过低提醒时，通知app获取心率数据
/// 24 固件通知app bt蓝牙已连接
/// 25 固件通知app bt蓝牙断开连接
/// 26 固件蓝牙通话开始
/// 27 固件蓝牙通话结束
/// 28 新版本固件每隔4分30秒发送一个通知命令，用于修复ios 会显示离线的问题
/// 29 通知app运动开始
/// 30 通知app运动结束
/// 31 固件重启发送通知给app  （app收到通知需要获取固件版本信息）
/// 32 设备空闲时（没有使用aleax），需要上报通知给app（时间间隔为1小时）
/// 33 固件整理空间完成通知app继续下传表盘文件
/// 34 固件通知app结束寻找手环指令 （对应6.3寻找手环）
/// 35 固件进入省电模式通知app
/// 36 固件退出省电模式通知app
/// 37 固件通知请求app下发设置gps热启动参数
/// 38 固件传输原始数据完成，通知app获取特性向量信息
/// 39 固件通知app，固件血压校准失败(固件退出测量界面/检测失败/检测超时/未佩戴)
/// 40 固件传输原始数据完成，没有特性向量信息，通知app数据采集结束
/// 41 v3健康数据同步单项数据完成通知 (android 内部使用）
/// 42 固件整理gps数据空间完成通知app下发gps文件
/// 43 固件升级EPO.dat文件失败，通知app再次下发EPO.dat文件（最多一次）
/// 44 固件升级EPO.dat文件成功
/// 45 固件升级GPS失败，通知app重新传输
/// 46 固件升级GPS成功
/// 47 发起运动时, 固件GPS异常，通知app
/// 48 固件润丰外设信息更新，通知app获取
/// 49 固件通知用户取消ble和手表配对,app弹窗处理
/// 50 固件通知app bt配对完成
/// 51 固件设置运动排序,通知app获取运动排序信息
/// 52 固件全天步数目标参数有更改,通知app获取全天步数目标(0208)
/// 53 固件通知app固件进入血压校准界面
/// 54 固件自动识别开关状态更新,通知app获取运动自动识别开关状态(02EA)
/// 55 固件慢速模式切换慢速模式
/// 56 固件快速模式切换快速模式
/// 57 固件更新mtu，APP下发获取mtu更新本地记录的mtu<br />(本地记录的mtu大小大于20Bytes不更新)
/// 58 固件电量变化，APP下发获取电量信息
/// 59 当前处于DFU模式(思澈平台)
/// 60 固件单位切换，通知APP获取单位(0222)
/// 61 固件修改菜单列表(快捷列表)，通知APP获取(02A8)
/// 62 固件修改本地语言，通知APP获取(0222)
/// 63 固件修改当前表盘，通知APP获取
/// 64 固件测量完成，通知APP获取结果(0606)
/// 65 固件修改智能心率模式，通知APP获取智能心率模式参数(0263)
/// 66 固件通知APP升级血压模型算法文件(.bpalgbin)
/// 67 固件修改压力开关状态，通知APP获取压力开关参数(0245)
/// 68 固件修改血氧饱和度开关状态，通知APP获取血氧饱和度开关参数(0244)
/// 69 固件修改电子卡片内容，通知APP获取电子卡片内容
/// 70 固件修改晨报内容，通知APP获取晨报内容
/// 71 固件修改语音备忘录，通知APP获取语音备忘录内容
///
/// \endcode
@property (nonatomic, readonly, strong) NSNumber * _Nullable dataType;
/// 1 闹钟已经修改 2 固件过热异常告警 4 亮屏参数有修改 8 抬腕参数有修改
/// 16  勿擾模式获取 32 手机音量的下发
@property (nonatomic, readonly, strong) NSNumber * _Nullable notifyType;
/// 每个消息对应一个ID
@property (nonatomic, readonly, strong) NSNumber * _Nullable msgId;
/// 0 无效 1 自定义短信1（正在开会，稍后联系）2 自定义短信2
@property (nonatomic, readonly, strong) NSNumber * _Nullable msgNotice;
/// 01 ACC  加速度 02 PPG  心率 03 TP   触摸 04 FLASH
/// 05 过热（PPG）06 气压 07 GPS 08 地磁
@property (nonatomic, readonly, strong) NSNumber * _Nullable errorIndex;
/// 控制事件
/// \code
/// 551 设备控制app音乐开始
/// 552 设备控制app音乐暂停
/// 553 设备控制app音乐停止
/// 554 设备控制app音乐上一首
/// 555 设备控制app音乐下一首
/// 556 设备控制app拍照单拍
/// 557 设备控制app拍照连拍
/// 558 设备控制app音量加
/// 559 设备控制app音量减
/// 560 设备控制app打开相机
/// 561 设备控制app关闭相机
/// 562 设备控制app接听电话
/// 563 设备控制app拒接电话
/// 565 设备控制app音乐音量百分比
/// 570 设备控制app寻找手机开始
/// 571 设备控制app寻找手机结束
/// 572 设备通知app防丢启动
/// 574 设备通知app一键呼叫开始
/// 575 设备通知传感器数据
/// 576 设备通知app操作类型
/// 577 设备通知app数据更新
/// 578 设备请求版本检查
/// 579 设备请求ota
/// 580 设备通知app短信信息
/// 581 设备控制app相机
/// 591 设备通知固件喇叭音量修改
///
/// \endcode
@property (nonatomic, readonly, strong) NSNumber * _Nullable controlEvt;
/// 控制事件返回值（部分事件才有）
@property (nonatomic, readonly, copy) NSString * _Nullable controlJson;
- (nonnull instancetype)initWithDataType:(NSNumber * _Nullable)dataType notifyType:(NSNumber * _Nullable)notifyType msgId:(NSNumber * _Nullable)msgId msgNotice:(NSNumber * _Nullable)msgNotice errorIndex:(NSNumber * _Nullable)errorIndex controlEvt:(NSNumber * _Nullable)controlEvt controlJson:(NSString * _Nullable)controlJson OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel19IDODeviceStateModel")
@interface IDODeviceStateModel : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable uuid;
@property (nonatomic, readonly, copy) NSString * _Nullable macAddress;
@property (nonatomic, readonly) enum IDODeviceStateType state;
@property (nonatomic, readonly) enum IDOConnectErrorType errorState;
- (nonnull instancetype)initWithUuid:(NSString * _Nullable)uuid macAddress:(NSString * _Nullable)macAddress state:(enum IDODeviceStateType)state errorState:(enum IDOConnectErrorType)errorState OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// 连接状态
typedef SWIFT_ENUM(NSInteger, IDODeviceStateType, open) {
/// 断开连接
  IDODeviceStateTypeDisconnected = 0,
/// 连接中
  IDODeviceStateTypeConnecting = 1,
/// 已连接
  IDODeviceStateTypeConnected = 2,
/// 断开连接中
  IDODeviceStateTypeDisconnecting = 3,
};


/// 设备升级
SWIFT_CLASS("_TtC16protocol_channel12IDODfuConfig")
@interface IDODfuConfig : NSObject
/// ota文件包路径
@property (nonatomic, readonly, copy) NSString * _Nullable filePath;
/// 设备的uuid, iOS使用
@property (nonatomic, readonly, copy) NSString * _Nullable uuid;
/// 设备的ble地址 安卓使用
@property (nonatomic, readonly, copy) NSString * _Nullable macAddress;
/// 设备的id
@property (nonatomic, readonly, copy) NSString * _Nullable deviceId;
/// 平台，默认为nordic，目前只支持nordic
@property (nonatomic, readonly) NSInteger platform;
/// 设备是否支持配对，根据功能表V3_dev_support_pair_each_connect  安卓使用
@property (nonatomic, readonly) BOOL isDeviceSupportPairedWithPhoneSystem;
/// 每次接受到包数，可不填
@property (nonatomic, readonly) NSInteger prn;
/// 在重试过程中，如果多次升级失败，是否需要重启蓝牙
@property (nonatomic, readonly) BOOL isNeedReOpenBluetoothSwitchIfFailed;
/// 最大重试次数
@property (nonatomic, readonly) NSInteger maxRetryTime;
/// RTK平台的OTA，在升级之前是否需要授权
@property (nonatomic, readonly) BOOL isNeedAuth;
/// RTK平台的OTA，模式
@property (nonatomic, readonly) NSInteger otaWorkMode;
- (nonnull instancetype)initWithFilePath:(NSString * _Nullable)filePath uuid:(NSString * _Nullable)uuid macAddress:(NSString * _Nullable)macAddress deviceId:(NSString * _Nullable)deviceId platform:(NSInteger)platform isDeviceSupportPairedWithPhoneSystem:(BOOL)isDeviceSupportPairedWithPhoneSystem prn:(NSInteger)prn isNeedReOpenBluetoothSwitchIfFailed:(BOOL)isNeedReOpenBluetoothSwitchIfFailed maxRetryTime:(NSInteger)maxRetryTime isNeedAuth:(BOOL)isNeedAuth otaWorkMode:(NSInteger)otaWorkMode OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_PROTOCOL("_TtP16protocol_channel14IDODfuDelegate_")
@protocol IDODfuDelegate <NSObject>
/// 监听dfu完成状态
- (void)dfuComplete;
/// 监听dfu过程的错误
- (void)dfuErrorWithError:(NSString * _Nonnull)error;
/// 监听升级进度
/// 0-100
- (void)dfuProgressWithProgress:(NSInteger)progress;
@end


/// Display mode event number
SWIFT_CLASS("_TtC16protocol_channel24IDODisplayModeParamModel")
@interface IDODisplayModeParamModel : NSObject
/// Mode
/// 0: Default
/// 1: Landscape
/// 2: Portrait
/// 3: Flipped (180 degrees)
@property (nonatomic) NSInteger mode;
- (nonnull instancetype)initWithMode:(NSInteger)mode OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class IDODownloadLanguageType;

SWIFT_CLASS("_TtC16protocol_channel24IDODownloadLanguageModel")
@interface IDODownloadLanguageModel : NSObject
/// Current used language
@property (nonatomic) NSInteger useLang;
/// Default language
@property (nonatomic) NSInteger defaultLang;
/// Number of fixed stored languages
@property (nonatomic) NSInteger fixedLang;
/// Maximum stored languages
@property (nonatomic) NSInteger maxStorageLang;
/// List of stored language values
@property (nonatomic, copy) NSArray<IDODownloadLanguageType *> * _Nonnull langArray;
- (nonnull instancetype)initWithUseLang:(NSInteger)useLang defaultLang:(NSInteger)defaultLang fixedLang:(NSInteger)fixedLang maxStorageLang:(NSInteger)maxStorageLang langArray:(NSArray<IDODownloadLanguageType *> * _Nonnull)langArray OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel23IDODownloadLanguageType")
@interface IDODownloadLanguageType : NSObject
/// Stored language values, ended by 0
@property (nonatomic) NSInteger type;
- (nonnull instancetype)initWithType:(NSInteger)type OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel24IDODrinkWaterRemindModel")
@interface IDODrinkWaterRemindModel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel28IDODrinkWaterRemindModelObjc")
@interface IDODrinkWaterRemindModelObjc : NSObject
/// Switch 0: Off 1: On
@property (nonatomic) NSInteger onOff;
/// Start time Hour
@property (nonatomic) NSInteger startHour;
/// Start time Minute
@property (nonatomic) NSInteger startMinute;
/// End time Hour
@property (nonatomic) NSInteger endHour;
/// End time Minute
@property (nonatomic) NSInteger endMinute;
/// Repeat
@property (nonatomic, copy) NSArray<IDOWeekObjc *> * _Nonnull repeats;
/// Reminder interval in minutes
@property (nonatomic) NSInteger interval;
/// Notification type
/// 0: Invalid
/// 1: Allow notification
/// 2: Silent notification
/// 3: Notification off
/// Need to open firmware table support setDrinkWaterAddNotifyFlag
@property (nonatomic) NSInteger notifyFlag;
/// Do not disturb switch
/// 00: Off
/// 01: On
/// Need to open firmware table support setNoReminderOnDrinkReminder
@property (nonatomic) NSInteger doNotDisturbOnOff;
/// Do not disturb start time Hour
/// Need to open firmware table support setNoReminderOnDrinkReminder
@property (nonatomic) NSInteger noDisturbStartHour;
/// Do not disturb start time Minute
/// Need to open firmware table support setNoReminderOnDrinkReminder
@property (nonatomic) NSInteger noDisturbStartMinute;
/// Do not disturb end time Hour
/// Need to open firmware table support setNoReminderOnDrinkReminder
@property (nonatomic) NSInteger noDisturbEndHour;
/// Do not disturb end time Minute
/// Need to open firmware table support setNoReminderOnDrinkReminder
@property (nonatomic) NSInteger noDisturbEndMinute;
- (nonnull instancetype)initOnOff:(NSInteger)onOff startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute endHour:(NSInteger)endHour endMinute:(NSInteger)endMinute repeats:(NSArray<IDOWeekObjc *> * _Nonnull)repeats interval:(NSInteger)interval notifyFlag:(NSInteger)notifyFlag doNotDisturbOnOff:(NSInteger)doNotDisturbOnOff noDisturbStartHour:(NSInteger)noDisturbStartHour noDisturbStartMinute:(NSInteger)noDisturbStartMinute noDisturbEndHour:(NSInteger)noDisturbEndHour noDisturbEndMinute:(NSInteger)noDisturbEndMinute OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Get Error Records event number
SWIFT_CLASS("_TtC16protocol_channel19IDOErrorRecordModel")
@interface IDOErrorRecordModel : NSObject
/// 0 Query
/// 1 Clear Log
@property (nonatomic) NSInteger type;
/// 0 Normal
/// 1 Hard Faul
/// 2 Watchdog service
/// 3 Assertion reset
/// 4 Power-off service
/// 5 Other exceptions
@property (nonatomic) NSInteger resetFlag;
/// Hardware error code
/// 0 Normal
/// 1 Accelerometer error
/// 2 Heart rate error
/// 3 TP error
/// 4 Flash error
@property (nonatomic) NSInteger hwError;
- (nonnull instancetype)initWithType:(NSInteger)type resetFlag:(NSInteger)resetFlag hwError:(NSInteger)hwError OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel20IDOExchangeBaseModel")
@interface IDOExchangeBaseModel : NSObject
/// 日期
@property (nonatomic) NSInteger day;
/// 时
@property (nonatomic) NSInteger hour;
/// 分钟
@property (nonatomic) NSInteger minute;
/// 秒钟
@property (nonatomic) NSInteger second;
/// 运动类型
@property (nonatomic) NSInteger sportType;
- (nonnull instancetype)initWithDay:(NSInteger)day hour:(NSInteger)hour minute:(NSInteger)minute second:(NSInteger)second sportType:(NSInteger)sportType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class IDOExchangeV2Model;
@class IDOExchangeV3Model;

SWIFT_PROTOCOL("_TtP16protocol_channel25IDOExchangeDataOCDelegate_")
@protocol IDOExchangeDataOCDelegate <NSObject>
/// ble发起运动 app监听ble
/// \code
/// 数据实体包括：
/// ble设备发送交换运动数据开始 IDOBleStartExchangeModel
/// ble设备交换运动数据过程中 IDOBleIngExchangeModel
/// ble设备发送交换运动数据结束 IDOBleEndExchangeModel
/// ble设备发送交换运动数据暂停 IDOBlePauseExchangeModel
/// ble设备发送交换运动数据恢复 IDOBleRestoreExchangeModel
/// ble设备操作运动计划 IDOBleOperatePlanExchangeModel
/// app发起运动 app监听ble
/// ble设备发送交换运动数据暂停 IDOAppBlePauseExchangeModel
/// ble设备发送交换运动数据恢复 IDOAppBleRestoreExchangeModel
/// ble设备发送交换运动数据结束 IDOAppBleEndExchangeModel
///
/// \endcode\param model 监听ble执行数据实体
///
- (void)appListenBleExecWithModel:(NSObject * _Nonnull)model;
/// app执行响应
/// \code
/// 响应实体包括：
/// app 开始发起运动 ble回复 IDOAppStartReplyExchangeModel
/// app 发起运动结束 ble回复 IDOAppEndReplyExchangeModel
/// app 交换运动数据 ble回复 IDOAppIngReplyExchangeModel
/// app 交换运动数据暂停 ble回复 IDOAppPauseReplyExchangeModel
/// app 交换运动数据恢复 ble回复 IDOAppRestoreReplyExchangeModel
/// app v3交换运动数据 ble回复 IDOAppIngV3ReplyExchangeModel
/// app 操作运动计划 ble回复 IDOAppOperatePlanReplyExchangeModel
/// app 获取v3多运动一次活动数据 ble回复 IDOAppActivityDataV3ExchangeModel
/// app 获取v3多运动一次心率数据 ble回复 IDOAppHrDataExchangeModel
/// app 获取v3多运动一次GPS数据 ble回复 IDOAppGpsDataExchangeModel
///
/// \endcode\param model 监听app执行Ble响应实体
///
- (void)appListenAppExecWithModel:(NSObject * _Nonnull)model;
/// 交换v2数据
/// @param model 监听v2数据交换实体
- (void)exchangeV2DataWithModel:(IDOExchangeV2Model * _Nonnull)model;
/// 交换v3数据
/// @param model 监听v3数据交换实体
- (void)exchangeV3DataWithModel:(IDOExchangeV3Model * _Nonnull)model;
@end

/// 交换数据状态
typedef SWIFT_ENUM(NSInteger, IDOExchangeStatus, open) {
  IDOExchangeStatusInitial = 0,
/// 初始化
  IDOExchangeStatusAppStart = 1,
/// app发起开始
  IDOExchangeStatusAppStartReply = 2,
/// app发起开始 ble回复
  IDOExchangeStatusAppEnd = 3,
/// app发起结束
  IDOExchangeStatusAppEndReply = 4,
/// app发起结束 ble回复
  IDOExchangeStatusAppPause = 5,
/// app发起暂停
  IDOExchangeStatusAppPauseReply = 6,
/// app发起暂停 ble回复
  IDOExchangeStatusAppRestore = 7,
/// app发起恢复
  IDOExchangeStatusAppRestoreReply = 8,
/// app发起恢复 ble回复
  IDOExchangeStatusAppIng = 9,
/// app发起交换
  IDOExchangeStatusAppIngReply = 10,
/// app发起交换 ble回复
  IDOExchangeStatusGetActivity = 11,
/// 获取最后运动数据
  IDOExchangeStatusGetActivityReply = 12,
/// 获取最后运动数据 ble回复
  IDOExchangeStatusGetHr = 13,
/// 获取一分钟心率
  IDOExchangeStatusGetHrReply = 14,
/// 获取一分钟心率 ble回复
  IDOExchangeStatusAppStartPlan = 15,
/// app开始运动计划
  IDOExchangeStatusAppStartPlanReply = 16,
/// app开始运动计划 ble回复
  IDOExchangeStatusAppPausePlan = 17,
/// app暂停运动计划
  IDOExchangeStatusAppPausePlanReply = 18,
/// app暂停运动计划 ble回复
  IDOExchangeStatusAppRestorePlan = 19,
/// app恢复运动计划
  IDOExchangeStatusAppRestorePlanReply = 20,
/// app恢复运动计划 ble回复
  IDOExchangeStatusAppEndPlan = 21,
/// app结束运动计划
  IDOExchangeStatusAppEndPlanReply = 22,
/// app结束运动计划 ble回复
  IDOExchangeStatusAppSwitchAction = 23,
/// app切换动作
  IDOExchangeStatusAppSwitchActionReply = 24,
/// app结束运动计划 ble回复
  IDOExchangeStatusAppBlePause = 25,
/// app发起的运动 ble发起暂停
  IDOExchangeStatusAppBlePauseReply = 26,
/// app发起的运动 ble发起暂停 app回复
  IDOExchangeStatusAppBleRestore = 27,
/// app发起的运动 ble发起恢复
  IDOExchangeStatusAppBleRestoreReply = 28,
/// app发起的运动 ble发起恢复 app回复
  IDOExchangeStatusAppBleEnd = 29,
/// app发起的运动 ble发起结束
  IDOExchangeStatusAppBleEndReply = 30,
/// app发起的运动 ble发起结束 app回复
  IDOExchangeStatusBleStart = 31,
/// ble发起的运动 ble发起开始
  IDOExchangeStatusBleStartReply = 32,
/// ble发起的运动 ble发起开始 app回复
  IDOExchangeStatusBleEnd = 33,
/// ble发起的运动 ble发起结束
  IDOExchangeStatusBleEndReply = 34,
/// ble发起的运动 ble发起结束 app回复
  IDOExchangeStatusBlePause = 35,
/// ble发起的运动 ble发起暂停
  IDOExchangeStatusBlePauseReply = 36,
/// ble发起的运动 ble发起暂停 app回复
  IDOExchangeStatusBleRestore = 37,
/// ble发起的运动 ble发起恢复
  IDOExchangeStatusBleRestoreReply = 38,
/// ble发起的运动 ble发起恢复 app回复
  IDOExchangeStatusBleIng = 39,
/// ble发起的运动 ble发起交换
  IDOExchangeStatusBleIngReply = 40,
/// ble发起的运动 ble发起交换 app回复
  IDOExchangeStatusBleStartPlan = 41,
/// ble开始运动计划
  IDOExchangeStatusBlePausePlan = 42,
/// ble暂停运动计划
  IDOExchangeStatusBleRestorePlan = 43,
/// ble恢复运动计划
  IDOExchangeStatusBleEndPlan = 44,
/// ble结束运动计划
  IDOExchangeStatusBleSwitchAction = 45,
/// ble切换动作
  IDOExchangeStatusBleOperatePlanReply = 46,
};


/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel18IDOExchangeV2Model")
@interface IDOExchangeV2Model : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 1:请求app打开gps  2：发起运动请求
@property (nonatomic) NSInteger operate;
/// 0: 无目标， 1: 重复次数，单位：次，
/// 2: 距离,单位：米,  3: 卡路里, 单位：大卡,
/// 4: 时长,单位：分钟, 5:  步数, 单位：步
@property (nonatomic) NSInteger targetValue;
/// 目标数值
@property (nonatomic) NSInteger targetType;
/// 是否强制开始 0:不强制,1:强制
@property (nonatomic) NSInteger forceStart;
/// 0:成功; 1:设备已经进入运动模式失败;
/// 2: 设备电量低失败; 3:手环正在充电 4:正在使用Alexa 5:通话中
@property (nonatomic) NSInteger retCode;
/// 卡路里 (单位:J)
@property (nonatomic) NSInteger calories;
/// 距离 (单位:米)
@property (nonatomic) NSInteger distance;
/// 持续时间 (单位:秒钟)
@property (nonatomic) NSInteger durations;
/// 步数 (单位:步)
@property (nonatomic) NSInteger step;
/// 平均心率
@property (nonatomic) NSInteger avgHr;
/// 最大心率
@property (nonatomic) NSInteger maxHr;
/// 当前心率
@property (nonatomic) NSInteger curHr;
/// 序列号
@property (nonatomic) NSInteger hrSerial;
/// 燃烧脂肪时长 (单位：分钟)
@property (nonatomic) NSInteger burnFatMins;
/// 有氧时长 (单位：分钟)
@property (nonatomic) NSInteger aerobicMins;
/// 极限时长 (单位：分钟)
@property (nonatomic) NSInteger limitMins;
/// 是否存储数据
@property (nonatomic) BOOL isSave;
/// 0:全部有效, 1:距离无效， 2: gps 信号弱
@property (nonatomic) NSInteger status;
/// 心率间隔
@property (nonatomic) NSInteger interval;
/// 心率数据集合
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable hrValues;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel operate:(NSInteger)operate targetValue:(NSInteger)targetValue targetType:(NSInteger)targetType forceStart:(NSInteger)forceStart retCode:(NSInteger)retCode calories:(NSInteger)calories distance:(NSInteger)distance durations:(NSInteger)durations step:(NSInteger)step avgHr:(NSInteger)avgHr maxHr:(NSInteger)maxHr curHr:(NSInteger)curHr hrSerial:(NSInteger)hrSerial burnFatMins:(NSInteger)burnFatMins aerobicMins:(NSInteger)aerobicMins limitMins:(NSInteger)limitMins isSave:(BOOL)isSave status:(NSInteger)status interval:(NSInteger)interval hrValues:(NSArray<NSNumber *> * _Nullable)hrValues OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Generated class from Pigeon that represents data sent in messages.
SWIFT_CLASS("_TtC16protocol_channel18IDOExchangeV3Model")
@interface IDOExchangeV3Model : NSObject
@property (nonatomic, strong) IDOExchangeBaseModel * _Nullable baseModel;
/// 训练课程年份
@property (nonatomic) NSInteger year;
/// 训练课程月份
@property (nonatomic) NSInteger month;
/// 计划类型：
/// 1：跑步计划3km , 2：跑步计划5km ,
/// 3：跑步计划10km , 4：半程马拉松训练（二期）, 5：马拉松训练（二期）
@property (nonatomic) NSInteger planType;
/// 动作类型  1:快走；2:慢跑；3:中速跑；4快跑；
/// 5:结束课程运动 （还要等待用户是否有自由运动）;
/// 6:课程结束后自由运动 （此字段当operate为5起作用）
@property (nonatomic) NSInteger actionType;
/// 数据版本
@property (nonatomic) NSInteger version;
/// 1:请求app打开gps  2：发起运动请求
@property (nonatomic) NSInteger operate;
/// 0: 无目标， 1: 重复次数，单位：次，
/// 2: 距离,单位：米,  3: 卡路里, 单位：大卡,
/// 4: 时长,单位：分钟, 5:  步数, 单位：步
@property (nonatomic) NSInteger targetValue;
/// 目标数值
@property (nonatomic) NSInteger targetType;
/// 是否强制开始 0:不强制,1:强制
@property (nonatomic) NSInteger forceStart;
/// 0:成功; 1:设备已经进入运动模式失败;
/// 2: 设备电量低失败; 3:手环正在充电 4:正在使用Alexa 5:通话中
@property (nonatomic) NSInteger retCode;
/// 卡路里 (单位:J)
@property (nonatomic) NSInteger calories;
/// 距离 (单位:米)
@property (nonatomic) NSInteger distance;
/// 持续时间 (单位:秒钟)
@property (nonatomic) NSInteger durations;
/// 步数 (单位:步)
@property (nonatomic) NSInteger step;
/// 0: 混合泳; 1: 自由泳; 2: 蛙泳; 3: 仰泳; 4: 蝶泳;
@property (nonatomic) NSInteger swimPosture;
/// 手环返回的状态 开始:1,暂停:2, 结束:3,0:无效状态
@property (nonatomic) NSInteger status;
/// 信号强弱  0: 表示信号弱， 1: 表示信号强
@property (nonatomic) NSInteger signalFlag;
/// 是否存储数据
@property (nonatomic) BOOL isSave;
/// app计算显示实时速度 单位km/h 100倍 15秒一个记录
@property (nonatomic) NSInteger realTimeSpeed;
/// app计算显示实时配速 单位 s
@property (nonatomic) NSInteger realTimePace;
/// 心率间隔
@property (nonatomic) NSInteger interval;
/// 心率个数
@property (nonatomic) NSInteger hrCount;
/// 燃烧脂肪时长 (单位：分钟)
@property (nonatomic) NSInteger burnFatMins;
/// 有氧时长 (单位：分钟)
@property (nonatomic) NSInteger aerobicMins;
/// 极限时长 (单位：分钟)
@property (nonatomic) NSInteger limitMins;
/// 心率数据集合
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable hrValues;
/// 热身锻炼时长(秒钟)
@property (nonatomic) NSInteger warmUpSecond;
/// 无氧锻炼时长(秒钟)
@property (nonatomic) NSInteger anaeroicSecond;
/// 燃脂锻炼时长(秒钟)
@property (nonatomic) NSInteger fatBurnSecond;
/// 有氧锻炼时长(秒钟)
@property (nonatomic) NSInteger aerobicSecond;
/// 极限锻炼时长(秒钟)
@property (nonatomic) NSInteger limitSecond;
/// 平均心率
@property (nonatomic) NSInteger avgHr;
/// 最大心率
@property (nonatomic) NSInteger maxHr;
/// 当前心率
@property (nonatomic) NSInteger curHr;
/// 热身运动值
@property (nonatomic) NSInteger warmUpValue;
/// 脂肪燃烧运动值
@property (nonatomic) NSInteger fatBurnValue;
/// 有氧运动值
@property (nonatomic) NSInteger aerobicValue;
/// 极限运动值
@property (nonatomic) NSInteger limitValue;
/// 无氧运动值
@property (nonatomic) NSInteger anaerobicValue;
/// 平均速度 km/h
@property (nonatomic) NSInteger avgSpeed;
/// 最大速度 km/h
@property (nonatomic) NSInteger maxSpeed;
/// 平均步频
@property (nonatomic) NSInteger avgStepFrequency;
/// 最大步频
@property (nonatomic) NSInteger maxStepFrequency;
/// 平均步幅
@property (nonatomic) NSInteger avgStepStride;
/// 最大步幅
@property (nonatomic) NSInteger maxStepStride;
/// 平均公里配速
@property (nonatomic) NSInteger kmSpeed;
/// 最快公里配速
@property (nonatomic) NSInteger fastKmSpeed;
/// 公里配速个数
@property (nonatomic) NSInteger kmSpeedCount;
/// 公里配速集合
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable kmSpeeds;
/// 英里配速个数
@property (nonatomic) NSInteger mileCount;
/// 英里配速集合
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable mileSpeeds;
/// 步频个数
@property (nonatomic) NSInteger stepsFrequencyCount;
/// 步频集合
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable stepsFrequencys;
/// 训练效果；  单位：无   范围 1.0 ~ 5.0 （*10倍）
@property (nonatomic) NSInteger trainingEffect;
/// 无氧训练效果；  单位：无   范围 1.0 ~ 5.0 （*10倍）
@property (nonatomic) NSInteger anaerobicTrainingEffect;
/// 最大摄氧量；  单位：毫升/公斤/分钟； 范围  0-80
@property (nonatomic) NSInteger vo2Max;
/// 本次动作训练个数
@property (nonatomic) NSInteger actionDataCount;
/// 课程内运动热量  单位千卡
@property (nonatomic) NSInteger inClassCalories;
/// 动作完成率 0—100
@property (nonatomic) NSInteger completionRate;
/// 心率控制率 0—100
@property (nonatomic) NSInteger hrCompletionRate;
/// 恢复时长：单位小时(app收到该数据之后，每过一小时需要自减一)
@property (nonatomic) NSInteger recoverTime;
/// 上个月平均每周的运动时间 单位分钟
@property (nonatomic) NSInteger avgWeekActivityTime;
/// 摄氧量等级  1:低等 2:业余 3:一般 4：平均 5：良好 6：优秀 7：专业
@property (nonatomic) NSInteger grade;
/// 动作完成内容
/// type : 动作类型  1快走；2慢跑; 3中速跑；4快跑
/// heart_con_value : 每个动作心率控制
/// time : 动作完成时间 单位秒
/// goal_time ：动作目标时间
@property (nonatomic, copy) NSArray<NSDictionary<NSString *, id> *> * _Nullable actionData;
/// 训练的课程日期偏移 从0开始
@property (nonatomic) NSInteger trainingOffset;
/// 运动倒计时
@property (nonatomic) NSInteger countHour;
/// 运动倒计时分
@property (nonatomic) NSInteger countMinute;
/// 运动倒计时秒
@property (nonatomic) NSInteger countSecond;
/// 动作目标时间  单位秒
@property (nonatomic) NSInteger time;
/// 心率范围低值
@property (nonatomic) NSInteger lowHeart;
/// 心率范围高值
@property (nonatomic) NSInteger heightHeart;
/// 实时配速个数
@property (nonatomic) NSInteger paceSpeedCount;
/// 实时配速数组  传过来的是s 每5s算一次
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable paceSpeeds;
/// 实时速度个数
@property (nonatomic) NSInteger realSpeedCount;
/// 实时速度数组 传过来的是s 每5s算一次
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable realSpeeds;
- (nonnull instancetype)initWithBaseModel:(IDOExchangeBaseModel * _Nullable)baseModel year:(NSInteger)year month:(NSInteger)month planType:(NSInteger)planType actionType:(NSInteger)actionType version:(NSInteger)version operate:(NSInteger)operate targetValue:(NSInteger)targetValue targetType:(NSInteger)targetType forceStart:(NSInteger)forceStart retCode:(NSInteger)retCode calories:(NSInteger)calories distance:(NSInteger)distance durations:(NSInteger)durations step:(NSInteger)step swimPosture:(NSInteger)swimPosture status:(NSInteger)status signalFlag:(NSInteger)signalFlag isSave:(BOOL)isSave realTimeSpeed:(NSInteger)realTimeSpeed realTimePace:(NSInteger)realTimePace interval:(NSInteger)interval hrCount:(NSInteger)hrCount burnFatMins:(NSInteger)burnFatMins aerobicMins:(NSInteger)aerobicMins limitMins:(NSInteger)limitMins hrValues:(NSArray<NSNumber *> * _Nullable)hrValues warmUpSecond:(NSInteger)warmUpSecond anaeroicSecond:(NSInteger)anaeroicSecond fatBurnSecond:(NSInteger)fatBurnSecond aerobicSecond:(NSInteger)aerobicSecond limitSecond:(NSInteger)limitSecond avgHr:(NSInteger)avgHr maxHr:(NSInteger)maxHr curHr:(NSInteger)curHr warmUpValue:(NSInteger)warmUpValue fatBurnValue:(NSInteger)fatBurnValue aerobicValue:(NSInteger)aerobicValue limitValue:(NSInteger)limitValue anaerobicValue:(NSInteger)anaerobicValue avgSpeed:(NSInteger)avgSpeed maxSpeed:(NSInteger)maxSpeed avgStepFrequency:(NSInteger)avgStepFrequency maxStepFrequency:(NSInteger)maxStepFrequency avgStepStride:(NSInteger)avgStepStride maxStepStride:(NSInteger)maxStepStride kmSpeed:(NSInteger)kmSpeed fastKmSpeed:(NSInteger)fastKmSpeed kmSpeedCount:(NSInteger)kmSpeedCount kmSpeeds:(NSArray<NSNumber *> * _Nullable)kmSpeeds mileCount:(NSInteger)mileCount mileSpeeds:(NSArray<NSNumber *> * _Nullable)mileSpeeds stepsFrequencyCount:(NSInteger)stepsFrequencyCount stepsFrequencys:(NSArray<NSNumber *> * _Nullable)stepsFrequencys trainingEffect:(NSInteger)trainingEffect anaerobicTrainingEffect:(NSInteger)anaerobicTrainingEffect vo2Max:(NSInteger)vo2Max actionDataCount:(NSInteger)actionDataCount inClassCalories:(NSInteger)inClassCalories completionRate:(NSInteger)completionRate hrCompletionRate:(NSInteger)hrCompletionRate recoverTime:(NSInteger)recoverTime avgWeekActivityTime:(NSInteger)avgWeekActivityTime grade:(NSInteger)grade actionData:(NSArray<NSDictionary<NSString *, id> *> * _Nullable)actionData trainingOffset:(NSInteger)trainingOffset countHour:(NSInteger)countHour countMinute:(NSInteger)countMinute countSecond:(NSInteger)countSecond time:(NSInteger)time lowHeart:(NSInteger)lowHeart heightHeart:(NSInteger)heightHeart paceSpeedCount:(NSInteger)paceSpeedCount paceSpeeds:(NSArray<NSNumber *> * _Nullable)paceSpeeds realSpeedCount:(NSInteger)realSpeedCount realSpeeds:(NSArray<NSNumber *> * _Nullable)realSpeeds OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class IDOTransTypeClass;
@class IDOTransBaseModel;
enum IDOTransStatus : NSInteger;

/// 文件传输
SWIFT_PROTOCOL("_TtP16protocol_channel24IDOFileTransferInterface_")
@protocol IDOFileTransferInterface
/// 是否在执行传输
@property (nonatomic, readonly) BOOL isTransmitting;
/// 当前传输中的文件类型
@property (nonatomic, readonly, strong) IDOTransTypeClass * _Nullable transFileType;
/// 执行文件传输
/// \param fileItems 待传文件
///
/// \param cancelPrevTranTask 是否取消执行中的传输任务（如果有）
///
/// \param transProgress 文件传输进度
///
/// \param transStatus 文件传输状态
///
/// \param completion 传输结果，形如：[true, true, …] 和传入的 fileItems 一一对应
///
- (id <IDOCancellable> _Nullable)transferFilesWithFileItems:(NSArray<IDOTransBaseModel *> * _Nonnull)fileItems cancelPrevTranTask:(BOOL)cancelPrevTranTask transProgress:(void (^ _Nonnull)(NSInteger, NSInteger, float, float))transProgress transStatus:(void (^ _Nonnull)(NSInteger, enum IDOTransStatus, NSInteger, NSInteger))transStatus completion:(void (^ _Nonnull)(NSArray<NSNumber *> * _Nonnull))completion;
/// 获取压缩前.iwf文件大小
/// \param filePath 表盘文件绝对路径
///
/// \param type 表盘类型 1 云表盘 ，2 壁纸表盘
///
/// \param completion 文件大小（单位 字节）
///
- (void)iwfFileSizeWithFilePath:(NSString * _Nonnull)filePath type:(int64_t)type completion:(void (^ _Nonnull)(int64_t))completion;
@end


/// Fitness Guidance Event
SWIFT_CLASS("_TtC16protocol_channel28IDOFitnessGuidanceParamModel")
@interface IDOFitnessGuidanceParamModel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Fitness Guidance Event
SWIFT_CLASS("_TtC16protocol_channel32IDOFitnessGuidanceParamModelObjc")
@interface IDOFitnessGuidanceParamModelObjc : NSObject
/// Fitness guidance mode switch
/// 1: On
/// 0: Off
@property (nonatomic) NSInteger mode;
/// Start hour
@property (nonatomic) NSInteger startHour;
/// Start minute
@property (nonatomic) NSInteger startMinute;
/// End hour
@property (nonatomic) NSInteger endHour;
/// End minute
@property (nonatomic) NSInteger endMinute;
/// Notification type
/// 0: Invalid
/// 1: Allow
/// 2: Silent
/// 3: Disable
@property (nonatomic) NSInteger notifyFlag;
/// Reminders to move switch
/// 1: On
/// 0: Off
@property (nonatomic) NSInteger goMode;
/// Repeat
@property (nonatomic, copy) NSArray<IDOWeekObjc *> * _Nonnull repeats;
/// Target steps
@property (nonatomic) NSInteger targetSteps;
- (nonnull instancetype)initWithMode:(NSInteger)mode startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute endHour:(NSInteger)endHour endMinute:(NSInteger)endMinute notifyFlag:(NSInteger)notifyFlag goMode:(NSInteger)goMode repeats:(NSArray<IDOWeekObjc *> * _Nonnull)repeats targetSteps:(NSInteger)targetSteps OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Get Font Library Information event number
SWIFT_CLASS("_TtC16protocol_channel20IDOFlashBinInfoModel")
@interface IDOFlashBinInfoModel : NSObject
/// Status: 0 - Normal, 1 - Invalid font, checksum error, 2 - Version mismatch
@property (nonatomic) NSInteger status;
/// Matching version required by the firmware
@property (nonatomic) NSInteger matchVersion;
/// Font library checksum code
@property (nonatomic) NSInteger checkCode;
- (nonnull instancetype)initWithStatus:(NSInteger)status matchVersion:(NSInteger)matchVersion checkCode:(NSInteger)checkCode OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Simple file operations event
SWIFT_CLASS("_TtC16protocol_channel25IDOFuncSimpleFileOptModel")
@interface IDOFuncSimpleFileOptModel : NSObject
/// Error code
/// 0 for success, others for errors
@property (nonatomic) NSInteger error;
/// Operation type
/// 0: Get
/// 1: Overwrite
/// 2: Delete
@property (nonatomic) NSInteger operate;
/// Index number
@property (nonatomic) NSInteger index;
- (nonnull instancetype)initWithError:(NSInteger)error operate:(NSInteger)operate index:(NSInteger)index OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Simple file operations event
SWIFT_CLASS("_TtC16protocol_channel30IDOFuncSimpleFileOptParamModel")
@interface IDOFuncSimpleFileOptParamModel : NSObject
/// Operation type
/// 0: Get
/// 1: Overwrite
/// 2: Delete
/// 3: Copy
@property (nonatomic) NSInteger operate;
/// Index number
@property (nonatomic) NSInteger index;
/// Destination index, only used for copying, invalid for other cases
@property (nonatomic) NSInteger destIndex;
- (nonnull instancetype)initWithOperate:(NSInteger)operate index:(NSInteger)index destIndex:(NSInteger)destIndex OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// 功能表
SWIFT_PROTOCOL("_TtP16protocol_channel21IDOFuncTableInterface_")
@protocol IDOFuncTableInterface
/// 智能通知
@property (nonatomic, readonly) BOOL reminderAncs;
/// Snapchat
@property (nonatomic, readonly) BOOL reminderSnapchat;
/// Line
@property (nonatomic, readonly) BOOL reminderLine;
/// Outlook
@property (nonatomic, readonly) BOOL reminderOutlook;
/// Telegram
@property (nonatomic, readonly) BOOL reminderTelegram;
/// Viber
@property (nonatomic, readonly) BOOL reminderViber;
/// Vkontakte
@property (nonatomic, readonly) BOOL reminderVkontakte;
/// Chatwork;
@property (nonatomic, readonly) BOOL reminderChatwork;
/// Slack
@property (nonatomic, readonly) BOOL reminderSlack;
/// Tumblr
@property (nonatomic, readonly) BOOL reminderTumblr;
/// YahooMail
@property (nonatomic, readonly) BOOL reminderYahooMail;
/// YahooPinterest
@property (nonatomic, readonly) BOOL reminderYahooPinterest;
/// Youtube
@property (nonatomic, readonly) BOOL reminderYoutube;
/// Gmail
@property (nonatomic, readonly) BOOL reminderGmail;
/// KakaoTalk
@property (nonatomic, readonly) BOOL reminderKakaoTalk;
/// Google gmail
@property (nonatomic, readonly) BOOL reminderOnlyGoogleGmail;
/// Outlook email
@property (nonatomic, readonly) BOOL reminderOnlyOutlookEmail;
/// Yahoo email
@property (nonatomic, readonly) BOOL reminderOnlyYahooEmail;
/// Tiktok
@property (nonatomic, readonly) BOOL reminderTiktok;
/// Redbus
@property (nonatomic, readonly) BOOL reminderRedbus;
/// Dailyhunt
@property (nonatomic, readonly) BOOL reminderDailyhunt;
/// Hotstar
@property (nonatomic, readonly) BOOL reminderHotstar;
/// Inshorts
@property (nonatomic, readonly) BOOL reminderInshorts;
/// Paytm
@property (nonatomic, readonly) BOOL reminderPaytm;
/// Amazon
@property (nonatomic, readonly) BOOL reminderAmazon;
/// Flipkart
@property (nonatomic, readonly) BOOL reminderFlipkart;
/// Nhn email
@property (nonatomic, readonly) BOOL reminderNhnEmail;
/// Instant email
@property (nonatomic, readonly) BOOL reminderInstantEmail;
/// Zoho email
@property (nonatomic, readonly) BOOL reminderZohoEmail;
/// Exchange email
@property (nonatomic, readonly) BOOL reminderExchangeEmail;
/// 189 email
@property (nonatomic, readonly) BOOL reminder189Email;
/// Very fit
@property (nonatomic, readonly) BOOL reminderVeryFit;
/// General
@property (nonatomic, readonly) BOOL reminderGeneral;
/// Matters
@property (nonatomic, readonly) BOOL reminderMattersRemind;
/// Microsoft
@property (nonatomic, readonly) BOOL reminderMicrosoft;
/// MissedCalls
@property (nonatomic, readonly) BOOL reminderMissedCall;
/// 支持同步全部通讯录
@property (nonatomic, readonly) BOOL reminderGetAllContact;
/// WhatsappBusiness
@property (nonatomic, readonly) BOOL reminderWhatsappBusiness;
/// Email
@property (nonatomic, readonly) BOOL reminderEmail;
/// Facebook
@property (nonatomic, readonly) BOOL reminderFacebook;
/// Message
@property (nonatomic, readonly) BOOL reminderMessage;
/// QQ
@property (nonatomic, readonly) BOOL reminderQq;
/// Twitter
@property (nonatomic, readonly) BOOL reminderTwitter;
/// Weixin
@property (nonatomic, readonly) BOOL reminderWeixin;
/// Calendar (Google日历）
@property (nonatomic, readonly) BOOL reminderCalendarGoogle;
/// Instagram
@property (nonatomic, readonly) BOOL reminderInstagram;
/// linkedIn
@property (nonatomic, readonly) BOOL reminderLinkedIn;
/// Messengre
@property (nonatomic, readonly) BOOL reminderMessengre;
/// Skype
@property (nonatomic, readonly) BOOL reminderSkype;
/// Calendar
@property (nonatomic, readonly) BOOL reminderCalendar;
/// Whatsapp
@property (nonatomic, readonly) BOOL reminderWhatsapp;
/// Alarm clock
@property (nonatomic, readonly) BOOL reminderAlarmClock;
/// 新浪微博
@property (nonatomic, readonly) BOOL reminderSinaWeibo;
/// 来电提醒
@property (nonatomic, readonly) BOOL reminderCalling;
/// 来电联系人
@property (nonatomic, readonly) BOOL reminderCallContact;
/// 来电号码
@property (nonatomic, readonly) BOOL reminderCallNum;
/// Prime
@property (nonatomic, readonly) BOOL reminderPrime;
/// Netflix
@property (nonatomic, readonly) BOOL reminderNetflix;
/// Gpay
@property (nonatomic, readonly) BOOL reminderGpay;
/// Phonpe
@property (nonatomic, readonly) BOOL reminderPhonpe;
/// Swiggy
@property (nonatomic, readonly) BOOL reminderSwiggy;
/// Zomato
@property (nonatomic, readonly) BOOL reminderZomato;
/// Makemytrip
@property (nonatomic, readonly) BOOL reminderMakemytrip;
/// JioTv
@property (nonatomic, readonly) BOOL reminderJioTv;
/// Niosefit
@property (nonatomic, readonly) BOOL reminderNiosefit;
/// YT music
@property (nonatomic, readonly) BOOL reminderYtmusic;
/// Uber
@property (nonatomic, readonly) BOOL reminderUber;
/// Ola
@property (nonatomic, readonly) BOOL reminderOla;
/// Google meet
@property (nonatomic, readonly) BOOL reminderGoogleMeet;
/// Mormaii Smartwatch
@property (nonatomic, readonly) BOOL reminderMormaiiSmartwatch;
/// Technos connect
@property (nonatomic, readonly) BOOL reminderTechnosConnect;
/// Enjoei
@property (nonatomic, readonly) BOOL reminderEnjoei;
/// Aliexpress
@property (nonatomic, readonly) BOOL reminderAliexpress;
/// Shopee
@property (nonatomic, readonly) BOOL reminderShopee;
/// Teams
@property (nonatomic, readonly) BOOL reminderTeams;
/// 99 taxi
@property (nonatomic, readonly) BOOL reminder99Taxi;
/// Uber eats
@property (nonatomic, readonly) BOOL reminderUberEats;
/// Lfood
@property (nonatomic, readonly) BOOL reminderLfood;
/// Rappi
@property (nonatomic, readonly) BOOL reminderRappi;
/// Mercado livre
@property (nonatomic, readonly) BOOL reminderMercadoLivre;
/// Magalu
@property (nonatomic, readonly) BOOL reminderMagalu;
/// Americanas
@property (nonatomic, readonly) BOOL reminderAmericanas;
/// Yahoo
@property (nonatomic, readonly) BOOL reminderYahoo;
/// 消息图标和名字更新
@property (nonatomic, readonly) BOOL reminderMessageIcon;
/// v2 走路
@property (nonatomic, readonly) BOOL sportWalk;
/// v2 跑步
@property (nonatomic, readonly) BOOL sportRun;
/// v2 骑行
@property (nonatomic, readonly) BOOL sportByBike;
/// v2 徒步
@property (nonatomic, readonly) BOOL sportOnFoot;
/// v2 游泳
@property (nonatomic, readonly) BOOL sportSwim;
/// v2 爬山
@property (nonatomic, readonly) BOOL sportMountainClimbing;
/// v2 羽毛球
@property (nonatomic, readonly) BOOL sportBadminton;
/// v2 其他
@property (nonatomic, readonly) BOOL sportOther;
/// v2 健身
@property (nonatomic, readonly) BOOL sportFitness;
/// v2 动感单车
@property (nonatomic, readonly) BOOL sportSpinning;
/// v2 椭圆球
@property (nonatomic, readonly) BOOL sportEllipsoid;
/// v2 跑步机
@property (nonatomic, readonly) BOOL sportTreadmill;
/// v2 仰卧起坐
@property (nonatomic, readonly) BOOL sportSitUp;
/// v2 俯卧撑
@property (nonatomic, readonly) BOOL sportPushUp;
/// v2 哑铃
@property (nonatomic, readonly) BOOL sportDumbbell;
/// v2 举重
@property (nonatomic, readonly) BOOL sportWeightlifting;
/// v2 瑜伽
@property (nonatomic, readonly) BOOL sportYoga;
/// v2 跳绳
@property (nonatomic, readonly) BOOL sportRopeSkipping;
/// v2 乒乓球
@property (nonatomic, readonly) BOOL sportTableTennis;
/// v2 篮球
@property (nonatomic, readonly) BOOL sportBasketball;
/// v2 足球
@property (nonatomic, readonly) BOOL sportFootballl;
/// v2 排球
@property (nonatomic, readonly) BOOL sportVolleyball;
/// v2 网球
@property (nonatomic, readonly) BOOL sportTennis;
/// v2 高尔夫
@property (nonatomic, readonly) BOOL sportGolf;
/// v2 棒球
@property (nonatomic, readonly) BOOL sportBaseball;
/// v2 滑雪
@property (nonatomic, readonly) BOOL sportSkiing;
/// v2 轮滑
@property (nonatomic, readonly) BOOL sportRollerSkating;
/// v2 跳舞
@property (nonatomic, readonly) BOOL sportDance;
/// v2 功能性训练
@property (nonatomic, readonly) BOOL sportStrengthTraining;
/// v2 核心训练
@property (nonatomic, readonly) BOOL sportCoreTraining;
/// v2 整体放松
@property (nonatomic, readonly) BOOL sportTidyUpRelax;
/// v2 传统的力量训练
@property (nonatomic, readonly) BOOL sportTraditionalStrengthTraining;
/// v3 户外跑步
@property (nonatomic, readonly) BOOL sportOutdoorRun;
/// v3 室内跑步
@property (nonatomic, readonly) BOOL sportIndoorRun;
/// v3 户外骑行
@property (nonatomic, readonly) BOOL sportOutdoorCycle;
/// v3 室内骑行
@property (nonatomic, readonly) BOOL sportIndoorCycle;
/// v3 户外走路
@property (nonatomic, readonly) BOOL sportOutdoorWalk;
/// v3 室内走路
@property (nonatomic, readonly) BOOL sportIndoorWalk;
/// v3 泳池游泳
@property (nonatomic, readonly) BOOL sportPoolSwim;
/// v3 开放水域游泳
@property (nonatomic, readonly) BOOL sportOpenWaterSwim;
/// v3 椭圆机
@property (nonatomic, readonly) BOOL sportElliptical;
/// v3 划船机
@property (nonatomic, readonly) BOOL sportRower;
/// v3 高强度间歇训练法
@property (nonatomic, readonly) BOOL sportHiit;
/// v3 板球运动
@property (nonatomic, readonly) BOOL sportCricket;
/// v3 普拉提
@property (nonatomic, readonly) BOOL sportPilates;
/// v3 户外玩耍（定制 kr01）
@property (nonatomic, readonly) BOOL sportOutdoorFun;
/// v3 其他运动（定制 kr01）
@property (nonatomic, readonly) BOOL sportOtherActivity;
/// v3 尊巴舞
@property (nonatomic, readonly) BOOL sportZumba;
/// v3 冲浪
@property (nonatomic, readonly) BOOL sportSurfing;
/// v3 足排球
@property (nonatomic, readonly) BOOL sportFootvolley;
/// v3 站立滑水
@property (nonatomic, readonly) BOOL sportStandWaterSkiing;
/// v3 站绳
@property (nonatomic, readonly) BOOL sportBattlingRope;
/// v3 滑板
@property (nonatomic, readonly) BOOL sportSkateboard;
/// v3 踏步机
@property (nonatomic, readonly) BOOL sportNoticeStepper;
/// 运动显示个数
@property (nonatomic, readonly) NSInteger sportShowNum;
/// 有氧健身操
@property (nonatomic, readonly) BOOL sportAerobicsBodybuildingExercise;
/// 引体向上
@property (nonatomic, readonly) BOOL sportPullUp;
/// 单杠
@property (nonatomic, readonly) BOOL sportHighBar;
/// 双杠
@property (nonatomic, readonly) BOOL sportParallelBars;
/// 越野跑
@property (nonatomic, readonly) BOOL sportTrailRunning;
/// 匹克球
@property (nonatomic, readonly) BOOL sportPickleBall;
/// 获取实时数据
@property (nonatomic, readonly) BOOL getRealtimeData;
/// 获取v3语言库
@property (nonatomic, readonly) BOOL getLangLibraryV3;
/// 查找手机
@property (nonatomic, readonly) BOOL getFindPhone;
/// 查找设备
@property (nonatomic, readonly) BOOL getFindDevice;
/// 抬腕亮屏数据获取
@property (nonatomic, readonly) BOOL getUpHandGestureEx;
/// 抬腕亮屏
@property (nonatomic, readonly) BOOL getUpHandGesture;
/// 天气预报
@property (nonatomic, readonly) BOOL getWeather;
/// 可下载语言
@property (nonatomic, readonly) BOOL getDownloadLanguage;
/// 恢复出厂设置
@property (nonatomic, readonly) BOOL getFactoryReset;
/// Flash log
@property (nonatomic, readonly) BOOL getFlashLog;
/// 多运动不能使用app
@property (nonatomic, readonly) BOOL getMultiActivityNoUseApp;
/// 多表盘
@property (nonatomic, readonly) BOOL getMultiDial;
/// 获取菜单列表
@property (nonatomic, readonly) BOOL getMenuList;
/// 请勿打扰
@property (nonatomic, readonly) BOOL getDoNotDisturbMain3;
/// 语音功能
@property (nonatomic, readonly) BOOL getVoiceTransmission;
/// 设置喝水开关通知类型
@property (nonatomic, readonly) BOOL setDrinkWaterAddNotifyFlag;
/// 获取重启日志错误码和标志位
@property (nonatomic, readonly) BOOL getDeviceLogState;
/// 支持获取表盘列表的接口
@property (nonatomic, readonly) BOOL getNewWatchList;
/// 消息提醒图标自适应
@property (nonatomic, readonly) BOOL getNotifyIconAdaptive;
/// 压力开关增加通知类型和全天压力模式设置
@property (nonatomic, readonly) BOOL getPressureNotifyFlagMode;
/// 科学睡眠
@property (nonatomic, readonly) BOOL getScientificSleep;
/// 血氧开关增加通知类型
@property (nonatomic, readonly) BOOL getSpo2NotifyFlag;
/// v3 收集log
@property (nonatomic, readonly) BOOL getV3Log;
/// 获取表盘ID
@property (nonatomic, readonly) BOOL getWatchID;
/// 获取设备名称
@property (nonatomic, readonly) BOOL getDeviceName;
/// 获取电池日志
@property (nonatomic, readonly) BOOL getBatteryLog;
/// 获取电池信息
@property (nonatomic, readonly) BOOL getBatteryInfo;
/// 获取过热日志
@property (nonatomic, readonly) BOOL getHeatLog;
/// 获取走动提醒 v3
@property (nonatomic, readonly) BOOL getWalkReminderV3;
/// 获取支持蓝牙音乐 v3
@property (nonatomic, readonly) BOOL getSupportV3BleMusic;
/// 支持获取固件本地提示音文件信息
@property (nonatomic, readonly) BOOL getSupportGetBleBeepV3;
/// BIT1 k6项目不需要对应的壁纸表盘，veryFit默认的都是支持的，新加一个不支持的功能表，不需要的配置这个
@property (nonatomic, readonly) BOOL getVeryFitNotSupportPhotoWallpaperV3;
/// 支持升级gps固件
@property (nonatomic, readonly) BOOL getSupportUpdateGps;
/// 支持ublox模块
@property (nonatomic, readonly) BOOL getUbloxModel;
/// 支持获取固件歌曲名和文件夹指令下发和固件回复使用协议版本号0x10
@property (nonatomic, readonly) BOOL getSupportGetBleMusicInfoVerV3;
/// 获得固件三级版本和BT的三级版本
@property (nonatomic, readonly) BOOL getBtVersion;
/// V3的运动类型设置和获取
@property (nonatomic, readonly) BOOL getSportsTypeV3;
/// 支持运动模式识别开关获取
@property (nonatomic, readonly) BOOL getActivitySwitch;
/// 支持动态消息图标更新
@property (nonatomic, readonly) BOOL getNoticeIconInformation;
/// 支持获取固件支持app下发的详情的最大数量
@property (nonatomic, readonly) BOOL getSetMaxItemsNum;
/// v3 消息提醒
@property (nonatomic, readonly) BOOL getNotifyMsgV3;
/// 获取屏幕亮度
@property (nonatomic, readonly) BOOL getScreenBrightnessMain9;
/// 128个字节通知
@property (nonatomic, readonly) BOOL getNotice128byte;
/// 250个字节通知
@property (nonatomic, readonly) BOOL getNotice250byte;
/// 支持获取不可删除的快捷应用列表
@property (nonatomic, readonly) BOOL getDeletableMenuListV2;
/// 设置支持系统配对
@property (nonatomic, readonly) BOOL getSupportPairEachConnect;
/// 支持获取运动目标
@property (nonatomic, readonly) BOOL getSupportGetMainSportGoalV3;
/// 取bt蓝牙MAC地址
@property (nonatomic, readonly) BOOL getBtAddrV2;
/// 血压校准与测量
@property (nonatomic, readonly) BOOL getSupportBpSetOrMeasurementV2;
/// 生理周期开关增加通知类型
@property (nonatomic, readonly) BOOL getMenstrualAddNotifyFlagV3;
/// 设置获取运动三环周目标
@property (nonatomic, readonly) BOOL getSupportSetGetTimeGoalTypeV2;
/// 多运动同步数据支持摄氧量等级数据
@property (nonatomic, readonly) BOOL getOxygenDataSupportGradeV3;
/// 多运动数据同步支持海拔高度数据
@property (nonatomic, readonly) BOOL getSupportSyncActivityDataAltitudeInfo;
/// 绑定授权码
@property (nonatomic, readonly) BOOL getBindCodeAuth;
/// V3血氧数据 偏移按照分钟偏移
@property (nonatomic, readonly) BOOL getSpo2OffChangeV3;
/// 5级心率区间
@property (nonatomic, readonly) BOOL getLevel5HrInterval;
/// 5个心率区间
@property (nonatomic, readonly) BOOL getFiveHRInterval;
/// 获得固件三级版本和BT的3级版本
@property (nonatomic, readonly) BOOL getBleAndBtVersion;
/// 紧急联系人
@property (nonatomic, readonly) BOOL getSupportSetGetEmergencyContactV3;
/// 重复提醒类型设置星期重复
@property (nonatomic, readonly) BOOL getSupportSetRepeatWeekTypeOnScheduleReminderV3;
/// 重复提醒类型设置
@property (nonatomic, readonly) BOOL getSupportSetRepeatTypeOnScheduleReminderV3;
/// 经期开关
@property (nonatomic, readonly) BOOL getSupportSetMenstrualReminderOnOff;
/// 版本信息
@property (nonatomic, readonly) BOOL getVersionInfo;
/// 获取MTU
@property (nonatomic, readonly) BOOL getMtu;
/// 获取手环的升级状态
@property (nonatomic, readonly) BOOL getDeviceUpdateState;
/// v2获取心率监测模式
@property (nonatomic, readonly) BOOL getHeartRateModeV2;
/// 目标步数类型为周目标
@property (nonatomic, readonly) BOOL getStepDataTypeV2;
/// 快速消息
@property (nonatomic, readonly) BOOL getFastMsgDataV3;
/// 支持快速回复
@property (nonatomic, readonly) BOOL getSupportCallingQuickReply;
/// 新错误码 v3
@property (nonatomic, readonly) BOOL getSupportDataTranGetNewErrorCodeV3;
/// 运动自识别结束开关不展示，设置开关状态
@property (nonatomic, readonly) BOOL getAutoActivityEndSwitchNotDisplay;
/// 运动自识别暂停开关不展示，设置开关状态
@property (nonatomic, readonly) BOOL getAutoActivityPauseSwitchNotDisplay;
/// 运动模式自动识别开关设置获取 新增类型椭圆机 划船机 游泳
@property (nonatomic, readonly) BOOL getV3AutoActivitySwitch;
/// 运动模式自动识别开关设置获取 新增类型骑行
@property (nonatomic, readonly) BOOL getAutoActivitySwitchAddBicycle;
/// 运动模式自动识别开关设置获取 新增类型智能跳绳
@property (nonatomic, readonly) BOOL getAutoActivitySwitchAddSmartRope;
/// 运动自识别获取和设置指令使用新的版本与固件交互
@property (nonatomic, readonly) BOOL getAutoActivitySetGetUseNewStructExchange;
/// 支持走动提醒设置/获取免提醒时间段
@property (nonatomic, readonly) BOOL getSupportSetGetNoReminderOnWalkReminderV2;
/// 支持获取sn信息
@property (nonatomic, readonly) BOOL getSupportGetSnInfo;
/// 日程提醒不显示标题
@property (nonatomic, readonly) BOOL getScheduleReminderNotDisplayTitle;
/// 城市名称
@property (nonatomic, readonly) BOOL getSupportV3LongCityName;
/// 亮度设置支持夜间亮度等级设置
@property (nonatomic, readonly) BOOL getSupportAddNightLevelV2;
/// 固件支持使用表盘框架使用argb6666编码格式
@property (nonatomic, readonly) BOOL getSupportDialFrameEncodeFormatArgb6666;
/// 固件支持app下发手机操作系统信息
@property (nonatomic, readonly) BOOL getSupportAppSendPhoneSystemInfo;
/// 固件管理切换快/慢速模式，APP不下发设置链接参数(快慢速）
@property (nonatomic, readonly) BOOL getDeviceControlFastModeAlone;
/// 设备支持一键双连，区分配对时APP展示引导页还是直接下发配对指令
@property (nonatomic, readonly) BOOL getSupportOnekeyDoubleContact;
/// 语音助手状态
@property (nonatomic, readonly) BOOL getSupportSetVoiceAssistantStatus;
/// 支持获取flash log size
@property (nonatomic, readonly) BOOL getSupportFlashLogSize;
/// 支持获取单位
@property (nonatomic, readonly) BOOL getSupportGetUnit;
/// 通知支持Ryze Connect
@property (nonatomic, readonly) BOOL getSupportRyzeConnect;
/// 通知支持LOOPS FIT
@property (nonatomic, readonly) BOOL getSupportLoopsFit;
/// 通知支持TAS Smart
@property (nonatomic, readonly) BOOL getSupportTasSmart;
/// 女性经期不支持设置排卵日提醒
@property (nonatomic, readonly) BOOL getNotSupportSetOvulation;
/// 固件支持每小时目标步数设置和获取
@property (nonatomic, readonly) BOOL getSupportWalkGoalSteps;
/// GTX03/05定制，hamaAPP，功能表开启后，运动列表不支持增删，支持排序
@property (nonatomic, readonly) BOOL getNotSupportDeleteAddSportSort;
/// 支持获取用户习惯信息(打点信息)中久坐提醒特性
@property (nonatomic, readonly) BOOL getSupportSedentaryTensileHabitInfo;
/// 支持固件快速定位，APP下发GPS权限及经纬度给固件
@property (nonatomic, readonly) BOOL getSupportSendGpsLongitudeAndLatitude;
/// 支持设备bt连接的手机型号
@property (nonatomic, readonly) BOOL getSupportGetV3DeviceBtConnectPhoneModel;
/// 支持血压模型文件更新
@property (nonatomic, readonly) BOOL getSupportBloodPressureModelFileUpdate;
/// 勿扰支持事件范围开关和重复
@property (nonatomic, readonly) BOOL getSupportDisturbHaveRangRepeat;
/// 日历提醒
@property (nonatomic, readonly) BOOL getSupportCalendarReminder;
/// 表盘传输需要对应的传输原始的没有压缩的大小给固件,增加字段watch_file_size
@property (nonatomic, readonly) BOOL getWatchDailSetAddSize;
/// 支持同步过高过低时心率数据
@property (nonatomic, readonly) BOOL getSupportSyncOverHighLowHeartData;
/// 间隔一分钟同步新增（206设备）
@property (nonatomic, readonly) BOOL getSupportPerMinuteOne;
/// 设置获取消息应用状态使用version0x20版本下发
@property (nonatomic, readonly) BOOL setNoticeMessageStateUseVersion0x20;
/// 科学睡眠开关
@property (nonatomic, readonly) BOOL setScientificSleepSwitch;
/// 设置夜间体温开关
@property (nonatomic, readonly) BOOL setTemperatureSwitchHealth;
/// 心率监测
@property (nonatomic, readonly) BOOL setHeartRateMonitor;
/// 支持喝水提醒设置免提醒时间段
@property (nonatomic, readonly) BOOL setNoReminderOnDrinkReminder;
/// 默认是支持agps off升级
@property (nonatomic, readonly) BOOL setAgpsOffLine;
/// 默认是支持agps online升级
@property (nonatomic, readonly) BOOL setAgpsOnLine;
/// 设置v3心率的间隔
@property (nonatomic, readonly) BOOL setSetV3HeartInterval;
/// 天气城市
@property (nonatomic, readonly) BOOL setWeatherCity;
/// 防打扰
@property (nonatomic, readonly) BOOL setDoNotDisturb;
/// 卡路里目标
@property (nonatomic, readonly) BOOL setCalorieGoal;
/// 女性生理周期
@property (nonatomic, readonly) BOOL setMenstruation;
/// 压力数据
@property (nonatomic, readonly) BOOL setPressureData;
/// 血氧数据
@property (nonatomic, readonly) BOOL setSpo2Data;
/// 运动模式排序
@property (nonatomic, readonly) BOOL setSportModeSort;
/// 运动模式开关
@property (nonatomic, readonly) BOOL setActivitySwitch;
/// 夜间自动亮度
@property (nonatomic, readonly) BOOL setNightAutoBrightness;
/// 5级亮度调节
@property (nonatomic, readonly) BOOL setScreenBrightness5Level;
/// 走动提醒
@property (nonatomic, readonly) BOOL setWalkReminder;
/// 3级亮度调节 默认是5级别，手表app显示，手表不显示
@property (nonatomic, readonly) BOOL setScreenBrightness3Level;
/// 洗手提醒
@property (nonatomic, readonly) BOOL setHandWashReminder;
/// app支持本地表盘改 云端表盘图片下载
@property (nonatomic, readonly) BOOL setLocalDial;
/// 固件对应设置心率过高告警的不起作用
@property (nonatomic, readonly) BOOL setNotSupportHrHighAlarm;
/// 新加一个不支持的功能表，不需要的配置这个
@property (nonatomic, readonly) BOOL setNotSupportPhotoWallpaper;
/// 压力过高提醒
@property (nonatomic, readonly) BOOL setPressureHighReminder;
/// 壁纸表盘颜色设置
@property (nonatomic, readonly) BOOL setWallpaperOnlyTimeColor;
/// 壁纸表盘设置
@property (nonatomic, readonly) BOOL setWallpaperDial;
/// 呼吸训练
@property (nonatomic, readonly) BOOL setSupportBreathRate;
/// 设置单位的增加卡路里设置
@property (nonatomic, readonly) BOOL setSupportCalorieUnit;
/// 运动计划
@property (nonatomic, readonly) BOOL setSupportSportPlan;
/// 设置单位的增加泳池的单位设置
@property (nonatomic, readonly) BOOL setSupportSwimPoolUnit;
/// v3 bp
@property (nonatomic, readonly) BOOL setSupportV3Bp;
/// 添加功能表兼容
@property (nonatomic, readonly) BOOL setV3GetSportSortField;
/// 表盘排序
@property (nonatomic, readonly) BOOL setWatchDialSort;
/// 运动三环目标获取
@property (nonatomic, readonly) BOOL setGetCalorieDistanceGoal;
/// 设置目标增加中高运动时长
@property (nonatomic, readonly) BOOL setMidHighTimeGoal;
/// 固件支持解绑不清除设备上的数据
@property (nonatomic, readonly) BOOL setNewRetainData;
/// 日程提醒
@property (nonatomic, readonly) BOOL setScheduleReminder;
/// 100种运动数据排序
@property (nonatomic, readonly) BOOL setSet100SportSort;
/// 20种基础运动数据子参数排序
@property (nonatomic, readonly) BOOL setSet20SportParamSort;
/// 主界面ui控件排列
@property (nonatomic, readonly) BOOL setSetMainUiSort;
/// 压力校准
@property (nonatomic, readonly) BOOL setSetStressCalibration;
/// 支持app设置智能心率
@property (nonatomic, readonly) BOOL setSmartHeartRate;
/// 支持app设置全天的血氧开关数据
@property (nonatomic, readonly) BOOL setSpo2AllDayOnOff;
/// 支持app下发压缩的sbc语言文件给ble
@property (nonatomic, readonly) BOOL setSupportAppSendVoiceToBle;
/// 设置单位的增加骑行的单位设置
@property (nonatomic, readonly) BOOL setSupportCyclingUnit;
/// 设置单位的增加步行跑步的单位设置
@property (nonatomic, readonly) BOOL setSupportWalkRunUnit;
/// 设置走动提醒中的目标时间
@property (nonatomic, readonly) BOOL setWalkReminderTimeGoal;
/// 支持显示表盘容量
@property (nonatomic, readonly) BOOL setWatchCapacitySizeDisplay;
/// 支持壁纸表盘时间位置移动、控件图标颜色修改、控件功能选择
@property (nonatomic, readonly) BOOL setWatchPhotoPositionMove;
/// 菜单设置
@property (nonatomic, readonly) BOOL setMenuListMain7;
/// v3经期的历史数据下发
@property (nonatomic, readonly) BOOL setHistoryMenstrual;
/// v2经期提醒设置 增加易孕期和结束时间
@property (nonatomic, readonly) BOOL setMenstrualAddPregnancy;
/// realme wear 定制需求 不支持显示来电”延时三秒”开关
@property (nonatomic, readonly) BOOL setNotSurportCalling3SDelay;
/// 支持健身指导开关下发
@property (nonatomic, readonly) BOOL setSetFitnessGuidance;
/// 通知设置
@property (nonatomic, readonly) BOOL setSetNotificationStatus;
/// 未读提醒
@property (nonatomic, readonly) BOOL setSetUnreadAppReminder;
/// 支持V3天气
@property (nonatomic, readonly) BOOL setSetV3Weather;
/// 支持天气推送增加日落日出时间
@property (nonatomic, readonly) BOOL setSetV3WeatherSunrise;
/// 支持世界时间设置
@property (nonatomic, readonly) BOOL setSetV3WorldTime;
/// 支持联系人同步
@property (nonatomic, readonly) BOOL setSyncContact;
/// 同步V3的多运动增加新的参数
@property (nonatomic, readonly) BOOL setSyncV3ActivityAddParam;
/// 音乐名称设置
@property (nonatomic, readonly) BOOL setTransferMusicFile;
/// 走动提醒增加通知类型
@property (nonatomic, readonly) BOOL setWalkReminderAddNotify;
/// 设置单位支持华氏度
@property (nonatomic, readonly) BOOL setSupportFahrenheit;
/// 支持v3闹钟设置获取指定名称闹钟（KR01定制）
@property (nonatomic, readonly) BOOL setGetAlarmSpecify;
/// 支持airoha芯片采gps数据功能表
@property (nonatomic, readonly) BOOL setAirohaGpsChip;
/// 支持第二套运动图标功能表    目前仅idw05支持
@property (nonatomic, readonly) BOOL setSupportSecondSportIcon;
/// 100种运动需要的中图功能表
@property (nonatomic, readonly) BOOL setSportMediumIcon;
/// 支持天气推送增加日落日出时间
@property (nonatomic, readonly) BOOL setWeatherSunTime;
/// 支持V3天气 下发空气质量等级
@property (nonatomic, readonly) BOOL setWeatherAirGrade;
/// 支持设置喝水提醒
@property (nonatomic, readonly) BOOL setDrinkWaterReminder;
/// 呼吸率开关设置
@property (nonatomic, readonly) BOOL setRespirationRate;
/// 最大摄氧量
@property (nonatomic, readonly) BOOL setMaxBloodOxygen;
/// ble控制音乐
@property (nonatomic, readonly) BOOL setBleControlMusic;
/// v3压力功能表
@property (nonatomic, readonly) BOOL setMainPressure;
/// 勿扰模式设置获取新增全天勿扰开关和智能开关
@property (nonatomic, readonly) BOOL setNoDisturbAllDayOnOff;
/// 支持设置全天勿扰开关
@property (nonatomic, readonly) BOOL setOnlyNoDisturbAllDayOnOff;
/// 支持设置智能勿扰开关
@property (nonatomic, readonly) BOOL setOnlyNoDisturbSmartOnOff;
/// 时区设定值为实际时区值的扩大100倍
@property (nonatomic, readonly) BOOL setTimeZoneFloat;
/// 设定温度开关
@property (nonatomic, readonly) BOOL setTemperatureSwitchSupport;
/// 支持设置获取消息应用总开关字段
@property (nonatomic, readonly) BOOL setMsgAllSwitch;
/// 不支持支持来电提醒页面的“延迟三秒”开关设置项显示
@property (nonatomic, readonly) BOOL setNotSupperCall3Delay;
/// 支持来电已拒
@property (nonatomic, readonly) BOOL setNoticeMissedCallV2;
/// 结束查找手机
@property (nonatomic, readonly) BOOL setOverFindPhone;
/// 获取所有的健康监测开关
@property (nonatomic, readonly) BOOL getHealthSwitchStateSupportV3;
/// 久坐提醒
@property (nonatomic, readonly) BOOL setSedentariness;
/// 设置屏幕亮度
@property (nonatomic, readonly) BOOL setScreenBrightness;
/// 设置设备音乐音量
@property (nonatomic, readonly) BOOL setSetPhoneVoice;
/// 设置快捷来电回复开关
@property (nonatomic, readonly) BOOL setSupportSetCallQuickReplyOnOff;
/// 支持多运动交互中下发GPS坐标
@property (nonatomic, readonly) BOOL setSupportExchangeSetGpsCoordinates;
/// 支持v3天气协议下发大气压强
@property (nonatomic, readonly) BOOL setSupportV3WeatherAddAtmosphericPressure;
/// 支持v3天气协议下发积雪厚度
@property (nonatomic, readonly) BOOL setSupportSetV3WeatcherAddSnowDepth;
/// 支持v3天气协议下发降雪量
@property (nonatomic, readonly) BOOL setSupportSetV3WeatcherAddSnowfall;
/// 支持v3天气协议下发协议版本0x4版本
@property (nonatomic, readonly) BOOL setSupportSetV3WeatcherSendStructVersion04;
/// 支持设置压力校准阈
@property (nonatomic, readonly) BOOL setSendCalibrationThreshold;
/// 支持屏蔽跑步计划入口
@property (nonatomic, readonly) BOOL getNotSupportAppSendRunPlan;
/// 支持APP展示零星小睡睡眠数据
@property (nonatomic, readonly) BOOL getSupportDisplayNapSleep;
/// 支持app获取智能心率
@property (nonatomic, readonly) BOOL getSupportGetSmartHeartRate;
/// 支持app获取压力开关
@property (nonatomic, readonly) BOOL getSupportGetPressureSwitchInfo;
/// 支持电子卡片功能
@property (nonatomic, readonly) BOOL getSupportECardOperate;
/// 支持语音备忘录功能
@property (nonatomic, readonly) BOOL getSupportVoiceMemoOperate;
/// 支持晨报功能
@property (nonatomic, readonly) BOOL getSupportMorningEdition;
/// 支持app获取血氧饱和度开关
@property (nonatomic, readonly) BOOL getSupportGetSpo2SwitchInfo;
/// 支持同步心率使用version字段兼容
@property (nonatomic, readonly) BOOL getSupportSyncHealthHrUseVersionCompatible;
/// v3天气设置增加下发48小时天气数据
@property (nonatomic, readonly) BOOL getSupportSetV3Add48HourWeatherData;
/// 中文
@property (nonatomic, readonly) BOOL languageCh;
/// 捷克文
@property (nonatomic, readonly) BOOL languageCzech;
/// 英文
@property (nonatomic, readonly) BOOL languageEnglish;
/// 法文
@property (nonatomic, readonly) BOOL languageFrench;
/// 德文
@property (nonatomic, readonly) BOOL languageGerman;
/// 意大利文
@property (nonatomic, readonly) BOOL languageItalian;
/// 日文
@property (nonatomic, readonly) BOOL languageJapanese;
/// 西班牙文
@property (nonatomic, readonly) BOOL languageSpanish;
/// 阿拉伯语
@property (nonatomic, readonly) BOOL languageArabic;
/// 缅甸语
@property (nonatomic, readonly) BOOL languageBurmese;
/// 菲律宾语
@property (nonatomic, readonly) BOOL languageFilipino;
/// 希腊语
@property (nonatomic, readonly) BOOL languageGreek;
/// 泰国语
@property (nonatomic, readonly) BOOL languageThai;
/// 繁体中文
@property (nonatomic, readonly) BOOL languageTraditionalChinese;
/// 越南语
@property (nonatomic, readonly) BOOL languageVietnamese;
/// 荷兰文
@property (nonatomic, readonly) BOOL languageDutch;
/// 匈牙利文
@property (nonatomic, readonly) BOOL languageHungarian;
/// 立陶宛文
@property (nonatomic, readonly) BOOL languageLithuanian;
/// 波兰文
@property (nonatomic, readonly) BOOL languagePolish;
/// 罗马尼亚文
@property (nonatomic, readonly) BOOL languageRomanian;
/// 俄罗斯文
@property (nonatomic, readonly) BOOL languageRussian;
/// 斯洛文尼亚文
@property (nonatomic, readonly) BOOL languageSlovenian;
/// 乌克兰文
@property (nonatomic, readonly) BOOL languageUkrainian;
/// 克罗地亚语
@property (nonatomic, readonly) BOOL languageCroatian;
/// 丹麦语
@property (nonatomic, readonly) BOOL languageDanish;
/// 印地语
@property (nonatomic, readonly) BOOL languageHindi;
/// 印尼语
@property (nonatomic, readonly) BOOL languageIndonesian;
/// 韩语
@property (nonatomic, readonly) BOOL languageKorean;
/// 葡萄牙语
@property (nonatomic, readonly) BOOL languagePortuguese;
/// 斯洛伐克语
@property (nonatomic, readonly) BOOL languageSlovak;
/// 土耳其
@property (nonatomic, readonly) BOOL languageTurkish;
/// 波斯语
@property (nonatomic, readonly) BOOL languagePersia;
/// 瑞典语
@property (nonatomic, readonly) BOOL languageSweden;
/// 挪威语
@property (nonatomic, readonly) BOOL languageNorwegian;
/// 芬兰语
@property (nonatomic, readonly) BOOL languageFinland;
/// 孟加拉语
@property (nonatomic, readonly) BOOL languageBengali;
/// 高棉语
@property (nonatomic, readonly) BOOL languageKhmer;
/// 马来语
@property (nonatomic, readonly) BOOL languageMalay;
/// 巴西葡语
@property (nonatomic, readonly) BOOL languageBrazilianPortuguese;
/// v3 心率
@property (nonatomic, readonly) BOOL syncV3Hr;
/// v3 游泳
@property (nonatomic, readonly) BOOL syncV3Swim;
/// v3 血氧
@property (nonatomic, readonly) BOOL syncV3Spo2;
/// v3 压力
@property (nonatomic, readonly) BOOL syncV3Pressure;
/// v3 多运动
@property (nonatomic, readonly) BOOL syncV3Activity;
/// v3 睡眠
@property (nonatomic, readonly) BOOL syncV3Sleep;
/// v3 步数
@property (nonatomic, readonly) BOOL syncV3Sports;
/// v3 gps
@property (nonatomic, readonly) BOOL syncV3Gps;
/// v3 闹钟
@property (nonatomic, readonly) BOOL syncV3SyncAlarm;
/// v3 身体电量
@property (nonatomic, readonly) BOOL syncV3BodyPower;
/// 同步hrv
@property (nonatomic, readonly) BOOL getSupportHrvV3;
/// 同步血压
@property (nonatomic, readonly) BOOL getSupportPerBpV3;
/// 同步噪音
@property (nonatomic, readonly) BOOL syncV3Noise;
/// 同步温度
@property (nonatomic, readonly) BOOL syncV3Temperature;
/// gps
@property (nonatomic, readonly) BOOL syncGps;
/// v3多运动同步数据交换
@property (nonatomic, readonly) BOOL syncV3ActivityExchangeData;
/// 心率功能
@property (nonatomic, readonly) BOOL syncHeartRate;
/// 心率监测
@property (nonatomic, readonly) BOOL syncHeartRateMonitor;
/// 睡眠检测
@property (nonatomic, readonly) BOOL syncSleepMonitor;
/// 快速同步
@property (nonatomic, readonly) BOOL syncFastSync;
/// 获取时间同步
@property (nonatomic, readonly) BOOL syncActivityTimeSync;
/// v2同步 时间线
@property (nonatomic, readonly) BOOL syncTimeLine;
/// 需要V2的同步
@property (nonatomic, readonly) BOOL syncNeedV2;
/// v3多运动同步支持实时速度显示
@property (nonatomic, readonly) BOOL syncRealTimeV3;
/// 数据交换增加实时的配速字段
@property (nonatomic, readonly) BOOL syncExchangeDataReplyAddRealTimeSpeedPaceV3;
/// 多运行结束时间使用UTC模式
@property (nonatomic, readonly) BOOL syncHealthSyncV3ActivityEndTimeUseUtcMode;
/// 支持数据同步时开启快速模式
@property (nonatomic, readonly) BOOL syncSupportSetFastModeWhenSyncConfig;
/// 闹钟个数
@property (nonatomic, readonly) NSInteger alarmCount;
/// 刷牙
@property (nonatomic, readonly) BOOL alarmBrushTeeth;
/// 约会
@property (nonatomic, readonly) BOOL alarmDating;
/// 吃饭
@property (nonatomic, readonly) BOOL alarmDinner;
/// 吃药
@property (nonatomic, readonly) BOOL alarmMedicine;
/// 会议
@property (nonatomic, readonly) BOOL alarmMeeting;
/// 聚会
@property (nonatomic, readonly) BOOL alarmParty;
/// 休息
@property (nonatomic, readonly) BOOL alarmRest;
/// 睡觉
@property (nonatomic, readonly) BOOL alarmSleep;
/// 锻炼
@property (nonatomic, readonly) BOOL alarmSport;
/// 起床
@property (nonatomic, readonly) BOOL alarmWakeUp;
/// 支持设置防丢
@property (nonatomic, readonly) BOOL supportSetAntilost;
/// 支持设置v2天气数据
@property (nonatomic, readonly) BOOL supportSetWeatherDataV2;
/// 支持设置一键呼叫
@property (nonatomic, readonly) BOOL supportSetOnetouchCalling;
/// alexa 语音提醒增加对应的时钟传输字段
@property (nonatomic, readonly) BOOL alexaReminderAddSecV3;
/// alexa 简单控制命令
@property (nonatomic, readonly) BOOL alexaSetEasyOperateV3;
/// alexa 语音闹钟获取设置命令使用
@property (nonatomic, readonly) BOOL alexaSetGetAlexaAlarmV3;
/// alexa 设置跳转运动界面
@property (nonatomic, readonly) BOOL alexaSetJumpSportUiV3;
/// alexa 设置跳转ui界面
@property (nonatomic, readonly) BOOL alexaSetJumpUiV3;
/// alexa app设置开关命令
@property (nonatomic, readonly) BOOL alexaSetSetOnOffTypeV3;
/// alexa 语音支持设置天气
@property (nonatomic, readonly) BOOL alexaSetWeatherV3;
/// alexa 支持设置多个定时器
@property (nonatomic, readonly) BOOL alexaTimeNewV3;
/// alexa 100级亮度控制
@property (nonatomic, readonly) BOOL setAlexaControll100brightness;
/// alexa 获取alexa默认语言
@property (nonatomic, readonly) BOOL alexaGetSupportGetAlexaDefaultLanguage;
/// alexa跳转运动界面支持100种运动类型字段
@property (nonatomic, readonly) BOOL alexaGetUIControllSports;
- (NSString * _Nullable)printProperties SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16protocol_channel13IDOFutureItem")
@interface IDOFutureItem : NSObject
@property (nonatomic) NSInteger weatherType;
@property (nonatomic) NSInteger maxTemp;
@property (nonatomic) NSInteger minTemp;
- (nonnull instancetype)initWithWeatherType:(NSInteger)weatherType maxTemp:(NSInteger)maxTemp minTemp:(NSInteger)minTemp OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// 健康数据类型
typedef SWIFT_ENUM(NSInteger, IDOGetValueType, open) {
/// 当天步数
  IDOGetValueTypePedometer = 0,
/// 当天卡路里
  IDOGetValueTypeCalorie = 1,
/// 当天最近一次测量的心率
  IDOGetValueTypeHeartRate = 2,
/// 当天血氧
  IDOGetValueTypeSpO2 = 3,
/// 当天距离（米）
  IDOGetValueTypeKilometer = 4,
/// 当天室内游泳距离（米）
  IDOGetValueTypeSwimmingDistance = 5,
/// 当天睡眠得分
  IDOGetValueTypeSleepScore = 6,
/// 当天跑步次数
  IDOGetValueTypeRunningCount = 7,
/// 当天游泳次数
  IDOGetValueTypeSwimmingCount = 8,
/// 当天运动次数
  IDOGetValueTypeDayWorkoutCount = 9,
/// 当周运动次数
  IDOGetValueTypeWeekWorkoutCount = 10,
/// 身体电量
  IDOGetValueTypeBodyBattery = 11,
};


/// Control GPS event number
SWIFT_CLASS("_TtC16protocol_channel18IDOGpsControlModel")
@interface IDOGpsControlModel : NSObject
/// 1: Enable log
/// 2: Disable log
/// 3: Write AGPS data
/// 4: Erase AGPS data
/// 5: Write GPS firmware
@property (nonatomic) NSInteger type;
/// 0: Invalid
/// 1: Command in progress
/// 2: Completed
@property (nonatomic) NSInteger status;
/// 0 for success, non-zero for failure
@property (nonatomic) NSInteger errorCode;
- (nonnull instancetype)initWithType:(NSInteger)type status:(NSInteger)status errorCode:(NSInteger)errorCode OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Control GPS event number
SWIFT_CLASS("_TtC16protocol_channel23IDOGpsControlParamModel")
@interface IDOGpsControlParamModel : NSObject
/// 1: Control
/// 2: Query
@property (nonatomic) NSInteger operate;
/// 1: Enable log
/// 2: Disable log
/// 3: Write AGPS data
/// 4: Erase AGPS data
/// 5: Write GPS firmware
@property (nonatomic) NSInteger type;
- (nonnull instancetype)initWithOperate:(NSInteger)operate type:(NSInteger)type OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel24IDOGpsHotStartParamModel")
@interface IDOGpsHotStartParamModel : NSObject
/// Longitude (multiplied by 10^6)
@property (nonatomic) NSInteger longitude;
/// Latitude (multiplied by 10^6)
@property (nonatomic) NSInteger latitude;
/// Altitude (multiplied by 10)
@property (nonatomic) NSInteger altitude;
/// TCXO offset
@property (nonatomic) NSInteger tcxoOffset;
- (nonnull instancetype)initWithLongitude:(NSInteger)longitude latitude:(NSInteger)latitude altitude:(NSInteger)altitude tcxoOffset:(NSInteger)tcxoOffset OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Get GPS Information event number
SWIFT_CLASS("_TtC16protocol_channel15IDOGpsInfoModel")
@interface IDOGpsInfoModel : NSObject
/// GPS error code
/// 0 - Normal, non-zero - Exceptional
@property (nonatomic) NSInteger errCode;
/// GPS firmware version
@property (nonatomic) NSInteger fwVersion;
/// Validity period of AGPS (Assisted GPS)
@property (nonatomic) NSInteger agpsInfo;
/// AGPS error code
@property (nonatomic) NSInteger agpsErrCode;
/// UTC year
@property (nonatomic) NSInteger utcYear;
/// UTC month
@property (nonatomic) NSInteger utcMonth;
/// UTC day
@property (nonatomic) NSInteger utcDay;
/// UTC hour
@property (nonatomic) NSInteger utcHour;
/// UTC minute
@property (nonatomic) NSInteger utcMinute;
/// Start mode
/// 1 - Cold start
/// 2 - Hot start
@property (nonatomic) NSInteger startMode;
/// Positioning satellite selection
/// 1 - GPS
/// 2 - GLONASS
/// 3 - GPS + GLONASS
@property (nonatomic) NSInteger gns;
/// Fix start bit
/// Default 0, used for debugging
@property (nonatomic) NSInteger fixStartBit;
- (nonnull instancetype)initWithErrCode:(NSInteger)errCode fwVersion:(NSInteger)fwVersion agpsInfo:(NSInteger)agpsInfo agpsErrCode:(NSInteger)agpsErrCode utcYear:(NSInteger)utcYear utcMonth:(NSInteger)utcMonth utcDay:(NSInteger)utcDay utcHour:(NSInteger)utcHour utcMinute:(NSInteger)utcMinute startMode:(NSInteger)startMode gns:(NSInteger)gns fixStartBit:(NSInteger)fixStartBit OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class IDOItemItem;

SWIFT_CLASS("_TtC16protocol_channel19IDOGpsInfoModelItem")
@interface IDOGpsInfoModelItem : NSObject
/// Training type
/// 186: Rest plan
/// 187: Outdoor running plan
/// 188: Indoor running plan
/// 189: Indoor fitness plan
@property (nonatomic) NSInteger type;
/// Number of actions
/// Note: The number of actions is zero when resting, and non-zero for other actions
@property (nonatomic) NSInteger num;
@property (nonatomic, copy) NSArray<IDOItemItem *> * _Nonnull item;
- (nonnull instancetype)initWithType:(NSInteger)type num:(NSInteger)num item:(NSArray<IDOItemItem *> * _Nonnull)item OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Get GPS Status event number
SWIFT_CLASS("_TtC16protocol_channel17IDOGpsStatusModel")
@interface IDOGpsStatusModel : NSObject
/// GPS running status
/// 0 - Not running
/// 1 - Searching for satellites
/// 2 - Tracking
@property (nonatomic) NSInteger gpsRunStatus;
/// Validity of AGPS (Assisted GPS) in hours
/// Non-zero values indicate validity
@property (nonatomic) NSInteger agpsIsValid;
- (nonnull instancetype)initWithGpsRunStatus:(NSInteger)gpsRunStatus agpsIsValid:(NSInteger)agpsIsValid OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel15IDOHabitBroItem")
@interface IDOHabitBroItem : NSObject
@property (nonatomic) NSInteger type;
@property (nonatomic) NSInteger evt;
@property (nonatomic) NSInteger year;
@property (nonatomic) NSInteger month;
@property (nonatomic) NSInteger day;
@property (nonatomic) NSInteger hour;
@property (nonatomic) NSInteger min;
@property (nonatomic) NSInteger sec;
@property (nonatomic) NSInteger count;
- (nonnull instancetype)initWithType:(NSInteger)type evt:(NSInteger)evt year:(NSInteger)year month:(NSInteger)month day:(NSInteger)day hour:(NSInteger)hour min:(NSInteger)min sec:(NSInteger)sec count:(NSInteger)count OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel15IDOHabitImpItem")
@interface IDOHabitImpItem : NSObject
@property (nonatomic) NSInteger type;
@property (nonatomic) NSInteger evt;
@property (nonatomic) NSInteger startYear;
@property (nonatomic) NSInteger startMonth;
@property (nonatomic) NSInteger startDay;
@property (nonatomic) NSInteger startHour;
@property (nonatomic) NSInteger startMin;
@property (nonatomic) NSInteger startSEC;
@property (nonatomic) NSInteger endYear;
@property (nonatomic) NSInteger endMonth;
@property (nonatomic) NSInteger endDay;
@property (nonatomic) NSInteger endHour;
@property (nonatomic) NSInteger endMin;
@property (nonatomic) NSInteger endSEC;
@property (nonatomic) NSInteger completionRate;
- (nonnull instancetype)initWithType:(NSInteger)type evt:(NSInteger)evt startYear:(NSInteger)startYear startMonth:(NSInteger)startMonth startDay:(NSInteger)startDay startHour:(NSInteger)startHour startMin:(NSInteger)startMin startSEC:(NSInteger)startSEC endYear:(NSInteger)endYear endMonth:(NSInteger)endMonth endDay:(NSInteger)endDay endHour:(NSInteger)endHour endMin:(NSInteger)endMin endSEC:(NSInteger)endSEC completionRate:(NSInteger)completionRate OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel17IDOHabitInfoModel")
@interface IDOHabitInfoModel : NSObject
@property (nonatomic) NSInteger browseCount;
@property (nonatomic) NSInteger implementCount;
@property (nonatomic, copy) NSArray<IDOHabitBroItem *> * _Nonnull broItems;
@property (nonatomic, copy) NSArray<IDOHabitImpItem *> * _Nonnull impItems;
- (nonnull instancetype)initWithBrowseCount:(NSInteger)browseCount implementCount:(NSInteger)implementCount broItems:(NSArray<IDOHabitBroItem *> * _Nonnull)broItems impItems:(NSArray<IDOHabitImpItem *> * _Nonnull)impItems OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Set Hand Washing Reminder Event
SWIFT_CLASS("_TtC16protocol_channel32IDOHandWashingReminderParamModel")
@interface IDOHandWashingReminderParamModel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Set Hand Washing Reminder Event
SWIFT_CLASS("_TtC16protocol_channel36IDOHandWashingReminderParamModelObjc")
@interface IDOHandWashingReminderParamModelObjc : NSObject
/// 0: Off
/// 1: On
/// Default is off
@property (nonatomic) NSInteger onOff;
/// Start hour of the reminder
@property (nonatomic) NSInteger startHour;
/// Start minute of the reminder
@property (nonatomic) NSInteger startMinute;
/// End hour of the reminder
@property (nonatomic) NSInteger endHour;
/// End minute of the reminder
@property (nonatomic) NSInteger endMinute;
/// Repeat
@property (nonatomic, copy) NSArray<IDOWeekObjc *> * _Nonnull repeats;
/// Reminder interval in minutes
/// Default is 60 minutes
@property (nonatomic) NSInteger interval;
- (nonnull instancetype)initOnOff:(NSInteger)onOff startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute endHour:(NSInteger)endHour endMinute:(NSInteger)endMinute repeats:(NSArray<IDOWeekObjc *> * _Nonnull)repeats interval:(NSInteger)interval OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel17IDOHeartModeModel")
@interface IDOHeartModeModel : NSObject
/// Update time as a Unix timestamp in seconds. If equal to 0, it means to get the current UTC timestamp.
@property (nonatomic) NSInteger updateTime;
/// Mode
/// \code
/// 0: Off
/// 1: Auto (5 minutes)
/// 2: Continuous monitoring (5 seconds)
/// 3: Manual mode (disables auto)
/// 4: Default type, firmware automatically sets to default mode after setting
/// 5: Set the corresponding measurement interval
/// 6: Intelligent Heart Rate Mode (ID206)
/// Note:
/// 1. If the function setSetV3HeartInterval is configured, Mode 0, Mode 1, and Mode 2 will be ineffective.
/// 2. When configuring with fast settings, setting setSetV3HeartInterval will activate Mode 5
/// 3. When setting continuous heart rate, if the function setSetV3HeartInterval is configured, the corresponding mode is Mode 5.
///
/// \endcode
@property (nonatomic) NSInteger mode;
/// Whether there is a time range. 0: No, 1: Yes
@property (nonatomic) NSInteger hasTimeRange;
@property (nonatomic) NSInteger startHour;
@property (nonatomic) NSInteger startMinute;
@property (nonatomic) NSInteger endHour;
@property (nonatomic) NSInteger endMinute;
/// Measurement interval in seconds
@property (nonatomic) NSInteger measurementInterval;
/// Currently supported heart rate types by the watch
/// \code
/// all 0 invalid values
/// Bit0: 5s mode
/// Note: This is returned as 0 if setSetV3HeartInterval is not enabled in the firmware
///
/// \endcode
@property (nonatomic) NSInteger getSECMode;
/// Currently supported heart rate types by the watch,
/// \code
/// all 0:invalid values
/// Bit0: 1 minute
/// bit1: 3 minutes
/// bit2: 5 minutes
/// bit3: 10 minutes
/// bit4: 30 minutes
/// bit5: 285 mode,
/// bit6: 15 minute mode
/// Note: This is returned as 0 if setSetV3HeartInterval is not enabled in the firmware
///
/// \endcode
@property (nonatomic) NSInteger getMinMode;
/// Notification type:
/// \code
/// 0: Invalid
/// 1: Allow notifications
/// 2: Silent notifications
/// 3: Close notifications
/// Note: This is ineffective if the firmware does not enable v3HeartSetRateModeCustom
///
/// \endcode
@property (nonatomic) NSInteger notifyFlag;
/// 1: Enable smart high heart rate reminder
/// 0: Off
/// Note: This is ineffective if the firmware does not enable v3HeartSetRateModeCustom
@property (nonatomic) NSInteger highHeartMode;
/// 1: Enable smart low heart rate reminder
/// 0: Off
/// Note: This is ineffective if the firmware does not enable v3HeartSetRateModeCustom
@property (nonatomic) NSInteger lowHeartMode;
/// Smart high heart rate reminder threshold
/// Note: This is ineffective if the firmware does not enable v3HeartSetRateModeCustom
@property (nonatomic) NSInteger highHeartValue;
/// Smart low heart rate reminder threshold
/// Note: This is ineffective if the firmware does not enable v3HeartSetRateModeCustom
@property (nonatomic) NSInteger lowHeartValue;
- (nonnull instancetype)initWithUpdateTime:(NSInteger)updateTime mode:(NSInteger)mode hasTimeRange:(NSInteger)hasTimeRange getMinMode:(NSInteger)getMinMode getSECMode:(NSInteger)getSECMode startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute endHour:(NSInteger)endHour endMinute:(NSInteger)endMinute measurementInterval:(NSInteger)measurementInterval notifyFlag:(NSInteger)notifyFlag highHeartMode:(NSInteger)highHeartMode lowHeartMode:(NSInteger)lowHeartMode highHeartValue:(NSInteger)highHeartValue lowHeartValue:(NSInteger)lowHeartValue OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel22IDOHeartModeParamModel")
@interface IDOHeartModeParamModel : NSObject
/// Update time as a Unix timestamp in seconds. If equal to 0, it means to get the current UTC timestamp.
@property (nonatomic) NSInteger updateTime;
/// Mode
/// \code
/// 0: Off
/// 1: Auto (5 minutes)
/// 2: Continuous monitoring (5 seconds)
/// 3: Manual mode (disables auto)
/// 4: Default type, firmware automatically sets to default mode after setting
/// 5: Set the corresponding measurement interval
/// 6: Intelligent Heart Rate Mode (ID206)
/// Note:
/// 1. If the function setSetV3HeartInterval is configured, Mode 0, Mode 1, and Mode 2 will be ineffective.
/// 2. When configuring with fast settings, setting setSetV3HeartInterval will activate Mode 5
/// 3. When setting continuous heart rate, if the function setSetV3HeartInterval is configured, the corresponding mode is Mode 5.
///
/// \endcode
@property (nonatomic) NSInteger mode;
/// Whether there is a time range. 0: No, 1: Yes
@property (nonatomic) NSInteger hasTimeRange;
@property (nonatomic) NSInteger startHour;
@property (nonatomic) NSInteger startMinute;
@property (nonatomic) NSInteger endHour;
@property (nonatomic) NSInteger endMinute;
/// Measurement interval in seconds
@property (nonatomic) NSInteger measurementInterval;
/// Notification type:
/// \code
/// 0: Invalid
/// 1: Allow notifications
/// 2: Silent notifications
/// 3: Close notifications
/// Note: This is ineffective if the firmware does not enable v3HeartSetRateModeCustom
///
/// \endcode
@property (nonatomic) NSInteger notifyFlag;
/// 1: Enable smart high heart rate reminder
/// 0: Off
/// Note: This is ineffective if the firmware does not enable v3HeartSetRateModeCustom
@property (nonatomic) NSInteger highHeartMode;
/// 1: Enable smart low heart rate reminder
/// 0: Off
/// Note: This is ineffective if the firmware does not enable v3HeartSetRateModeCustom
@property (nonatomic) NSInteger lowHeartMode;
/// Smart high heart rate reminder threshold
/// Note: This is ineffective if the firmware does not enable v3HeartSetRateModeCustom
@property (nonatomic) NSInteger highHeartValue;
/// Smart low heart rate reminder threshold
/// Note: This is ineffective if the firmware does not enable v3HeartSetRateModeCustom
@property (nonatomic) NSInteger lowHeartValue;
- (nonnull instancetype)initWithUpdateTime:(NSInteger)updateTime mode:(NSInteger)mode hasTimeRange:(NSInteger)hasTimeRange startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute endHour:(NSInteger)endHour endMinute:(NSInteger)endMinute measurementInterval:(NSInteger)measurementInterval notifyFlag:(NSInteger)notifyFlag highHeartMode:(NSInteger)highHeartMode lowHeartMode:(NSInteger)lowHeartMode highHeartValue:(NSInteger)highHeartValue lowHeartValue:(NSInteger)lowHeartValue OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel25IDOHeartRateIntervalModel")
@interface IDOHeartRateIntervalModel : NSObject
/// 脂肪训练心率区间
/// 计算规则:最大心率的50%-69%
/// 单位:次/分钟
/// Fat training heart rate zone
/// Calculation rules: 50%-69% of maximum heart rate
/// Unit: times/minute
@property (nonatomic) NSInteger burnFatThreshold;
/// 心肺训练心率区间
/// 计算规则:最大心率的70%-84%
/// 单位:次/分钟
/// Cardio training heart rate zones
/// Calculation rule: 70%-84% of maximum heart rate
/// Unit: times/minute
@property (nonatomic) NSInteger aerobicThreshold;
/// 峰值训练心率区间
/// 计算规则:最大心率的85%-100%
/// 单位:次/分钟
/// Peak training heart rate zone
/// Calculation rules: 85%-100% of maximum heart rate
/// Unit: times/minute
@property (nonatomic) NSInteger limitThreshold;
/// 心率上限,最大心率提醒
/// 单位:次/分钟
/// Heart rate upper limit, maximum heart rate reminder
/// Unit: times/minute
@property (nonatomic) NSInteger userMaxHr;
/// 热身运动心率区间
/// 计算规则：(200-年龄) * 50
/// 单位:次/分钟
/// Warm-up exercise heart rate zone
/// Calculation rule: (200-age) * 50
/// Unit: times/minute
@property (nonatomic) NSInteger range1;
/// 脂肪燃烧心率区间
/// 计算规则：(200-年龄) * 60
/// 单位:次/分钟
/// Fat burning heart rate zone
/// Calculation rule: (200-age) * 60
/// Unit: times/minute
@property (nonatomic) NSInteger range2;
/// 有氧运动心率区间
/// 计算规则：(200-年龄) * 70
/// 单位:次/分钟
/// Aerobic exercise heart rate zones
/// Calculation rule: (200-age) * 70
/// Unit: times/minute
@property (nonatomic) NSInteger range3;
/// 无氧运动心率区间
/// 计算规则：(200-年龄) * 80
/// 单位:次/分钟
/// Anaerobic exercise heart rate zone
/// Calculation rule: (200-age) * 80
/// Unit: times/minute
@property (nonatomic) NSInteger range4;
/// 极限锻炼心率区间
/// 计算规则：(200-年龄) * 90
/// 单位:次/分钟
/// Extreme exercise heart rate zone
/// Calculation rule: (200-age) * 90
/// Unit: times/minute
@property (nonatomic) NSInteger range5;
/// 心率最小值
/// 单位:次/分钟
/// Minimum heart rate
/// Unit: times/minute
@property (nonatomic) NSInteger minHr;
/// 最大心率提醒
/// 0 关闭,1 开启
/// Maximum heart rate reminder
/// 0 off, 1 on
@property (nonatomic) NSInteger maxHrRemind;
/// 最小心率提醒
/// 0 关闭,1 开启
/// Minimum heart rate reminder
/// 0 off, 1 on
@property (nonatomic) NSInteger minHrRemind;
/// 提醒开始 时
/// Reminder starts hour
@property (nonatomic) NSInteger remindStartHour;
/// 提醒开始 分
/// Reminder starts minutes
@property (nonatomic) NSInteger remindStartMinute;
/// 提醒结束 时
/// Reminder ends hour
@property (nonatomic) NSInteger remindStopHour;
/// 提醒结束 分
/// Reminder ends minutes
@property (nonatomic) NSInteger remindStopMinute;
- (nonnull instancetype)initWithBurnFatThreshold:(NSInteger)burnFatThreshold aerobicThreshold:(NSInteger)aerobicThreshold limitThreshold:(NSInteger)limitThreshold userMaxHr:(NSInteger)userMaxHr range1:(NSInteger)range1 range2:(NSInteger)range2 range3:(NSInteger)range3 range4:(NSInteger)range4 range5:(NSInteger)range5 minHr:(NSInteger)minHr maxHrRemind:(NSInteger)maxHrRemind minHrRemind:(NSInteger)minHrRemind remindStartHour:(NSInteger)remindStartHour remindStartMinute:(NSInteger)remindStartMinute remindStopHour:(NSInteger)remindStopHour remindStopMinute:(NSInteger)remindStopMinute OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Set Heart Rate Mode Event
SWIFT_CLASS("_TtC16protocol_channel21IDOHeartRateModeModel")
@interface IDOHeartRateModeModel : NSObject
/// 0: Turned Off
/// 1: Manual Mode
/// 2: Automatic
/// 3: Continous Monitoring
/// -1:Invalid
@property (nonatomic) NSInteger mode;
/// Whether there is a time range 0: No 1: Yes
@property (nonatomic) NSInteger hasTimeRange;
@property (nonatomic) NSInteger startHour;
@property (nonatomic) NSInteger startMinute;
@property (nonatomic) NSInteger endHour;
@property (nonatomic) NSInteger endMinute;
/// Measurement interval (in minutes)
@property (nonatomic) NSInteger measurementInterval;
- (nonnull instancetype)initWithMode:(NSInteger)mode hasTimeRange:(NSInteger)hasTimeRange startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute endHour:(NSInteger)endHour endMinute:(NSInteger)endMinute measurementInterval:(NSInteger)measurementInterval OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Set Heart Rate Mode Event
SWIFT_CLASS("_TtC16protocol_channel26IDOHeartRateModeParamModel")
@interface IDOHeartRateModeParamModel : NSObject
/// 0: Off
/// 1: Auto(5min)
/// 2: Continuous Monitoring(5sec)
/// 3: Manual Mode
@property (nonatomic) NSInteger mode;
/// Time Range
/// 0: No
/// 1: Yes
@property (nonatomic) NSInteger hasTimeRange;
/// Start Hour (24-hour format, 0-23)
@property (nonatomic) NSInteger startHour;
/// Start Minute (0-59)
@property (nonatomic) NSInteger startMinute;
/// End Hour
@property (nonatomic) NSInteger endHour;
/// End Minute
@property (nonatomic) NSInteger endMinute;
/// Measurement Interval
/// Unit: minute
@property (nonatomic) NSInteger measurementInterval;
- (nonnull instancetype)initWithMode:(NSInteger)mode hasTimeRange:(NSInteger)hasTimeRange startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute endHour:(NSInteger)endHour endMinute:(NSInteger)endMinute measurementInterval:(NSInteger)measurementInterval OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Smart Heart Rate Mode
SWIFT_CLASS("_TtC16protocol_channel26IDOHeartRateModeSmartModel")
@interface IDOHeartRateModeSmartModel : NSObject
/// Switch
/// 0:Off
/// 1:On
@property (nonatomic) NSInteger mode;
/// Notification Type
/// 0: Invalid
/// 1: Allow Notifications
/// 2: Silent Notifications
/// 3: Disable Notifications
@property (nonatomic) NSInteger notifyFlag;
/// 1: Enable Smart High Heart Rate Alert
/// 0: Disable
@property (nonatomic) NSInteger highHeartMode;
/// 1: Enable Smart Low Heart Rate Alert
/// 0: Disable
@property (nonatomic) NSInteger lowHeartMode;
/// Smart High Heart Rate Alert Threshold
@property (nonatomic) NSInteger highHeartValue;
/// Smart Low Heart Rate Alert Threshold
@property (nonatomic) NSInteger lowHeartValue;
/// Start Time of Heart Rate Monitoring (hour)
@property (nonatomic) NSInteger startHour;
/// Start Time of Heart Rate Monitoring (minute)
@property (nonatomic) NSInteger startMinute;
/// End Time of Heart Rate Monitoring (hour)
@property (nonatomic) NSInteger endHour;
/// End Time of Heart Rate Monitoring (minute)
@property (nonatomic) NSInteger endMinute;
- (nonnull instancetype)initWithMode:(NSInteger)mode notifyFlag:(NSInteger)notifyFlag highHeartMode:(NSInteger)highHeartMode lowHeartMode:(NSInteger)lowHeartMode highHeartValue:(NSInteger)highHeartValue lowHeartValue:(NSInteger)lowHeartValue startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute endHour:(NSInteger)endHour endMinute:(NSInteger)endMinute OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Set Smart Heart Rate Mode Event
SWIFT_CLASS("_TtC16protocol_channel31IDOHeartRateModeSmartParamModel")
@interface IDOHeartRateModeSmartParamModel : NSObject
/// Switch
/// 0:Off
/// 1:On
@property (nonatomic) NSInteger mode;
/// Notification Type
/// 0: Invalid
/// 1: Allow Notifications
/// 2: Silent Notifications
/// 3: Disable Notifications
@property (nonatomic) NSInteger notifyFlag;
/// 1: Enable Smart High Heart Rate Alert
/// 0: Disable
@property (nonatomic) NSInteger highHeartMode;
/// 1: Enable Smart Low Heart Rate Alert
/// 0: Disable
@property (nonatomic) NSInteger lowHeartMode;
/// Smart High Heart Rate Alert Threshold
@property (nonatomic) NSInteger highHeartValue;
/// Smart Low Heart Rate Alert Threshold
@property (nonatomic) NSInteger lowHeartValue;
/// Start Time of Heart Rate Monitoring (hour)
@property (nonatomic) NSInteger startHour;
/// Start Time of Heart Rate Monitoring (minute)
@property (nonatomic) NSInteger startMinute;
/// End Time of Heart Rate Monitoring (hour)
@property (nonatomic) NSInteger endHour;
/// End Time of Heart Rate Monitoring (minute)
@property (nonatomic) NSInteger endMinute;
- (nonnull instancetype)initWithMode:(NSInteger)mode notifyFlag:(NSInteger)notifyFlag highHeartMode:(NSInteger)highHeartMode lowHeartMode:(NSInteger)lowHeartMode highHeartValue:(NSInteger)highHeartValue lowHeartValue:(NSInteger)lowHeartValue startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute endHour:(NSInteger)endHour endMinute:(NSInteger)endMinute OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel34IDOHistoricalMenstruationParamItem")
@interface IDOHistoricalMenstruationParamItem : NSObject
@property (nonatomic) NSInteger year;
@property (nonatomic) NSInteger mon;
@property (nonatomic) NSInteger day;
/// Length of menstrual cycle (days)
@property (nonatomic) NSInteger menstrualDay;
@property (nonatomic) NSInteger cycleDay;
/// The interval from the start of the next menstrual period to the ovulation day is usually 14 days when the Function
@property (nonatomic) NSInteger ovulationIntervalDay;
/// The number of days of fertility before the ovulation day is usually 5 when the Function
@property (nonatomic) NSInteger ovulationBeforeDay;
/// The number of days of fertility after the ovulation day is usually 5 when the Function
@property (nonatomic) NSInteger ovulationAfterDay;
- (nonnull instancetype)initWithYear:(NSInteger)year mon:(NSInteger)mon day:(NSInteger)day menstrualDay:(NSInteger)menstrualDay cycleDay:(NSInteger)cycleDay ovulationIntervalDay:(NSInteger)ovulationIntervalDay ovulationBeforeDay:(NSInteger)ovulationBeforeDay ovulationAfterDay:(NSInteger)ovulationAfterDay OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel35IDOHistoricalMenstruationParamModel")
@interface IDOHistoricalMenstruationParamModel : NSObject
/// Average length of menstrual cycle Uint:day
@property (nonatomic) NSInteger avgMenstrualDay;
/// Average length of menstrual cycle Uint:day
@property (nonatomic) NSInteger avgCycleDay;
@property (nonatomic, copy) NSArray<IDOHistoricalMenstruationParamItem *> * _Nonnull items;
- (nonnull instancetype)initWithAvgMenstrualDay:(NSInteger)avgMenstrualDay avgCycleDay:(NSInteger)avgCycleDay items:(NSArray<IDOHistoricalMenstruationParamItem *> * _Nonnull)items OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Get Hot Start Parameters event number
SWIFT_CLASS("_TtC16protocol_channel21IDOHotStartParamModel")
@interface IDOHotStartParamModel : NSObject
/// TCXO offset
@property (nonatomic) NSInteger tcxoOffset;
/// Longitude (multiplied by 10^6)
@property (nonatomic) NSInteger longitude;
/// Latitude (multiplied by 10^6)
@property (nonatomic) NSInteger latitude;
/// Altitude (multiplied by 10)
@property (nonatomic) NSInteger altitude;
- (nonnull instancetype)initWithTcxoOffset:(NSInteger)tcxoOffset longitude:(NSInteger)longitude latitude:(NSInteger)latitude altitude:(NSInteger)altitude OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel19IDOHoursWeatherItem")
@interface IDOHoursWeatherItem : NSObject
@property (nonatomic) NSInteger weatherType;
@property (nonatomic) NSInteger temperature;
@property (nonatomic) NSInteger probability;
- (nonnull instancetype)initWithWeatherType:(NSInteger)weatherType temperature:(NSInteger)temperature probability:(NSInteger)probability OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel11IDOItemItem")
@interface IDOItemItem : NSObject
/// Action type
/// 1: Fast walk
/// 2: Jog
/// 3: Moderate run
/// 4: Fast run
@property (nonatomic) NSInteger type;
/// Target time Unit: seconds
@property (nonatomic) NSInteger time;
/// Low heart rate range
@property (nonatomic) NSInteger heightHeart;
/// High heart rate range
@property (nonatomic) NSInteger lowHeart;
- (nonnull instancetype)initWithType:(NSInteger)type time:(NSInteger)time heightHeart:(NSInteger)heightHeart lowHeart:(NSInteger)lowHeart OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum IDOLanguageType : NSInteger;

SWIFT_CLASS("_TtC16protocol_channel22IDOLanguageLibraryItem")
@interface IDOLanguageLibraryItem : NSObject
/// Language type
@property (nonatomic) enum IDOLanguageType languageType;
/// Language version number
@property (nonatomic) NSInteger languageVersion;
- (nonnull instancetype)initWithLanguageType:(enum IDOLanguageType)languageType languageVersion:(NSInteger)languageVersion OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel23IDOLanguageLibraryModel")
@interface IDOLanguageLibraryModel : NSObject
/// Currently used language
@property (nonatomic) NSInteger useLang;
/// Default language
@property (nonatomic) NSInteger defaultLang;
/// Number of fixed storage languages
@property (nonatomic) NSInteger fixedLang;
/// Maximum storage languages
@property (nonatomic) NSInteger maxStorageLang;
@property (nonatomic, copy) NSArray<IDOLanguageLibraryItem *> * _Nonnull items;
@property (nonatomic, copy) NSArray<IDOLanguageLibraryItem *> * _Nonnull itemsUser;
- (nonnull instancetype)initWithUseLang:(NSInteger)useLang defaultLang:(NSInteger)defaultLang fixedLang:(NSInteger)fixedLang maxStorageLang:(NSInteger)maxStorageLang items:(NSArray<IDOLanguageLibraryItem *> * _Nonnull)items itemsUser:(NSArray<IDOLanguageLibraryItem *> * _Nonnull)itemsUser OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, IDOLanguageType, open) {
  IDOLanguageTypeInvalid = 0,
  IDOLanguageTypeChinese = 1,
  IDOLanguageTypeEnglish = 2,
  IDOLanguageTypeFrench = 3,
  IDOLanguageTypeGerman = 4,
  IDOLanguageTypeItalian = 5,
  IDOLanguageTypeSpanish = 6,
  IDOLanguageTypeJapanese = 7,
  IDOLanguageTypePolish = 8,
  IDOLanguageTypeCzech = 9,
  IDOLanguageTypeRomanian = 10,
  IDOLanguageTypeLithuanian = 11,
  IDOLanguageTypeDutch = 12,
  IDOLanguageTypeSlovenian = 13,
  IDOLanguageTypeHungarian = 14,
  IDOLanguageTypeRussian = 15,
  IDOLanguageTypeUkrainian = 16,
  IDOLanguageTypeSlovak = 17,
  IDOLanguageTypeDanish = 18,
  IDOLanguageTypeCroatian = 19,
  IDOLanguageTypeIndonesian = 20,
  IDOLanguageTypeKorean = 21,
  IDOLanguageTypeHindi = 22,
  IDOLanguageTypePortuguese = 23,
  IDOLanguageTypeTurkish = 24,
  IDOLanguageTypeThai = 25,
  IDOLanguageTypeVietnamese = 26,
  IDOLanguageTypeBurmese = 27,
  IDOLanguageTypeFilipino = 28,
  IDOLanguageTypeTraditionalChinese = 29,
  IDOLanguageTypeGreek = 30,
  IDOLanguageTypeArabic = 31,
  IDOLanguageTypeSwedish = 32,
  IDOLanguageTypeFinnish = 33,
  IDOLanguageTypePersian = 34,
  IDOLanguageTypeNorwegian = 35,
};


/// Get Real-time Data event number
SWIFT_CLASS("_TtC16protocol_channel16IDOLiveDataModel")
@interface IDOLiveDataModel : NSObject
/// Total steps
@property (nonatomic) NSInteger totalStep;
/// Total calories (in kilocalories)
@property (nonatomic) NSInteger totalCalories;
/// Total distance (in meters)
@property (nonatomic) NSInteger totalDistances;
/// Total active time (in seconds)
@property (nonatomic) NSInteger totalActiveTime;
/// Heart rate data (in beats per minute)
@property (nonatomic) NSInteger heartRate;
- (nonnull instancetype)initWithTotalStep:(NSInteger)totalStep totalCalories:(NSInteger)totalCalories totalDistances:(NSInteger)totalDistances totalActiveTime:(NSInteger)totalActiveTime heartRate:(NSInteger)heartRate OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// 日志类型 （只针对控制台）
typedef SWIFT_ENUM(NSInteger, IDOLogType, open) {
/// 不打印
  IDOLogTypeNone = 0,
/// 详细
  IDOLogTypeDebug = 1,
/// 重要
  IDOLogTypeRelease = 2,
};


/// Set Long Sit Event
SWIFT_CLASS("_TtC16protocol_channel20IDOLongSitParamModel")
@interface IDOLongSitParamModel : NSObject
/// Start Time of Sedentary Reminder (hour)
@property (nonatomic) NSInteger startHour;
/// Start Time of Sedentary Reminder (minute)
@property (nonatomic) NSInteger startMinute;
/// End Time of Sedentary Reminder (hour)
@property (nonatomic) NSInteger endHour;
/// End Time of Sedentary Reminder (minute)
@property (nonatomic) NSInteger endMinute;
/// Interval (in minutes)
/// Value should be greater than 15 minutes
@property (nonatomic) NSInteger interval;
/// Repetitions and Switch
/// bit0: 0 means off, 1 means on
/// bit1-7: 0 means no repetition, 1 means repetition
@property (nonatomic) NSInteger repetitions;
- (nonnull instancetype)initWithStartHour:(NSInteger)startHour startMinute:(NSInteger)startMinute endHour:(NSInteger)endHour endMinute:(NSInteger)endMinute interval:(NSInteger)interval repetitions:(NSInteger)repetitions OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Set Lost Find Event
SWIFT_CLASS("_TtC16protocol_channel21IDOLostFindParamModel")
@interface IDOLostFindParamModel : NSObject
/// Mode
/// 0: No anti-lost
/// 1: Close-range anti-lost
/// 2: Medium-range anti-lost
/// 3: Long-range anti-lost
@property (nonatomic) NSInteger mode;
- (nonnull instancetype)initWithMode:(NSInteger)mode OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Get Set Calorie/Distance/Mid-High Sport Time Goal event number
SWIFT_CLASS("_TtC16protocol_channel21IDOMainSportGoalModel")
@interface IDOMainSportGoalModel : NSObject
/// Activity calorie goal (in kilocalories)
/// Requires firmware to enable function table <code>setCalorieGoal</code>
@property (nonatomic) NSInteger calorie;
/// Distance goal (in meters)
@property (nonatomic) NSInteger distance;
/// Minimum activity calorie value
@property (nonatomic) NSInteger calorieMin;
/// Maximum activity calorie value
@property (nonatomic) NSInteger calorieMax;
/// Goal time(in hour)
@property (nonatomic) NSInteger walkGoalTime;
- (nonnull instancetype)initWithCalorie:(NSInteger)calorie distance:(NSInteger)distance calorieMin:(NSInteger)calorieMin calorieMax:(NSInteger)calorieMax midHighTimeGoal:(NSInteger)midHighTimeGoal walkGoalTime:(NSInteger)walkGoalTime timeGoalType:(NSInteger)timeGoalType OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel17IDOMainUISortItem")
@interface IDOMainUISortItem : NSObject
/// Coordinate x-axis, starting from 1
@property (nonatomic) NSInteger locationX;
/// Coordinate y-axis, starting from 1
/// One y-axis represents a horizontal grid
@property (nonatomic) NSInteger locationY;
/// 0: Invalid 1: Large icon 2: Small icon
@property (nonatomic) NSInteger sizeType;
/// Types of controls
/// \code
/// 0: Invalid
/// 1: Week/Date
/// 2: Steps
/// 3: Distance
/// 4: Calories
/// 5: Heart Rate
/// 6: Battery
///
/// \endcode
@property (nonatomic) NSInteger widgetsType;
/// Editable icon types supported by the firmware
/// \code
/// 0: Invalid
/// 1: Large icon
/// 2: Small icon
/// 3: Large icon + Small icon
///
/// \endcode
@property (nonatomic) NSInteger supportSizeType;
- (nonnull instancetype)initWithLocationX:(NSInteger)locationX locationY:(NSInteger)locationY sizeType:(NSInteger)sizeType widgetsType:(NSInteger)widgetsType supportSizeType:(NSInteger)supportSizeType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class IDOMainUISortSupportItem;

SWIFT_CLASS("_TtC16protocol_channel18IDOMainUISortModel")
@interface IDOMainUISortModel : NSObject
/// 0: Success, Non-zero: Failure
@property (nonatomic) NSInteger errCode;
/// Operation
/// 0: Invalid 1: Query 2: Set
@property (nonatomic) NSInteger operate;
/// Number of currently displayed list in firmware
@property (nonatomic) NSInteger allNum;
@property (nonatomic, copy) NSArray<IDOMainUISortSupportItem *> * _Nonnull supportItems;
@property (nonatomic, copy) NSArray<IDOMainUISortItem *> * _Nonnull items;
@property (nonatomic) NSInteger locationX;
@property (nonatomic) NSInteger locationY;
@property (nonatomic) NSInteger sizeType;
@property (nonatomic) NSInteger widgetsType;
- (nonnull instancetype)initWithErrCode:(NSInteger)errCode operate:(NSInteger)operate allNum:(NSInteger)allNum supportItems:(NSArray<IDOMainUISortSupportItem *> * _Nonnull)supportItems items:(NSArray<IDOMainUISortItem *> * _Nonnull)items locationX:(NSInteger)locationX locationY:(NSInteger)locationY sizeType:(NSInteger)sizeType widgetsType:(NSInteger)widgetsType OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel23IDOMainUISortParamModel")
@interface IDOMainUISortParamModel : NSObject
/// Operation
/// 0: Invalid 1: Query 2: Set
@property (nonatomic) NSInteger operate;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull items;
/// Coordinate x-axis, starting from 1
@property (nonatomic) NSInteger locationX;
/// Coordinate y-axis, starting from 1
/// One y-axis represents a horizontal grid
@property (nonatomic) NSInteger locationY;
/// 0: Invalid 1: Large icon 2: Small icon
@property (nonatomic) NSInteger sizeType;
/// Types of controls
/// 0: Invalid
/// 1: Week/Date
/// 2: Steps
/// 3: Distance
/// 4: Calories
/// 5: Heart Rate
/// 6: Battery
@property (nonatomic) NSInteger widgetsType;
- (nonnull instancetype)initWithOperate:(NSInteger)operate items:(NSArray<NSNumber *> * _Nonnull)items locationX:(NSInteger)locationX locationY:(NSInteger)locationY sizeType:(NSInteger)sizeType widgetsType:(NSInteger)widgetsType OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel24IDOMainUISortSupportItem")
@interface IDOMainUISortSupportItem : NSObject
/// Types of controls
/// \code
/// 0: Invalid
/// 1: Week/Date
/// 2: Steps
/// 3: Distance
/// 4: Calories
/// 5: Heart Rate
/// 6: Battery
///
/// \endcode
@property (nonatomic) NSInteger widgetsType;
/// Editable icon types supported by the firmware
/// \code
/// 0: Invalid
/// 1: Large icon
/// 2: Small icon
/// 3: Large icon + Small icon
///
/// \endcode
@property (nonatomic) NSInteger supportSizeType;
- (nonnull instancetype)initWithSupportSizeType:(NSInteger)supportSizeType widgetsType:(NSInteger)widgetsType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel20IDOMenstruationModel")
@interface IDOMenstruationModel : NSObject
/// 经期开关 1开 0关闭
/// Menstrual period switch 1 on 0 off
@property (nonatomic) NSInteger onOff;
/// 经期长度
/// menstrual period length
@property (nonatomic) NSInteger menstrualLength;
/// 经期周期
/// menstrual cycle
@property (nonatomic) NSInteger menstrualCycle;
/// 最近一次经期开始时间 年
/// Last menstrual period started year
@property (nonatomic) NSInteger lastMenstrualYear;
/// 最近一次经期开始时间 月
/// Last menstrual period start time month
@property (nonatomic) NSInteger lastMenstrualMonth;
/// 最近一次经期开始时间 日
/// Last menstrual period start date
@property (nonatomic) NSInteger lastMenstrualDay;
/// 从下一个经期开始前到排卵日的间隔,一般为14天
/// The interval from the start of the next menstrual period to the day of ovulation is generally 14 days
@property (nonatomic) NSInteger ovulationIntervalDay;
/// 排卵日之前易孕期的天数,一般为5
/// The number of fertile days before ovulation, usually 5
@property (nonatomic) NSInteger ovulationBeforeDay;
/// 排卵日之后易孕期的天数,一般为5
/// The number of fertile days after ovulation, usually 5
@property (nonatomic) NSInteger ovulationAfterDay;
/// 通知类型
/// 0：无效
/// 1：允许通知
/// 2：静默通知
/// 3：关闭通知
/// 需要固件开启功能表支持 getMenstrualAddNotifyFlagV3
/// Notification type
/// 0: invalid
/// 1: Allow notifications
/// 2: Silent notification
/// 3: Close notification
/// Requires firmware to enable menu support getMenstrualAddNotifyFlagV3
@property (nonatomic) NSInteger notifyFlag;
/// 经期提醒开关开关
/// 1:开
/// 0:关闭
/// 需要固件开启功能表支持 getSupportSetMenstrualReminderOnOff
/// 该开关无效时，功能开启就默认提醒。
/// Menstrual reminder switch
/// 1:On
/// 0: Close
/// Requires firmware to enable menu support getSupportSetMenstrualReminderOnOff
/// When this switch is invalid, the default reminder will be when the function is turned on.
@property (nonatomic) NSInteger menstrualReminderOnOff;
- (nonnull instancetype)initOnOff:(NSInteger)onOff menstrualLength:(NSInteger)menstrualLength menstrualCycle:(NSInteger)menstrualCycle lastMenstrualYear:(NSInteger)lastMenstrualYear lastMenstrualMonth:(NSInteger)lastMenstrualMonth lastMenstrualDay:(NSInteger)lastMenstrualDay ovulationIntervalDay:(NSInteger)ovulationIntervalDay ovulationBeforeDay:(NSInteger)ovulationBeforeDay ovulationAfterDay:(NSInteger)ovulationAfterDay notifyFlag:(NSInteger)notifyFlag menstrualReminderOnOff:(NSInteger)menstrualReminderOnOff OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel31IDOMenstruationRemindParamModel")
@interface IDOMenstruationRemindParamModel : NSObject
/// Number of days before start day to send reminder
@property (nonatomic) NSInteger startDay;
/// Number of days before ovulation day to send reminder
@property (nonatomic) NSInteger ovulationDay;
/// Reminder time, hour
@property (nonatomic) NSInteger hour;
/// Reminder time, minute
@property (nonatomic) NSInteger minute;
/// Number of days before the start of the fertile period to send reminder
@property (nonatomic) NSInteger pregnancyDayBeforeRemind;
/// Number of days before the end of the fertile period to send reminder
@property (nonatomic) NSInteger pregnancyDayEndRemind;
/// Number of days before the end of the menstrual period to send reminder
@property (nonatomic) NSInteger menstrualDayEndRemind;
- (nonnull instancetype)initWithStartDay:(NSInteger)startDay ovulationDay:(NSInteger)ovulationDay hour:(NSInteger)hour minute:(NSInteger)minute pregnancyDayBeforeRemind:(NSInteger)pregnancyDayBeforeRemind pregnancyDayEndRemind:(NSInteger)pregnancyDayEndRemind menstrualDayEndRemind:(NSInteger)menstrualDayEndRemind OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel11IDOMenuItem")
@interface IDOMenuItem : NSObject
@property (nonatomic) NSInteger index;
@property (nonatomic) NSInteger value;
- (nonnull instancetype)initWithIndex:(NSInteger)index value:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel16IDOMenuListModel")
@interface IDOMenuListModel : NSObject
@property (nonatomic) NSInteger currentShowNum;
@property (nonatomic, copy) NSArray<IDOMenuItem *> * _Nonnull items;
@property (nonatomic) NSInteger maxNum;
@property (nonatomic) NSInteger maxShowNum;
@property (nonatomic) NSInteger minShowNum;
- (nonnull instancetype)initWithCurrentShowNum:(NSInteger)currentShowNum items:(NSArray<IDOMenuItem *> * _Nonnull)items maxNum:(NSInteger)maxNum maxShowNum:(NSInteger)maxShowNum minShowNum:(NSInteger)minShowNum OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Get non-deletable menu list in firmware event number
SWIFT_CLASS("_TtC16protocol_channel21IDOMenuListParamModel")
@interface IDOMenuListParamModel : NSObject
/// List of applications that cannot be deleted
/// \code
/// 0 invalid
/// 1 step
/// 2 Heart rate
/// 3 Sleep
/// 4 Take Pictures
/// 5 Alarm Clock
/// 6 Music
/// 7 stopwatch
/// 8 Timer
/// 9 Exercise mode
/// 10 Weather
/// 11 Breathing Exercises
/// 12 Finding your Phone
/// 13 pressure
/// 14 Data three rings
/// 15 time interface
/// 16 Last activity
/// 17 Health Data
/// 18 blood oxygen
/// 19 Menu Settings
/// 20 (20)aleax Voices are displayed in sequence
/// 21 X screen (New on gt01pro-X)
/// 22 calories (added by Doro Watch)
/// 23 distance (added by Doro Watch)
/// 24 One-touch measurement (Added in IDW05)
/// 25 renpho health(Added in IDW12)
/// 26 Compass (new on mp01)
/// 27 Barometric altimeter (new on mp01)
///
/// \endcode
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull items;
- (nonnull instancetype)initWithItems:(NSArray<NSNumber *> * _Nonnull)items OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// 消息图标
SWIFT_PROTOCOL("_TtP16protocol_channel23IDOMessageIconInterface_")
@protocol IDOMessageIconInterface
/// 是否更新中
@property (nonatomic, readonly) BOOL updating;
/// 获取icon图片存放目录地
@property (nonatomic, readonly, copy) NSString * _Nonnull iconDirPath;
/// ios 配置
/// countryCode：国家编码
/// baseUrlPath：base url 缓存服务器地址
/// appKey：后台请求分配 appKey
/// language：语言单位
- (void)iOSConfigWithCountryCode:(NSString * _Nonnull)countryCode baseUrlPath:(NSString * _Nonnull)baseUrlPath appKey:(NSString * _Nonnull)appKey language:(NSInteger)language;
/// ios 需要执行获取默认的APP包名列表信息，因为event_type是固件分配的 force 强制更新应用名称
- (void)firstGetAppInfoWithForce:(BOOL)force completion:(void (^ _Nonnull)(NSArray<IDOAppIconItemModel *> * _Nonnull))completion;
/// 设备支持默认app信息集合
/// ios 只有默认的包名
/// android 会包含默认的event_type 如果已经安装的应用则包含图标地址
- (void)getDefaultAppInfoWithCompletion:(void (^ _Nonnull)(NSArray<IDOAppIconItemModel *> * _Nonnull))completion;
/// 获取缓存的app信息数据
/// 如果有动态更新app图标则会缓存数据，获取数据显示到开关控制列表
- (void)getCacheAppInfoWithCompletion:(void (^ _Nonnull)(IDOAppIconInfoModel * _Nonnull))completion;
/// 重置APP图标信息（删除本地沙盒缓存的图片）
/// macAddress 需要清除数据的MAC地址
/// deleteIcon 是否删除icon 图片文件，默认删除
- (void)resetIconInfoDataWithMacAddress:(NSString * _Nonnull)macAddress deleteIcon:(BOOL)deleteIcon completion:(void (^ _Nonnull)(BOOL))completion;
@end


/// Get MTU Information event number
SWIFT_CLASS("_TtC16protocol_channel15IDOMtuInfoModel")
@interface IDOMtuInfoModel : NSObject
/// 0: Data is valid
/// 1: Data is invalid, wait a while and try again. In case of invalid data, MTU is 20.
@property (nonatomic) NSInteger status;
/// MTU for app receiving data
@property (nonatomic) NSInteger rxMtu;
/// MTU for app sending data
@property (nonatomic) NSInteger txMtu;
/// Physical layer speed
/// 0: Invalid
/// 1000: 1M
/// 2000: 2M
/// 512: 512K
@property (nonatomic) NSInteger phySpeed;
/// DLE length
/// 0: Not supported
@property (nonatomic) NSInteger dleLength;
- (nonnull instancetype)initWithStatus:(NSInteger)status rxMtu:(NSInteger)rxMtu txMtu:(NSInteger)txMtu phySpeed:(NSInteger)phySpeed dleLength:(NSInteger)dleLength OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel25IDOMusicControlParamModel")
@interface IDOMusicControlParamModel : NSObject
/// Status: 0: Invalid 1: Play 2: Pause 3: Stop
@property (nonatomic) NSInteger status;
/// Current play time Unit:second
@property (nonatomic) NSInteger curTimeSecond;
/// Total play time Unit:second
@property (nonatomic) NSInteger totalTimeSecond;
/// Music name (maximum 63 bytes)
@property (nonatomic, copy) NSString * _Nonnull musicName;
/// Singer name (maximum 63 bytes)
/// This value is not applicable if v3MusicControl02AddSingerName is not enabled on the firmware
@property (nonatomic, copy) NSString * _Nonnull singerName;
- (nonnull instancetype)initWithStatus:(NSInteger)status curTimeSecond:(NSInteger)curTimeSecond totalTimeSecond:(NSInteger)totalTimeSecond musicName:(NSString * _Nonnull)musicName singerName:(NSString * _Nonnull)singerName OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel18IDOMusicFolderItem")
@interface IDOMusicFolderItem : NSObject
/// Playlist (folder) id, ranging from 1 to 10
@property (nonatomic) NSInteger folderID;
/// Number of songs in the playlist, maximum of 100
@property (nonatomic) NSInteger musicNum;
/// Playlist (folder) name, maximum of 19 bytes
@property (nonatomic, copy) NSString * _Nonnull folderName;
/// Corresponding song ids in the playlist, arranged in order of addition
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull musicIndex;
- (nonnull instancetype)initWithFolderID:(NSInteger)folderID musicNum:(NSInteger)musicNum folderName:(NSString * _Nonnull)folderName musicIndex:(NSArray<NSNumber *> * _Nonnull)musicIndex OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class IDOMusicItem;

SWIFT_CLASS("_TtC16protocol_channel17IDOMusicInfoModel")
@interface IDOMusicInfoModel : NSObject
/// Firmware SDK card information<br />Total space<br />Uint:Byte
@property (nonatomic) NSInteger allMemory;
@property (nonatomic, copy) NSArray<IDOMusicFolderItem *> * _Nonnull folderItems;
@property (nonatomic, copy) NSArray<IDOMusicItem *> * _Nonnull musicItems;
/// Firmware SDK card information<br />Current used space in bytes<br />Uint:Byte
@property (nonatomic) NSInteger usedMemory;
/// Firmware SDK card information<br />Available space<br />Uint:Byte
@property (nonatomic) NSInteger usefulMemory;
- (nonnull instancetype)initWithAllMemory:(NSInteger)allMemory folderItems:(NSArray<IDOMusicFolderItem *> * _Nonnull)folderItems musicItems:(NSArray<IDOMusicItem *> * _Nonnull)musicItems usedMemory:(NSInteger)usedMemory usefulMemory:(NSInteger)usefulMemory OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel12IDOMusicItem")
@interface IDOMusicItem : NSObject
/// Music id, starting from 1
@property (nonatomic) NSInteger musicID;
/// Space occupied by the music
@property (nonatomic) NSInteger musicMemory;
/// Music name, maximum of 44 bytes
@property (nonatomic, copy) NSString * _Nonnull musicName;
/// Singer name, maximum of 29 bytes
@property (nonatomic, copy) NSString * _Nonnull singerName;
- (nonnull instancetype)initWithMusicID:(NSInteger)musicID musicMemory:(NSInteger)musicMemory musicName:(NSString * _Nonnull)musicName singerName:(NSString * _Nonnull)singerName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Set Music On/Off Event
SWIFT_CLASS("_TtC16protocol_channel23IDOMusicOnOffParamModel")
@interface IDOMusicOnOffParamModel : NSObject
/// 1: On
/// 0: Off
@property (nonatomic) NSInteger onOff;
/// Show song information switch
/// 1: On
/// 0: Off
/// Requires firmware support for menu:  <code>supportV2SetShowMusicInfoSwitch</code>
@property (nonatomic) NSInteger showInfoStatus;
- (nonnull instancetype)initOnOff:(NSInteger)onOff showInfoStatus:(NSInteger)showInfoStatus OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel25IDOMusicOpearteParamModel")
@interface IDOMusicOpearteParamModel : NSObject
/// Music operation
/// 0: Invalid operation
/// 1: Delete music
/// 2: Add music
@property (nonatomic) NSInteger musicOperate;
/// Folder (playlist) operation
/// 0: Invalid operation
/// 1: Delete folder
/// 2: Add folder
/// 3: Modify playlist
/// 4: Import playlist
/// 5: Delete music
@property (nonatomic) NSInteger folderOperate;
/// Folder (playlist) details
@property (nonatomic, strong) IDOMusicFolderItem * _Nonnull folderItem;
/// Music details
@property (nonatomic, strong) IDOMusicItem * _Nonnull musicItem;
- (nonnull instancetype)initWithMusicOperate:(NSInteger)musicOperate folderOperate:(NSInteger)folderOperate folderItem:(IDOMusicFolderItem * _Nonnull)folderItem musicItem:(IDOMusicItem * _Nonnull)musicItem OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Operation for songs or folders event
SWIFT_CLASS("_TtC16protocol_channel20IDOMusicOperateModel")
@interface IDOMusicOperateModel : NSObject
/// Operation type:
/// 0: Invalid operation
/// 1: Delete music
/// 2: Add music
/// 3: Delete folder
/// 4: Add folder
/// 5: Modify playlist
/// 6: Import playlist
/// 7: Delete music in playlist
@property (nonatomic) NSInteger operateType;
/// Firmware SDK card information
/// Total space
@property (nonatomic) NSInteger version;
/// 0: Successful; non-zero: Failed
@property (nonatomic) NSInteger errCode;
/// Music id returned when adding music successfully
@property (nonatomic) NSInteger musicId;
- (nonnull instancetype)initWithOperateType:(NSInteger)operateType version:(NSInteger)version errCode:(NSInteger)errCode musicId:(NSInteger)musicId OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel23IDONotDisturbParamModel")
@interface IDONotDisturbParamModel : NSObject
/// Switch 1 is on, 0 is off
@property (nonatomic) NSInteger switchFlag;
/// Start time
@property (nonatomic) NSInteger startHour;
/// Start time minutes
@property (nonatomic) NSInteger startMinute;
/// End time
@property (nonatomic) NSInteger endHour;
/// End time minutes
@property (nonatomic) NSInteger endMinute;
/// Whether there is a time range
/// 0 invalid
/// 1 means no time range
/// 2 means there is a time range
/// The menu disturbHaveRangRepeat is enabled when enabled
@property (nonatomic) NSInteger haveTimeRange;
/// Daytime Do Not Disturb switch 1 is on, 0 is off
@property (nonatomic) NSInteger noontimeRESTOnOff;
/// Start time
@property (nonatomic) NSInteger noontimeRESTStartHour;
/// Start time minutes
@property (nonatomic) NSInteger noontimeRESTStartMinute;
/// End time
@property (nonatomic) NSInteger noontimeRESTEndHour;
/// End time minutes
@property (nonatomic) NSInteger noontimeRESTEndMinute;
/// Do not disturb me all day
/// 1 open
/// 0 close
/// The menu setOnlyNoDisturbAllDayOnOff is enabled when enabled
@property (nonatomic) NSInteger allDayOnOff;
/// Smart Do Not Disturb Switch
/// 1 open
/// 0 close
/// The menu setOnlyNoDisturbSmartOnOff is enabled when enabled
@property (nonatomic) NSInteger intelligentOnOff;
- (nonnull instancetype)initWithSwitchFlag:(NSInteger)switchFlag startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute endHour:(NSInteger)endHour endMinute:(NSInteger)endMinute haveTimeRange:(NSInteger)haveTimeRange noontimeRESTOnOff:(NSInteger)noontimeRESTOnOff noontimeRESTStartHour:(NSInteger)noontimeRESTStartHour noontimeRESTStartMinute:(NSInteger)noontimeRESTStartMinute noontimeRESTEndHour:(NSInteger)noontimeRESTEndHour noontimeRESTEndMinute:(NSInteger)noontimeRESTEndMinute allDayOnOff:(NSInteger)allDayOnOff intelligentOnOff:(NSInteger)intelligentOnOff OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Get Do Not Disturb mode status event number
SWIFT_CLASS("_TtC16protocol_channel24IDONotDisturbStatusModel")
@interface IDONotDisturbStatusModel : NSObject
/// Switch status
/// 1: On
/// 0: Off
/// -1:Not Support
@property (nonatomic) NSInteger switchFlag;
/// Start hour
@property (nonatomic) NSInteger startHour;
/// Start minute
@property (nonatomic) NSInteger startMinute;
/// End hour
@property (nonatomic) NSInteger endHour;
/// End minute
@property (nonatomic) NSInteger endMinute;
/// Whether there is a time range
/// 0: Invalid
/// 1: No time range
/// 2: Has time range
@property (nonatomic) NSInteger haveTimeRange;
/// Repeat
/// bit0: Invalid
/// (bit1 - bit7): Monday to Sunday
@property (nonatomic) NSInteger weekRepeat;
/// Noon rest switch, headset reminder switch
/// 1: On
/// 0: Off
/// -1:Not Support
@property (nonatomic) NSInteger noontimeRestOnOff;
/// Reminder start hour
@property (nonatomic) NSInteger noontimeRestStartHour;
/// Reminder start minute
@property (nonatomic) NSInteger noontimeRestStartMinute;
/// Reminder end hour
@property (nonatomic) NSInteger noontimeRestEndHour;
/// Reminder end minute
@property (nonatomic) NSInteger noontimeRestEndMinute;
/// All day Do Not Disturb switch
/// 1: On
/// 0: Off
/// -1:Not Support
@property (nonatomic) NSInteger allDayOnOff;
/// Intelligent Do Not Disturb switch
/// 1: On
/// 0: Off
/// -1:Not Support
@property (nonatomic) NSInteger intelligentOnOff;
- (nonnull instancetype)initWithSwitchFlag:(NSInteger)switchFlag startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute endHour:(NSInteger)endHour endMinute:(NSInteger)endMinute haveTimeRange:(NSInteger)haveTimeRange weekRepeat:(NSInteger)weekRepeat noontimeRestOnOff:(NSInteger)noontimeRestOnOff noontimeRestStartHour:(NSInteger)noontimeRestStartHour noontimeRestStartMinute:(NSInteger)noontimeRestStartMinute noontimeRestEndHour:(NSInteger)noontimeRestEndHour noontimeRestEndMinute:(NSInteger)noontimeRestEndMinute allDayOnOff:(NSInteger)allDayOnOff intelligentOnOff:(NSInteger)intelligentOnOff OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, IDONoticeCallSwitchState, open) {
  IDONoticeCallSwitchStateInvalid = -1,
  IDONoticeCallSwitchStateOff = 0,
  IDONoticeCallSwitchStateOn = 1,
};


SWIFT_CLASS("_TtC16protocol_channel25IDONoticeMesaageParamItem")
@interface IDONoticeMesaageParamItem : NSObject
/// Language type
@property (nonatomic) NSInteger language;
/// App name corresponding to the country (maximum 49 bytes)
@property (nonatomic, copy) NSString * _Nonnull name;
- (nonnull instancetype)initWithLanguage:(NSInteger)language name:(NSString * _Nonnull)name OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel26IDONoticeMesaageParamModel")
@interface IDONoticeMesaageParamModel : NSObject
/// System 0: Invalid, 1: Android, 2: iOS
@property (nonatomic) NSInteger osPlatform;
/// Current mode 0: Invalid, 1: Message reminder
@property (nonatomic) NSInteger evtType;
/// Enumeration type of message Max value: 20000
@property (nonatomic) NSInteger notifyType;
/// Message ID Valid only if evt_type is message reminder and msg_ID is not 0
@property (nonatomic) NSInteger msgID;
/// Number of country and language details
@property (nonatomic) NSInteger appItemsLen;
/// Contact name (maximum 63 bytes)
@property (nonatomic, copy) NSString * _Nonnull contact;
/// Phone number (maximum 31 bytes)
@property (nonatomic, copy) NSString * _Nonnull phoneNumber;
/// Message content (maximum 249 bytes)
@property (nonatomic, copy) NSString * _Nonnull msgData;
@property (nonatomic, copy) NSArray<IDONoticeMesaageParamItem *> * _Nonnull items;
- (nonnull instancetype)initWithOsPlatform:(NSInteger)osPlatform evtType:(NSInteger)evtType notifyType:(NSInteger)notifyType msgID:(NSInteger)msgID appItemsLen:(NSInteger)appItemsLen contact:(NSString * _Nonnull)contact phoneNumber:(NSString * _Nonnull)phoneNumber msgData:(NSString * _Nonnull)msgData items:(NSArray<IDONoticeMesaageParamItem *> * _Nonnull)items OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel26IDONoticeMessageParamModel")
@interface IDONoticeMessageParamModel : NSObject
/// Message application type
@property (nonatomic) NSInteger evtType;
/// Message ID
/// If evt_type is message reminder, mesg_ID is valid
@property (nonatomic) NSInteger msgID;
/// Support answering: 1
/// Do not support answering: 0
@property (nonatomic) BOOL supportAnswering;
/// Support mute: 1
/// Do not support mute: 0
@property (nonatomic) BOOL supportMute;
/// Support hang up: 1
/// Do not support hang up: 0
@property (nonatomic) BOOL supportHangUp;
/// Mesaage Data
@property (nonatomic, copy) NSString * _Nonnull msgData;
/// Contact name (maximum 63 bytes)
@property (nonatomic, copy) NSString * _Nonnull contact;
/// Phone number (maximum 31 bytes)
@property (nonatomic, copy) NSString * _Nonnull phoneNumber;
/// Message content (maximum 249 bytes)
@property (nonatomic, copy) NSString * _Nonnull dataText;
- (nonnull instancetype)initWithEvtType:(NSInteger)evtType msgID:(NSInteger)msgID supportAnswering:(BOOL)supportAnswering supportMute:(BOOL)supportMute supportHangUp:(BOOL)supportHangUp msgData:(NSString * _Nonnull)msgData contact:(NSString * _Nonnull)contact phoneNumber:(NSString * _Nonnull)phoneNumber dataText:(NSString * _Nonnull)dataText OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel25IDONoticeMessageStateItem")
@interface IDONoticeMessageStateItem : NSObject
/// Event type
@property (nonatomic) NSInteger evtType;
/// Notification status
/// 1: Allow notifications
/// 2: Silent notifications
/// 3: Close notifications
@property (nonatomic) NSInteger notifyState;
/// Applies when replying, set this parameter to 0
/// 0: Invalid
/// 1: Download corresponding image
/// 2: No corresponding image
@property (nonatomic) NSInteger picFlag;
- (nonnull instancetype)initWithEvtType:(NSInteger)evtType notifyState:(NSInteger)notifyState picFlag:(NSInteger)picFlag OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel26IDONoticeMessageStateModel")
@interface IDONoticeMessageStateModel : NSObject
/// Error code: 0 for success, non-zero for failure
@property (nonatomic) NSInteger errCode;
/// Operation
/// 1: Add
/// 2: Modify
/// 3: Get and Query
@property (nonatomic) NSInteger operat;
/// Valid for querying
/// Reply with overall notification switch status
/// 1: Enable all notifications,
/// 0: Disable all notifications
/// -1:Invalid
@property (nonatomic) NSInteger allOnOff;
/// Message details content, valid for querying
@property (nonatomic, copy) NSArray<IDONoticeMessageStateItem *> * _Nullable items;
- (nonnull instancetype)initWithErrCode:(NSInteger)errCode operat:(NSInteger)operat allOnOff:(NSInteger)allOnOff items:(NSArray<IDONoticeMessageStateItem *> * _Nonnull)items OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel31IDONoticeMessageStateParamModel")
@interface IDONoticeMessageStateParamModel : NSObject
/// Operation 1: Add  2: Modify 3: Get and Query
@property (nonatomic) NSInteger operat;
/// Add and modify only
/// Overall notification switch
/// 1: Enable all notifications
/// 0: Disable all notifications
@property (nonatomic) NSInteger allOnOff;
/// Total number of packets sent
/// For sending more than 100 packets in multiple parts
/// all_send_num = now_send_index for completion of sending
@property (nonatomic) NSInteger allSendNum;
/// Current sequence of sending
@property (nonatomic) NSInteger nowSendIndex;
/// Message details
/// Collection of evt_type, notify_state, and pic_flag
@property (nonatomic, copy) NSArray<IDONoticeMessageStateItem *> * _Nonnull items;
- (nonnull instancetype)initWithOperat:(NSInteger)operat allOnOff:(NSInteger)allOnOff allSendNum:(NSInteger)allSendNum nowSendIndex:(NSInteger)nowSendIndex items:(NSArray<IDONoticeMessageStateItem *> * _Nonnull)items OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, IDONoticeMsgAllSwitchState, open) {
  IDONoticeMsgAllSwitchStateInvalid = -1,
  IDONoticeMsgAllSwitchStateOff = 0,
  IDONoticeMsgAllSwitchStateOn = 1,
};

typedef SWIFT_ENUM(NSInteger, IDONoticeNotifySwitchState, open) {
/// Invalid(Not Support)
  IDONoticeNotifySwitchStateInvalid = -1,
/// BLE switch off(Reserved,invalid function)
  IDONoticeNotifySwitchStateBleOff = 0,
/// BLE switch on(Initiate pairing for IOS only)
  IDONoticeNotifySwitchStateBleOn = 1,
/// Setting sub-switch
  IDONoticeNotifySwitchStateSettingSubSwitch = 2,
/// BT only (switch)
  IDONoticeNotifySwitchStateBtOnlySwitch = 3,
/// BLE and BT on (switch)
  IDONoticeNotifySwitchStateBleAndBtOn = 4,
};


/// Set Notification Center Event
SWIFT_CLASS("_TtC16protocol_channel26IDONotificationCenterModel")
@interface IDONotificationCenterModel : NSObject
/// Notification reminder switch
@property (nonatomic) NSInteger notifySwitch;
/// Status
/// 0: Unknown timeout
/// 1: Success
/// 2: Failed (canceled)
/// 3: Firmware pairing timeout
@property (nonatomic) NSInteger statusCode;
/// 0: Success
/// Non-zero: Failure
@property (nonatomic) NSInteger errCode;
- (nonnull instancetype)initWithNotifySwitch:(NSInteger)notifySwitch statusCode:(NSInteger)statusCode errCode:(NSInteger)errCode OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Notification app status setting event
SWIFT_CLASS("_TtC16protocol_channel31IDONotificationStatusParamModel")
@interface IDONotificationStatusParamModel : NSObject
/// Notification type:
/// 1: Allow notification
/// 2: Silent notification
/// 3: Disable notification
@property (nonatomic) NSInteger notifyFlag;
- (nonnull instancetype)initWithNotifyFlag:(NSInteger)notifyFlag OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// OTA类型
typedef SWIFT_ENUM(NSInteger, IDOOtaType, open) {
/// 无升级
  IDOOtaTypeNone = 0,
/// 泰凌微设备OTA
  IDOOtaTypeTelink = 1,
/// nordic设备OTA
  IDOOtaTypeNordic = 2,
};


SWIFT_CLASS("_TtC16protocol_channel14IDOReceiveData")
@interface IDOReceiveData : NSObject
/// 蓝牙字节数据
@property (nonatomic, readonly, copy) NSData * _Nullable data;
/// uuid
@property (nonatomic, readonly, copy) NSString * _Nullable uuid;
/// mac address
@property (nonatomic, readonly, copy) NSString * _Nullable macAddress;
/// spp
@property (nonatomic, readonly) BOOL spp;
/// 0 爱都, 1 恒玄, 2 VC
@property (nonatomic, readonly) NSInteger platform;
- (nonnull instancetype)initWithData:(NSData * _Nullable)data uuid:(NSString * _Nullable)uuid macAddress:(NSString * _Nullable)macAddress spp:(BOOL)spp platform:(NSInteger)platform OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel20IDORunPlanParamModel")
@interface IDORunPlanParamModel : NSObject
/// Protocol library version number
@property (nonatomic) NSInteger verison;
/// Operation
/// 1: Start plan
/// 2: Plan data sent
/// 3: End plan
/// 4: Query running plan
@property (nonatomic) NSInteger operate;
/// Plan type
/// 1: 3km running plan
/// 2: 5km running plan
/// 3: 10km running plan
/// 4: Half marathon training (Phase 2)
/// 5: Marathon training (Phase 2)
@property (nonatomic) NSInteger type;
@property (nonatomic) NSInteger year;
@property (nonatomic) NSInteger month;
@property (nonatomic) NSInteger day;
@property (nonatomic) NSInteger hour;
@property (nonatomic) NSInteger min;
@property (nonatomic) NSInteger sec;
/// Number of plan days
/// Applicable when operate is 2
@property (nonatomic) NSInteger dayNum;
@property (nonatomic, copy) NSArray<IDOGpsInfoModelItem *> * _Nonnull items;
- (nonnull instancetype)initWithVerison:(NSInteger)verison operate:(NSInteger)operate type:(NSInteger)type year:(NSInteger)year month:(NSInteger)month day:(NSInteger)day hour:(NSInteger)hour min:(NSInteger)min sec:(NSInteger)sec dayNum:(NSInteger)dayNum items:(NSArray<IDOGpsInfoModelItem *> * _Nonnull)items OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol IDOSyncDataInterface;
@protocol IDOToolsInterface;
@class IDOSdkInfo;

/// SDK接口
SWIFT_PROTOCOL("_TtP16protocol_channel15IDOSdkInterface_")
@protocol IDOSdkInterface
/// 设备信息
@property (nonatomic, readonly, strong) id <IDODeviceInterface> _Nonnull device;
/// 功能表
@property (nonatomic, readonly, strong) id <IDOFuncTableInterface> _Nonnull funcTable;
/// 指令
@property (nonatomic, readonly, strong) id <IDOCmdInterface> _Nonnull cmd;
/// 桥接
@property (nonatomic, readonly, strong) id <IDOBridgeInterface> _Nonnull bridge;
/// 蓝牙
@property (nonatomic, readonly, strong) id <IDOBleInterface> _Nonnull ble;
/// Alexa
@property (nonatomic, readonly, strong) id <IDOAlexaInterface> _Nonnull alexa;
/// 文件传输
@property (nonatomic, readonly, strong) id <IDOFileTransferInterface> _Nonnull transfer;
/// 消息图标
@property (nonatomic, readonly, strong) id <IDOMessageIconInterface> _Nonnull messageIcon;
/// 数据同步
@property (nonatomic, readonly, strong) id <IDOSyncDataInterface> _Nonnull syncData;
/// 数据交换
@property (nonatomic, readonly, strong) id <IDODataExchangeOCInterface> _Nonnull dataExchange;
/// 设备日志
@property (nonatomic, readonly, strong) id <IDODeviceLogInterface> _Nonnull deviceLog;
/// 常用工具、缓存
@property (nonatomic, readonly, strong) id <IDOToolsInterface> _Nonnull tool;
/// sdk info
@property (nonatomic, readonly, strong) IDOSdkInfo * _Nonnull info;
@end


/// SDK入口类
SWIFT_CLASS("_TtC16protocol_channel6IDOSDK")
@interface IDOSDK : NSObject <IDOSdkInterface>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) IDOSDK * _Nonnull shared;)
+ (IDOSDK * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@property (nonatomic, readonly, strong) id <IDODeviceInterface> _Nonnull device;
@property (nonatomic, readonly, strong) id <IDOFuncTableInterface> _Nonnull funcTable;
@property (nonatomic, readonly, strong) id <IDOCmdInterface> _Nonnull cmd;
@property (nonatomic, readonly, strong) id <IDOBridgeInterface> _Nonnull bridge;
@property (nonatomic, readonly, strong) id <IDOBleInterface> _Nonnull ble;
@property (nonatomic, readonly, strong) id <IDOAlexaInterface> _Nonnull alexa;
@property (nonatomic, readonly, strong) id <IDOFileTransferInterface> _Nonnull transfer;
@property (nonatomic, readonly, strong) id <IDOMessageIconInterface> _Nonnull messageIcon;
@property (nonatomic, readonly, strong) id <IDOSyncDataInterface> _Nonnull syncData;
@property (nonatomic, readonly, strong) id <IDODataExchangeOCInterface> _Nonnull dataExchange;
@property (nonatomic, readonly, strong) id <IDODeviceLogInterface> _Nonnull deviceLog;
@property (nonatomic, readonly, strong) id <IDOToolsInterface> _Nonnull tool;
@property (nonatomic, readonly, strong) IDOSdkInfo * _Nonnull info;
@end


SWIFT_CLASS("_TtC16protocol_channel24IDOSchedulerReminderItem")
@interface IDOSchedulerReminderItem : NSObject
/// Reminder event ID. Incremental value sent by the app, starting from 0
@property (nonatomic) NSInteger id;
@property (nonatomic) NSInteger year;
@property (nonatomic) NSInteger mon;
@property (nonatomic) NSInteger day;
@property (nonatomic) NSInteger hour;
@property (nonatomic) NSInteger min;
@property (nonatomic) NSInteger sec;
/// Repeat time <br />Set bit1-bit7 for week-based repeat if enabled with
/// <code>getSupportSetRepeatWeekTypeOnScheduleReminderV3</code> (Monday to Sunday, with bit 0 as the general switch)
/// Set repeat type (0: Invalid, 1: Once, 2: Daily, 3: Weekly, 4: Monthly, 5: Yearly) if enabled with
/// <code>getSupportSetRepeatTypeOnScheduleReminderV3</code>
@property (nonatomic) NSInteger repeatType;
/// Daily reminder switch<br />0: Off, 1: On
@property (nonatomic) NSInteger remindOnOff;
/// State code <br />0: Invalid, 1: Deleted, 2: Enabled
@property (nonatomic) NSInteger state;
/// Title content. Maximum 74 bytes
@property (nonatomic, copy) NSString * _Nonnull title;
/// Reminder content. Maximum 149 bytes
@property (nonatomic, copy) NSString * _Nonnull note;
- (nonnull instancetype)initWithId:(NSInteger)id year:(NSInteger)year mon:(NSInteger)mon day:(NSInteger)day hour:(NSInteger)hour min:(NSInteger)min sec:(NSInteger)sec repeatType:(NSInteger)repeatType remindOnOff:(NSInteger)remindOnOff state:(NSInteger)state title:(NSString * _Nonnull)title note:(NSString * _Nonnull)note OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel25IDOSchedulerReminderModel")
@interface IDOSchedulerReminderModel : NSObject
/// Operation type<br />0: Invalid<br />1: Add<br />2: Delete<br />3: Query<br />4: Modify
@property (nonatomic) NSInteger operate;
/// Error code. 0 if successful, non-zero if error
@property (nonatomic) NSInteger errCode;
@property (nonatomic, copy) NSArray<IDOSchedulerReminderItem *> * _Nullable items;
- (nonnull instancetype)initWithOperate:(NSInteger)operate errCode:(NSInteger)errCode items:(NSArray<IDOSchedulerReminderItem *> * _Nonnull)items OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel30IDOSchedulerReminderParamModel")
@interface IDOSchedulerReminderParamModel : NSObject
@property (nonatomic) NSInteger operate;
@property (nonatomic, copy) NSArray<IDOSchedulerReminderItem *> * _Nonnull items;
- (nonnull instancetype)initWithOperate:(NSInteger)operate items:(NSArray<IDOSchedulerReminderItem *> * _Nonnull)items OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Scientific sleep switch setting event
SWIFT_CLASS("_TtC16protocol_channel34IDOScientificSleepSwitchParamModel")
@interface IDOScientificSleepSwitchParamModel : NSObject
/// Mode
/// 2: Scientific sleep
/// 1: Normal sleep
@property (nonatomic) NSInteger mode;
/// Start time - hour
@property (nonatomic) NSInteger startHour;
/// Start time - minute
@property (nonatomic) NSInteger startMinute;
/// End time - hour
@property (nonatomic) NSInteger endHour;
/// End time - minute
@property (nonatomic) NSInteger endMinute;
- (nonnull instancetype)initWithMode:(NSInteger)mode startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute endHour:(NSInteger)endHour endMinute:(NSInteger)endMinute OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Get screen brightness event number
SWIFT_CLASS("_TtC16protocol_channel24IDOScreenBrightnessModel")
@interface IDOScreenBrightnessModel : NSObject
/// Brightness level
/// (0-100)
@property (nonatomic) NSInteger level;
/// 0 Auto
/// 1 Manual
/// If it is automatic synchronization configuration, please send 00; if it is user adjustment, please send 01
@property (nonatomic) NSInteger opera;
/// 0 Specify level
/// 1 Use ambient light sensor
/// 2 level does not matter
@property (nonatomic) NSInteger mode;
/// Night auto brightness adjustment
/// 0 Invalid, defined by firmware
/// 1 Off
/// 2 Night auto brightness adjustment
/// 3 Night brightness reduction uses the set time
@property (nonatomic) NSInteger autoAdjustNight;
/// Start time hour
@property (nonatomic) NSInteger startHour;
/// Start time minute
@property (nonatomic) NSInteger startMinute;
/// End time hour
@property (nonatomic) NSInteger endHour;
/// End time minute
@property (nonatomic) NSInteger endMinute;
/// Night brightness
@property (nonatomic) NSInteger nightLevel;
/// Display interval
@property (nonatomic) NSInteger showInterval;
- (nonnull instancetype)initWithLevel:(NSInteger)level opera:(NSInteger)opera mode:(NSInteger)mode autoAdjustNight:(NSInteger)autoAdjustNight startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute endHour:(NSInteger)endHour endMinute:(NSInteger)endMinute nightLevel:(NSInteger)nightLevel showInterval:(NSInteger)showInterval OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel10IDOSdkInfo")
@interface IDOSdkInfo : NSObject
/// SDK版本
@property (nonatomic, readonly, copy) NSString * _Nonnull versionSdk;
/// Lib库版本
@property (nonatomic, readonly, copy) NSString * _Nonnull versionLib;
/// Alexa库版本
@property (nonatomic, readonly, copy) NSString * _Nonnull versionAlexa;
/// c库版本
@property (nonatomic, readonly, copy) NSString * _Nonnull versionClib;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// App issued running plan (exercise plan) event number
SWIFT_CLASS("_TtC16protocol_channel19IDOSendRunPlanModel")
@interface IDOSendRunPlanModel : NSObject
/// 00: Success, 01: Failed, 02: Another running plan is already enabled
@property (nonatomic) NSInteger errCode;
/// Protocol library version number
@property (nonatomic) NSInteger version;
/// Operation:
/// 1: Start plan
/// 2: Plan data sent
/// 3: End plan
/// 4: Query running plan
@property (nonatomic) NSInteger operate;
/// Plan type:
/// 1: 3km running plan
/// 2: 5km running plan
/// 3: 10km running plan
/// 4: Half marathon training (Phase 2)
/// 5: Marathon training (Phase 2)
@property (nonatomic) NSInteger type;
/// Plan implementation start time year
@property (nonatomic) NSInteger year;
/// Plan implementation start time month
@property (nonatomic) NSInteger month;
/// Plan implementation start time day
@property (nonatomic) NSInteger day;
/// Plan implementation start time hour
@property (nonatomic) NSInteger hour;
/// Plan implementation start time minute
@property (nonatomic) NSInteger min;
/// Plan implementation start time second
@property (nonatomic) NSInteger sec;
- (nonnull instancetype)initWithErrCode:(NSInteger)errCode version:(NSInteger)version operate:(NSInteger)operate type:(NSInteger)type year:(NSInteger)year month:(NSInteger)month day:(NSInteger)day hour:(NSInteger)hour min:(NSInteger)min sec:(NSInteger)sec OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel23IDOSetNoticeStatusModel")
@interface IDOSetNoticeStatusModel : NSObject
/// Notification reminder switch
@property (nonatomic) enum IDONoticeNotifySwitchState notifySwitch;
/// Incoming call reminder switch
@property (nonatomic) enum IDONoticeCallSwitchState callSwitch;
/// Message app total switch
@property (nonatomic) enum IDONoticeMsgAllSwitchState msgAllSwitch;
/// 来电延迟 | Call delay
@property (nonatomic) NSInteger callDelay;
/// 短信提醒 | SMS reminder
@property (nonatomic) BOOL isOnSms;
/// 邮件提醒 | Email alert
@property (nonatomic) BOOL isOnEmail;
/// 微信提醒 | WeChat reminder
@property (nonatomic) BOOL isOnWeChat;
/// qq提醒 | qq reminder
@property (nonatomic) BOOL isOnQq;
/// 微博提醒 | Weibo reminder
@property (nonatomic) BOOL isOnWeibo;
/// FaceBook 提醒 | FaceBook Reminder
@property (nonatomic) BOOL isOnFaceBook;
/// Twitter 提醒 | Twitter Reminder
@property (nonatomic) BOOL isOnTwitter;
/// Whatsapp 提醒 | Whatsapp Reminder
@property (nonatomic) BOOL isOnWhatsapp;
/// Messenger 提醒 | Messenger reminder
@property (nonatomic) BOOL isOnMessenger;
/// Instagram 提醒 | Instagram reminder
@property (nonatomic) BOOL isOnInstagram;
/// LinkedIn 提醒 | LinkedIn Reminder
@property (nonatomic) BOOL isOnLinkedIn;
/// Calendar 提醒 | Calendar Reminder
@property (nonatomic) BOOL isOnCalendar;
/// Skype 提醒 | Skype reminder
@property (nonatomic) BOOL isOnSkype;
/// Alarm 提醒 | Alarm Reminder
@property (nonatomic) BOOL isOnAlarm;
/// Pokeman (其他)提醒 | Pokemon Reminder(other)
@property (nonatomic) BOOL isOnPokeman;
/// Vkontakte 提醒 | Vkontakte Reminder
@property (nonatomic) BOOL isOnVkontakte;
/// Line 提醒 | Line reminder
@property (nonatomic) BOOL isOnLine;
/// Viber 提醒 | Viber reminder
@property (nonatomic) BOOL isOnViber;
/// KakaoTalk 提醒 | KakaoTalk Reminder
@property (nonatomic) BOOL isOnKakaoTalk;
/// Gmail 提醒 | Gmail reminder
@property (nonatomic) BOOL isOnGmail;
/// Outlook 提醒 | Outlook reminder
@property (nonatomic) BOOL isOnOutlook;
/// Snapchat 提醒 | Snapchat Reminder
@property (nonatomic) BOOL isOnSnapchat;
/// Telegram 提醒 | Telegram Reminder
@property (nonatomic) BOOL isOnTelegram;
/// Chatwork 提醒 | Chatwork
@property (nonatomic) BOOL isOnChatwork;
/// Slack 提醒 | Slack
@property (nonatomic) BOOL isOnSlack;
/// Yahoo Mail 提醒 | Yahoo Mail
@property (nonatomic) BOOL isOnYahooMail;
/// Tumblr 提醒 | Tumblr
@property (nonatomic) BOOL isOnTumblr;
/// Youtube 提醒 | Youtube
@property (nonatomic) BOOL isOnYoutube;
/// Yahoo Pinterest 提醒 | Yahoo Pinterest
@property (nonatomic) BOOL isOnYahooPinterest;
/// Keep 提醒 | keep
@property (nonatomic) BOOL isOnKeep;
/// TikTok 提醒 | tiktok
@property (nonatomic) BOOL isOnTikTok;
/// Redbus 提醒 | redbus
@property (nonatomic) BOOL isOnRedbus;
/// Dailyhunt 提醒 | dailyhunt
@property (nonatomic) BOOL isOnDailyhunt;
/// Hotstar 提醒 | hotstar
@property (nonatomic) BOOL isOnHotstar;
/// Inshorts 提醒 | inshorts
@property (nonatomic) BOOL isOnInshorts;
/// Paytm 提醒 | paytm
@property (nonatomic) BOOL isOnPaytm;
/// Amazon 提醒 | amazon
@property (nonatomic) BOOL isOnAmazon;
/// Flipkart 提醒 | flipkart
@property (nonatomic) BOOL isOnFlipkart;
/// Prime 提醒 | prime
@property (nonatomic) BOOL isOnPrime;
/// Netflix 提醒 | netflix
@property (nonatomic) BOOL isOnNetflix;
/// Gpay 提醒 | gpay
@property (nonatomic) BOOL isOnGpay;
/// Phonpe 提醒 | phonpe
@property (nonatomic) BOOL isOnPhonpe;
/// Swiggy 提醒 | swiggy
@property (nonatomic) BOOL isOnSwiggy;
/// Zomato 提醒 | zomato
@property (nonatomic) BOOL isOnZomato;
/// MakeMyTrip 提醒 | make my trip
@property (nonatomic) BOOL isOnMakeMyTrip;
/// JioTv 提醒 | jio tv
@property (nonatomic) BOOL isOnJioTv;
/// Microsoft 提醒 | Microsoft
@property (nonatomic) BOOL isOnMicrosoft;
/// WhatsApp Business 提醒 | WhatsApp Business
@property (nonatomic) BOOL isOnWhatsAppBusiness;
/// nioseFit 提醒 | noiseFit
@property (nonatomic) BOOL isOnNioseFit;
/// did no call 提醒 | did no call
@property (nonatomic) BOOL isOnDidNotCall;
/// 事项 提醒 | matters remind
@property (nonatomic) BOOL isOnMattersRemind;
/// uber 提醒 | uber
@property (nonatomic) BOOL isOnUber;
/// ola 提醒 | ola
@property (nonatomic) BOOL isOnOla;
/// yt music 提醒 | yt music
@property (nonatomic) BOOL isOnYtMusic;
/// google meet 提醒
@property (nonatomic) BOOL isOnGoogleMeet;
/// mormaii smartwatch 提醒
@property (nonatomic) BOOL isOnMormaiiSmartwatch;
/// technos connect 提醒
@property (nonatomic) BOOL isOnTechnosConnect;
/// enioei 提醒
@property (nonatomic) BOOL isOnEnioei;
/// aliexpress 提醒
@property (nonatomic) BOOL isOnAliexpress;
/// shopee 提醒
@property (nonatomic) BOOL isOnShopee;
/// teams 提醒
@property (nonatomic) BOOL isOnTeams;
/// 99 taxi 提醒
@property (nonatomic) BOOL isOn99Taxi;
/// uber eats 提醒
@property (nonatomic) BOOL isOnUberEats;
/// l food 提醒
@property (nonatomic) BOOL isOnLfood;
/// rappi 提醒
@property (nonatomic) BOOL isOnRappi;
/// mercado Livre 提醒
@property (nonatomic) BOOL isOnMercadoLivre;
/// Magalu 提醒
@property (nonatomic) BOOL isOnMagalu;
/// Americanas 提醒
@property (nonatomic) BOOL isOnAmericanas;
/// Yahoo 提醒
@property (nonatomic) BOOL isOnYahoo;
/// Instantemail 提醒 | 支持Instantemail的功能表
@property (nonatomic) BOOL isOnInstantemail;
/// nhnemail 提醒 | 支持NAVER邮件的功能表
@property (nonatomic) BOOL isOnNhnemail;
/// zohoemail 提醒 | 支持ZoHo邮箱的功能表
@property (nonatomic) BOOL isOnZohoemail;
/// Exchangeemail 提醒 | 支持Exchange+ Mail Client 交换邮件的功能表
@property (nonatomic) BOOL isOnExchangeemail;
/// 189email 提醒 | 支持189邮件的功能表
@property (nonatomic) BOOL isOn189email;
/// googleGmail 提醒 | 支持谷歌邮箱的功能表
@property (nonatomic) BOOL isOnGoogleGmail;
/// Veryfit 提醒 的功能表 0x4F
@property (nonatomic) BOOL isOnVeryfit;
/// general 提醒 | 通知支持通用的功能表 0x50
@property (nonatomic) BOOL isOnGeneral;
/// 189email 提醒 |  通知支持阿里巴巴邮箱的功能表 type:0x51
@property (nonatomic) BOOL isOnAlibabaemail;
+ (IDOSetNoticeStatusModel * _Nonnull)createDefaultModel SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Set shortcut
SWIFT_CLASS("_TtC16protocol_channel21IDOShortcutParamModel")
@interface IDOShortcutParamModel : NSObject
/// Function of Shortcut 1
/// 0: Invalid
/// 1: Quick access to camera control
/// 2: Quick access to motion mode
/// 3: Quick access to do not disturb
@property (nonatomic) NSInteger mode;
- (nonnull instancetype)initWithMode:(NSInteger)mode OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Set sleep period event
SWIFT_CLASS("_TtC16protocol_channel24IDOSleepPeriodParamModel")
@interface IDOSleepPeriodParamModel : NSObject
/// Switch
/// 1 On
/// 0 Off
@property (nonatomic) NSInteger onOff;
/// Start time (hour)
@property (nonatomic) NSInteger startHour;
/// Start time (minute)
@property (nonatomic) NSInteger startMinute;
/// End time (hour)
@property (nonatomic) NSInteger endHour;
/// End time (minute)
@property (nonatomic) NSInteger endMinute;
- (nonnull instancetype)initOnOff:(NSInteger)onOff startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute endHour:(NSInteger)endHour endMinute:(NSInteger)endMinute OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel18IDOSpo2SwitchModel")
@interface IDOSpo2SwitchModel : NSObject
/// SpO2 all-day switch
/// 1 On
/// 0 Off
@property (nonatomic) NSInteger onOff;
/// Start time (hour)
@property (nonatomic) NSInteger startHour;
/// Start time (minute)
@property (nonatomic) NSInteger startMinute;
/// End time (hour)
@property (nonatomic) NSInteger endHour;
/// End time (minute)
@property (nonatomic) NSInteger endMinute;
/// Low SpO2 switch
/// 1 On
/// 0 Off
/// Requires support from the menu <code>setSpo2AllDayOnOff</code>
@property (nonatomic) NSInteger lowSpo2OnOff;
/// Low SpO2 threshold
/// Requires support from the menu <code>v3SupportSetSpo2LowValueRemind</code>
@property (nonatomic) NSInteger lowSpo2Value;
/// Notification type
/// 0: Invalid
/// 1: Allow notifications
/// 2: Silent notifications
/// 3: Disable notifications
/// Requires support from the menu <code>getSpo2NotifyFlag</code>
@property (nonatomic) NSInteger notifyFlag;
- (nonnull instancetype)initOnOff:(NSInteger)onOff startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute endHour:(NSInteger)endHour endMinute:(NSInteger)endMinute lowSpo2OnOff:(NSInteger)lowSpo2OnOff lowSpo2Value:(NSInteger)lowSpo2Value notifyFlag:(NSInteger)notifyFlag OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Set SpO2 switch event
SWIFT_CLASS("_TtC16protocol_channel23IDOSpo2SwitchParamModel")
@interface IDOSpo2SwitchParamModel : NSObject
/// SpO2 all-day switch
/// 1 On
/// 0 Off
@property (nonatomic) NSInteger onOff;
/// Start time (hour)
@property (nonatomic) NSInteger startHour;
/// Start time (minute)
@property (nonatomic) NSInteger startMinute;
/// End time (hour)
@property (nonatomic) NSInteger endHour;
/// End time (minute)
@property (nonatomic) NSInteger endMinute;
/// Low SpO2 switch
/// 1 On
/// 0 Off
/// Requires support from the menu <code>setSpo2AllDayOnOff</code>
@property (nonatomic) NSInteger lowSpo2OnOff;
/// Low SpO2 threshold
/// Requires support from the menu <code>v3SupportSetSpo2LowValueRemind</code>
@property (nonatomic) NSInteger lowSpo2Value;
/// Notification type
/// 0: Invalid
/// 1: Allow notifications
/// 2: Silent notifications
/// 3: Disable notifications
/// Requires support from the menu <code>getSpo2NotifyFlag</code>
@property (nonatomic) NSInteger notifyFlag;
- (nonnull instancetype)initOnOff:(NSInteger)onOff startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute endHour:(NSInteger)endHour endMinute:(NSInteger)endMinute lowSpo2OnOff:(NSInteger)lowSpo2OnOff lowSpo2Value:(NSInteger)lowSpo2Value notifyFlag:(NSInteger)notifyFlag OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum IDOSportType : NSInteger;

SWIFT_CLASS("_TtC16protocol_channel19IDOSport100SortItem")
@interface IDOSport100SortItem : NSObject
/// Type of sport
@property (nonatomic) enum IDOSportType type;
/// 0: None downloaded for all<br />Bit0: Small icon downloaded<br />Bit1: Big icon downloaded<br />Bit2: Medium icon downloaded<br />Bit3: Smallest icon downloaded
@property (nonatomic) NSInteger flag;
- (nonnull instancetype)initWithType:(enum IDOSportType)type flag:(NSInteger)flag OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel20IDOSport100SortModel")
@interface IDOSport100SortModel : NSObject
/// 0: Success, Non-zero: Failure
@property (nonatomic) NSInteger errCode;
/// Operation <br />0: Invalid 1: Query 2: Set
@property (nonatomic) NSInteger operate;
/// Minimum number of items to be displayed, at least 1
@property (nonatomic) NSInteger minShowNum;
/// Maximum number of items to be displayed, maximum 20
@property (nonatomic) NSInteger maxShowNum;
/// Current position of displayed added sports, app displays based on this position, with the devices added before corresponding to those positions, and those added later to the positions after this position. Only valid for queries
@property (nonatomic) NSInteger nowUserLocation;
@property (nonatomic, copy) NSArray<IDOSport100SortItem *> * _Nonnull items;
- (nonnull instancetype)initWithErrCode:(NSInteger)errCode operate:(NSInteger)operate minShowNum:(NSInteger)minShowNum maxShowNum:(NSInteger)maxShowNum nowUserLocation:(NSInteger)nowUserLocation items:(NSArray<IDOSport100SortItem *> * _Nonnull)items OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel25IDOSport100SortParamModel")
@interface IDOSport100SortParamModel : NSObject
/// Operation <br />0: Invalid 1: Query 2: Set
@property (nonatomic) NSInteger operate;
/// Current position of displayed added sports
@property (nonatomic) NSInteger nowUserLocation;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull items;
- (nonnull instancetype)initWithOperate:(NSInteger)operate nowUserLocation:(NSInteger)nowUserLocation items:(NSArray<NSNumber *> * _Nonnull)items OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Set exercise goal event
SWIFT_CLASS("_TtC16protocol_channel22IDOSportGoalParamModel")
@interface IDOSportGoalParamModel : NSObject
/// Number of steps for the exercise goal
@property (nonatomic) NSInteger sportStep;
/// Walk goal steps per hour setting
@property (nonatomic) NSInteger walkGoalSteps;
/// Target type setting
/// 0: Invalid
/// 1: Daily Goal
/// 2: Weekly Goal
/// Requires support from the menu <code>getStepDataTypeV2</code>
@property (nonatomic) NSInteger targetType;
- (nonnull instancetype)initWithSportStep:(NSInteger)sportStep walkGoalSteps:(NSInteger)walkGoalSteps targetType:(NSInteger)targetType OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Set sport mode select event number
SWIFT_CLASS("_TtC16protocol_channel28IDOSportModeSelectParamModel")
@interface IDOSportModeSelectParamModel : NSObject
/// 0: Invalid
/// 1: Set quick sport type - sport_type1 & sport_type2 & sport_type3 & sport_type4
/// 2: Set specific sport type
@property (nonatomic) NSInteger flag;
/// Quick sport type 1
/// flag: 1 is valid
@property (nonatomic) NSInteger sportType1;
/// Quick sport type 2
/// flag: 1 is valid
@property (nonatomic) NSInteger sportType2;
/// Quick sport type 3
/// flag: 1 is valid
@property (nonatomic) NSInteger sportType3;
/// Quick sport type 4
/// flag: 1 is valid
@property (nonatomic) NSInteger sportType4;
/// Type: Walking, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType0Walk;
/// Type: Running, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType0Run;
/// Type: Cycling, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType0ByBike;
/// Type: Walking (on foot), 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType0OnFoot;
/// Type: Swimming, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType0Swim;
/// Type: Mountain climbing, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType0MountainClimbing;
/// Type: Badminton, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType0Badminton;
/// Type: Other, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType0Other;
/// Type: Fitness, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType1Fitness;
/// Type: Spinning, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType1Spinning;
/// Type: Ellipsoid, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType1Ellipsoid;
/// Type: Treadmill, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType1Treadmill;
/// Type: Sit-ups, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType1SitUp;
/// Type: Push-ups, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType1PushUp;
/// Type: Dumbbell, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType1Dumbbell;
/// Type: Weightlifting, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType1Weightlifting;
/// Type: Bodybuilding exercise, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType2BodybuildingExercise;
/// Type: Yoga, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType2Yoga;
/// Type: Rope skipping, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType2RopeSkipping;
/// Type: Table tennis, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType2TableTennis;
/// Type: Basketball, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType2Basketball;
/// Type: Football, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType2Football;
/// Type: Volleyball, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType2Volleyball;
/// Type: Tennis, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType2Tennis;
/// Type: Golf, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType3Golf;
/// Type: Baseball, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType3Baseball;
/// Type: Skiing, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType3Skiing;
/// Type: Roller skating, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType3RollerSkating;
/// Type: Dance, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType3Dance;
/// Type: Strength training, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType3StrengthTraining;
/// Type: Core training, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType3CoreTraining;
/// Type: Tidy up and relax, 0 not supported, 1 supported
/// flag: 2 is valid
@property (nonatomic) BOOL sportType3TidyUpRelax;
- (nonnull instancetype)initWithFlag:(NSInteger)flag sportType1:(NSInteger)sportType1 sportType2:(NSInteger)sportType2 sportType3:(NSInteger)sportType3 sportType4:(NSInteger)sportType4 sportType0Walk:(BOOL)sportType0Walk sportType0Run:(BOOL)sportType0Run sportType0ByBike:(BOOL)sportType0ByBike sportType0OnFoot:(BOOL)sportType0OnFoot sportType0Swim:(BOOL)sportType0Swim sportType0MountainClimbing:(BOOL)sportType0MountainClimbing sportType0Badminton:(BOOL)sportType0Badminton sportType0Other:(BOOL)sportType0Other sportType1Fitness:(BOOL)sportType1Fitness sportType1Spinning:(BOOL)sportType1Spinning sportType1Ellipsoid:(BOOL)sportType1Ellipsoid sportType1Treadmill:(BOOL)sportType1Treadmill sportType1SitUp:(BOOL)sportType1SitUp sportType1PushUp:(BOOL)sportType1PushUp sportType1Dumbbell:(BOOL)sportType1Dumbbell sportType1Weightlifting:(BOOL)sportType1Weightlifting sportType2BodybuildingExercise:(BOOL)sportType2BodybuildingExercise sportType2Yoga:(BOOL)sportType2Yoga sportType2RopeSkipping:(BOOL)sportType2RopeSkipping sportType2TableTennis:(BOOL)sportType2TableTennis sportType2Basketball:(BOOL)sportType2Basketball sportType2Football:(BOOL)sportType2Football sportType2Volleyball:(BOOL)sportType2Volleyball sportType2Tennis:(BOOL)sportType2Tennis sportType3Golf:(BOOL)sportType3Golf sportType3Baseball:(BOOL)sportType3Baseball sportType3Skiing:(BOOL)sportType3Skiing sportType3RollerSkating:(BOOL)sportType3RollerSkating sportType3Dance:(BOOL)sportType3Dance sportType3StrengthTraining:(BOOL)sportType3StrengthTraining sportType3CoreTraining:(BOOL)sportType3CoreTraining sportType3TidyUpRelax:(BOOL)sportType3TidyUpRelax OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel26IDOSportModeSortParamModel")
@interface IDOSportModeSortParamModel : NSObject
/// Sorting index (starting from 1, 0 is invalid)
@property (nonatomic) NSInteger index;
@property (nonatomic) enum IDOSportType type;
- (nonnull instancetype)initWithIndex:(NSInteger)index type:(enum IDOSportType)type OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel18IDOSportParamModel")
@interface IDOSportParamModel : NSObject
/// 运动类型排序详情
@property (nonatomic, copy) NSArray<IDOSportModeSortParamModel *> * _Nonnull items;
- (nonnull instancetype)initWithItems:(NSArray<IDOSportModeSortParamModel *> * _Nonnull)items OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel17IDOSportSortModel")
@interface IDOSportSortModel : NSObject
/// 0: Success, Non-zero: Failure
@property (nonatomic) NSInteger errCode;
/// Operation <br />0: Invalid 1: Query 2: Set
@property (nonatomic) NSInteger operate;
/// Type of sport
@property (nonatomic) enum IDOSportType sportType;
/// Current position of displayed added sports, app displays based on this position, with the devices added before corresponding to those positions, and those added later to the positions after this position. Only valid for queries
@property (nonatomic) NSInteger nowUserLocation;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull items;
- (nonnull instancetype)initWithOperate:(NSInteger)operate errCode:(NSInteger)errCode sportType:(enum IDOSportType)sportType nowUserLocation:(NSInteger)nowUserLocation items:(NSArray<NSNumber *> * _Nonnull)items OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel22IDOSportSortParamModel")
@interface IDOSportSortParamModel : NSObject
/// Operation <br />0: Invalid 1: Query 2: Set
@property (nonatomic) NSInteger operate;
/// Type of sport
@property (nonatomic) enum IDOSportType sportType;
/// Current position of displayed added sports
@property (nonatomic) NSInteger nowUserLocation;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull items;
- (nonnull instancetype)initWithOperate:(NSInteger)operate sportType:(enum IDOSportType)sportType nowUserLocation:(NSInteger)nowUserLocation items:(NSArray<NSNumber *> * _Nonnull)items OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, IDOSportType, open) {
/// 无运动类型
  IDOSportTypeSportTypeNull = 0x00,
/// 走路
  IDOSportTypeSportTypeWalk = 0x01,
/// 跑步
  IDOSportTypeSportTypeRun = 0x02,
/// 骑行
  IDOSportTypeSportTypeCycling = 0x03,
/// 徒步
  IDOSportTypeSportTypeOnFoot = 0x04,
/// 游泳
  IDOSportTypeSportTypeSwim = 0x05,
/// 爬山
  IDOSportTypeSportTypeClimb = 0x06,
/// 羽毛球
  IDOSportTypeSportTypeBadminton = 0x07,
/// 其他
  IDOSportTypeSportTypeOther = 0x08,
/// 健身
  IDOSportTypeSportTypeFitness = 0x09,
/// 动感单车
  IDOSportTypeSportTypeDynamic = 0x0a,
/// 椭圆球
  IDOSportTypeSportTypeEllipsoid = 0x0b,
/// 跑步机
  IDOSportTypeSportTypeTreadmill = 0x0c,
/// 仰卧起坐
  IDOSportTypeSportTypeSitUp = 0x0d,
/// 俯卧撑
  IDOSportTypeSportTypePushUp = 0x0e,
/// 哑铃
  IDOSportTypeSportTypeDumbbells = 0x0f,
/// 举重
  IDOSportTypeSportTypeLifting = 0x10,
/// 健身操
  IDOSportTypeSportTypeAerobics = 0x11,
/// 瑜伽
  IDOSportTypeSportTypeYoga = 0x12,
/// 跳绳
  IDOSportTypeSportTypeRope = 0x13,
/// 乒乓球
  IDOSportTypeSportTypePingPong = 0x14,
/// 篮球
  IDOSportTypeSportTypeBasketball = 0x15,
/// 足球
  IDOSportTypeSportTypeSoccer = 0x16,
/// 排球
  IDOSportTypeSportTypeVolleyball = 0x17,
/// 网球
  IDOSportTypeSportTypeTennisBall = 0x18,
/// 高尔夫球
  IDOSportTypeSportTypeGolf = 0x19,
/// 棒球
  IDOSportTypeSportTypeBaseball = 0x1a,
/// 滑雪
  IDOSportTypeSportTypeSki = 0x1b,
/// 轮滑
  IDOSportTypeSportTypeRoller = 0x1c,
/// 跳舞
  IDOSportTypeSportTypeDancing = 0x1d,
/// 室内划船
  IDOSportTypeSportTypeRollerMachine = 0x1f,
/// 普拉提
  IDOSportTypeSportTypePilates = 32,
/// 交叉训练
  IDOSportTypeSportTypeCrossTrain = 33,
/// 有氧训练
  IDOSportTypeSportTypeCardio = 34,
/// 尊巴舞
  IDOSportTypeSportTypeZumba = 35,
/// 广场舞
  IDOSportTypeSportTypeSquareDance = 36,
/// 平板支撑
  IDOSportTypeSportTypePlank = 37,
/// 健身房
  IDOSportTypeSportTypeGym = 38,
/// 有氧健身操
  IDOSportTypeSportTypeOxAerobics = 39,
/// 户外跑步
  IDOSportTypeSportTypeOutdoorRun = 48,
/// 室内跑步
  IDOSportTypeSportTypeIndoorRun = 49,
/// 户外骑行
  IDOSportTypeSportTypeOutdoorCycle = 50,
/// 室内骑行
  IDOSportTypeSportTypeIndoorCycle = 51,
/// 户外走路
  IDOSportTypeSportTypeOutdoorWalk = 52,
/// 室内走路
  IDOSportTypeSportTypeIndoorWalk = 53,
/// 泳池游泳
  IDOSportTypeSportTypePoolSwim = 54,
/// 开放水域游泳
  IDOSportTypeSportTypeWaterSwim = 55,
/// 椭圆机
  IDOSportTypeSportTypeElliptical = 56,
/// 划船机
  IDOSportTypeSportTypeRower = 57,
/// 高强度间歇训练法
  IDOSportTypeSportTypeHit = 58,
/// 自由训练
  IDOSportTypeSportTypeFreeTraining = 100,
/// 整理放松
  IDOSportTypeSportTypeFunctionalStrengthTraining = 101,
/// 核心训练
  IDOSportTypeSportTypeCoreTraining = 102,
/// 踏步机
  IDOSportTypeSportTypeStepper = 103,
/// 整理放松
  IDOSportTypeSportTypeOrganizeAndRelax = 104,
/// 传统力量训练
  IDOSportTypeSportTypeTraditionalStrengthTraining = 110,
/// 引体向上
  IDOSportTypeSportTypePullUp = 112,
/// 开合跳
  IDOSportTypeSportTypeOpeningAndClosingJump = 114,
/// 深蹲
  IDOSportTypeSportTypeSquat = 115,
/// 高抬腿
  IDOSportTypeSportTypeHighLegLift = 116,
/// 拳击
  IDOSportTypeSportTypeBoxing = 117,
/// 杠铃
  IDOSportTypeSportTypeBarbell = 118,
/// 武术
  IDOSportTypeSportTypeMartial = 119,
/// 太极
  IDOSportTypeSportTypeTaiJi = 120,
/// 空手道
  IDOSportTypeSportTypeKarate = 122,
/// 跆拳道
  IDOSportTypeSportTypeTaekwondo = 121,
/// 自由搏击
  IDOSportTypeSportTypeFreeFight = 123,
/// 击剑
  IDOSportTypeSportTypeFencing = 124,
/// 射箭
  IDOSportTypeSportTypeArchery = 125,
/// 体操
  IDOSportTypeSportTypeArtisticGymnastics = 126,
/// 单杠
  IDOSportTypeSportTypeHorizontalBar = 127,
/// 双杠
  IDOSportTypeSportTypeParallelBars = 128,
/// 漫步机
  IDOSportTypeSportTypeWalkingMachine = 129,
/// 登山机
  IDOSportTypeSportTypeMountaineeringMachine = 130,
/// 保龄球
  IDOSportTypeSportTypeBowling = 131,
/// 台球
  IDOSportTypeSportTypeBilliards = 132,
/// 曲棍球
  IDOSportTypeSportTypeHockey = 133,
/// 橄榄球
  IDOSportTypeSportTypeRugby = 134,
/// 壁球
  IDOSportTypeSportTypeSquash = 135,
/// 垒球
  IDOSportTypeSportTypeSoftball = 136,
/// 手球
  IDOSportTypeSportTypeHandball = 137,
/// 毽球
  IDOSportTypeSportTypeShuttlecock = 138,
/// 沙滩足球
  IDOSportTypeSportTypeBeachSoccer = 139,
/// 藤球
  IDOSportTypeSportTypeSepaktakraw = 140,
/// 躲避球
  IDOSportTypeSportTypeDodgeball = 141,
/// 街舞
  IDOSportTypeSportTypeHiphop = 152,
/// 芭蕾
  IDOSportTypeSportTypeBallet = 153,
/// 社交舞
  IDOSportTypeSportTypeSocialDance = 154,
/// 飞盘
  IDOSportTypeSportTypeFrisbee = 155,
/// 飞镖
  IDOSportTypeSportTypeDarts = 156,
/// 骑马
  IDOSportTypeSportTypeRiding = 157,
/// 爬楼
  IDOSportTypeSportTypeClimbbuilding = 158,
/// 放风筝
  IDOSportTypeSportTypeflykite = 159,
/// 放风筝
  IDOSportTypeSportTypeGofishing = 160,
/// 雪橇
  IDOSportTypeSportTypeSled = 161,
/// 雪车
  IDOSportTypeSportTypeSnowmobile = 162,
/// 单板滑雪
  IDOSportTypeSportTypeSnowboarding = 163,
/// 雪上运动
  IDOSportTypeSportTypeSnowSports = 164,
/// 高山滑雪
  IDOSportTypeSportTypeAlpineskiing = 165,
/// 越野滑雪
  IDOSportTypeSportTypeCrosscountryskiing = 166,
/// 冰壶
  IDOSportTypeSportTypeCurling = 167,
/// 冰球
  IDOSportTypeSportTypeIcehockey = 168,
/// 冬季两项
  IDOSportTypeSportTypeWinterbiathlon = 169,
/// 冲浪
  IDOSportTypeSportTypeSurfing = 170,
/// 帆船
  IDOSportTypeSportTypeSailboat = 171,
/// 帆板
  IDOSportTypeSportTypeSailboard = 172,
/// 皮艇
  IDOSportTypeSportTypeKayak = 173,
/// 摩托艇
  IDOSportTypeSportTypeMotorboat = 174,
/// 划艇
  IDOSportTypeSportTypeRowboat = 175,
/// 赛艇
  IDOSportTypeSportTypeRowing = 176,
/// 龙舟
  IDOSportTypeSportTypeDragonBoat = 177,
/// 水球
  IDOSportTypeSportTypeWaterPolo = 178,
/// 漂流
  IDOSportTypeSportTypeDrift = 179,
/// 滑板
  IDOSportTypeSportTypeSkate = 180,
/// 攀岩
  IDOSportTypeSportTypeRockClimbing = 181,
/// 蹦极
  IDOSportTypeSportTypeBungeejumping = 182,
/// 跑酷
  IDOSportTypeSportTypeParkour = 183,
/// BMX
  IDOSportTypeSportTypeBMX = 184,
/// 足排球
  IDOSportTypeSportTypeFootVolley = 187,
/// 站立划水
  IDOSportTypeSportTypeStandingStroke = 188,
/// 卷腹
  IDOSportTypeSportTypeCrunch = 0xbe,
/// 波比跳
  IDOSportTypeSportTypeBurpee = 0xbf,
/// 蹦床
  IDOSportTypeSportTypeTrampoline = 0xc3,
/// 赛车
  IDOSportTypeSportTypeMotorcycle = 0xc5,
/// 卡巴迪
  IDOSportTypeSportTypeKabaddi = 0xc0,
/// 战绳
  IDOSportTypeSportTypeBattleRope = 198,
/// 跳伞
  IDOSportTypeSportTypeParachuting = 199,
/// 定向越野
  IDOSportTypeSportTypeOrienteering = 200,
/// 山地骑行
  IDOSportTypeSportTypeMountainBiking = 201,
/// 板球运动cricket
  IDOSportTypeSportTypeCricket = 0x4b,
/// 户外玩耍
  IDOSportTypeSportTypeOutdoorFun = 0xc1,
/// 其他运动
  IDOSportTypeSportTypeOtherActivity = 0xc2,
/// 越野跑
  IDOSportTypeSportTypeCrossRunning = 189,
};


SWIFT_CLASS("_TtC16protocol_channel16IDOSportTypeItem")
@interface IDOSportTypeItem : NSObject
@property (nonatomic) enum IDOSportType type;
- (nonnull instancetype)initWithType:(enum IDOSportType)type OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum IDOSppStateType : NSInteger;

SWIFT_CLASS("_TtC16protocol_channel16IDOSppStateModel")
@interface IDOSppStateModel : NSObject
@property (nonatomic, readonly) enum IDOSppStateType type;
- (nonnull instancetype)initWithType:(enum IDOSppStateType)type OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// spp
typedef SWIFT_ENUM(NSInteger, IDOSppStateType, open) {
/// 开始连接
  IDOSppStateTypeOnStart = 0,
/// 连接成功
  IDOSppStateTypeOnSuccess = 1,
/// 连接失败
  IDOSppStateTypeOnFail = 2,
/// 断链
  IDOSppStateTypeOnBreak = 3,
};

/// 状态通知
typedef SWIFT_ENUM(NSInteger, IDOStatusNotification, open) {
/// 协议库完成蓝牙库桥接，此时缓存数据已经初始化
  IDOStatusNotificationProtocolConnectCompleted = 0,
/// 功能表获取完成
  IDOStatusNotificationFunctionTableUpdateCompleted = 1,
/// 设备信息获取完成
  IDOStatusNotificationDeviceInfoUpdateCompleted = 2,
/// 三级版本获取完成
  IDOStatusNotificationDeviceInfoFwVersionCompleted = 3,
/// 绑定授权码异常，设备强制解绑
  IDOStatusNotificationUnbindOnAuthCodeError = 4,
/// 绑定状态异常，需要解绑 (本地绑定状态和设备信息不一致时触发)
  IDOStatusNotificationUnbindOnBindStateError = 5,
/// 快速配置完成
  IDOStatusNotificationFastSyncCompleted = 6,
/// 快速配置失败，需业务层重新触发快速配置
  IDOStatusNotificationFastSyncFailed = 7,
/// BT MacAddress获取完成
  IDOStatusNotificationDeviceInfoBtAddressUpdateCompleted = 8,
/// 快速配置获取到的macAddress和markConnectedDevice传入的不一致时上报此错误
  IDOStatusNotificationMacAddressError = 9,
/// 同步健康数据中
  IDOStatusNotificationSyncHealthDataIng = 10,
/// 同步健康数据完成
  IDOStatusNotificationSyncHealthDataCompleted = 11,
};


/// Get daily step goal event number
SWIFT_CLASS("_TtC16protocol_channel16IDOStepGoalModel")
@interface IDOStepGoalModel : NSObject
/// Daily step goal
@property (nonatomic) NSInteger step;
/// Weekly step goal
/// Valid when v2_support_set_step_data_type_03_03 is enabled
@property (nonatomic) NSInteger stepWeek;
- (nonnull instancetype)initWithStep:(NSInteger)step stepWeek:(NSInteger)stepWeek OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel25IDOStressCalibrationModel")
@interface IDOStressCalibrationModel : NSObject
/// 0: Success
/// 1: Failed - Calibration in progress
/// 2: Failed - Charging
/// 3: Failed - Not wearing
/// 4: Failed - In a sports scene
@property (nonatomic) NSInteger retCode;
- (nonnull instancetype)initWithRetCode:(NSInteger)retCode OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Set Stress Calibration Event Code
SWIFT_CLASS("_TtC16protocol_channel30IDOStressCalibrationParamModel")
@interface IDOStressCalibrationParamModel : NSObject
/// Stress score, ranging from 1 to 10
@property (nonatomic) NSInteger stressScore;
/// 0: Start calibration setting
/// 1: Cancel calibration setting
@property (nonatomic) NSInteger status;
- (nonnull instancetype)initWithStressScore:(NSInteger)stressScore status:(NSInteger)status OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel20IDOStressSwitchModel")
@interface IDOStressSwitchModel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel24IDOStressSwitchModelObjc")
@interface IDOStressSwitchModelObjc : NSObject
/// Overall switch 1: On 0: Off
@property (nonatomic) NSInteger onOff;
/// Start time - hour
@property (nonatomic) NSInteger startHour;
/// Start time - minute
@property (nonatomic) NSInteger startMinute;
/// End time - hour
@property (nonatomic) NSInteger endHour;
/// End time - minute
@property (nonatomic) NSInteger endMinute;
/// Stress reminder switch 1: On 0: Off
/// Doesn’t work if on_off is off
@property (nonatomic) NSInteger remindOnOff;
/// Reminder interval in minutes, default is 60 minutes
@property (nonatomic) NSInteger interval;
/// High pressure threshold
@property (nonatomic) NSInteger highThreshold;
/// Pressure calibration threshold, default is 80
/// Requires firmware support for setSendCalibrationThreshold
@property (nonatomic) NSInteger stressThreshold;
/// Notification type
/// 0: Invalid
/// 1: Allow notification
/// 2: Silent notification
/// 3: Disable notification
/// Requires firmware support for getPressureNotifyFlagMode
@property (nonatomic) NSInteger notifyFlag;
/// Repeat
@property (nonatomic, copy) NSArray<IDOWeekObjc *> * _Nonnull repeats;
- (nonnull instancetype)initOnOff:(NSInteger)onOff startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute endHour:(NSInteger)endHour endMinute:(NSInteger)endMinute remindOnOff:(NSInteger)remindOnOff interval:(NSInteger)interval highThreshold:(NSInteger)highThreshold stressThreshold:(NSInteger)stressThreshold notifyFlag:(NSInteger)notifyFlag repeats:(NSArray<IDOWeekObjc *> * _Nonnull)repeats OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel25IDOStressSwitchParamModel")
@interface IDOStressSwitchParamModel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel29IDOStressSwitchParamModelObjc")
@interface IDOStressSwitchParamModelObjc : NSObject
/// Overall switch 1: On 0: Off
@property (nonatomic) NSInteger onOff;
/// Start time - hour
@property (nonatomic) NSInteger startHour;
/// Start time - minute
@property (nonatomic) NSInteger startMinute;
/// End time - hour
@property (nonatomic) NSInteger endHour;
/// End time - minute
@property (nonatomic) NSInteger endMinute;
/// Stress reminder switch 1: On 0: Off
/// Doesn’t work if on_off is off
@property (nonatomic) NSInteger remindOnOff;
/// Reminder interval in minutes, default is 60 minutes
@property (nonatomic) NSInteger interval;
/// High pressure threshold
@property (nonatomic) NSInteger highThreshold;
/// Pressure calibration threshold, default is 80
/// Requires firmware support for setSendCalibrationThreshold
@property (nonatomic) NSInteger stressThreshold;
/// Notification type
/// 0: Invalid
/// 1: Allow notification
/// 2: Silent notification
/// 3: Disable notification
/// Requires firmware support for getPressureNotifyFlagMode
@property (nonatomic) NSInteger notifyFlag;
/// Repeat
@property (nonatomic, copy) NSArray<IDOWeekObjc *> * _Nonnull repeats;
- (nonnull instancetype)initOnOff:(NSInteger)onOff startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute endHour:(NSInteger)endHour endMinute:(NSInteger)endMinute remindOnOff:(NSInteger)remindOnOff interval:(NSInteger)interval highThreshold:(NSInteger)highThreshold stressThreshold:(NSInteger)stressThreshold notifyFlag:(NSInteger)notifyFlag repeats:(NSArray<IDOWeekObjc *> * _Nonnull)repeats OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Get stress value event number
SWIFT_CLASS("_TtC16protocol_channel17IDOStressValModel")
@interface IDOStressValModel : NSObject
/// Stress value
@property (nonatomic) NSInteger stressVal;
/// Threshold
@property (nonatomic) NSInteger threshold;
- (nonnull instancetype)initWithStressVal:(NSInteger)stressVal threshold:(NSInteger)threshold OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel14IDOSunriseItem")
@interface IDOSunriseItem : NSObject
@property (nonatomic) NSInteger sunriseHour;
@property (nonatomic) NSInteger sunriseMin;
@property (nonatomic) NSInteger sunsetHour;
@property (nonatomic) NSInteger sunsetMin;
- (nonnull instancetype)initWithSunriseHour:(NSInteger)sunriseHour sunriseMin:(NSInteger)sunriseMin sunsetHour:(NSInteger)sunsetHour sunsetMin:(NSInteger)sunsetMin OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Get maximum number of settings supported by firmware event number
SWIFT_CLASS("_TtC16protocol_channel29IDOSupportMaxSetItemsNumModel")
@interface IDOSupportMaxSetItemsNumModel : NSObject
/// Maximum number of frequently contacted persons that firmware supports for app to set (default is 10)
@property (nonatomic) NSInteger contactMaxSetNum;
/// Maximum number of schedule reminders that firmware supports for app to set(default is 30)
@property (nonatomic) NSInteger reminderMaxSetNum;
/// Maximum sending buffer size of message reminders (default is 250 bytes)
@property (nonatomic) NSInteger msgMaxBuffSize;
- (nonnull instancetype)initWithContactMaxSetNum:(NSInteger)contactMaxSetNum reminderMaxSetNum:(NSInteger)reminderMaxSetNum msgMaxBuffSize:(NSInteger)msgMaxBuffSize OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel19IDOSyncContactModel")
@interface IDOSyncContactModel : NSObject
/// Error code, 0 for success, non-zero for error code
@property (nonatomic) NSInteger errCode;
/// Operation
/// 0: invalid
/// 1: set
/// 2: query
/// 3: set emergency contacts (requires support for <code>getSupportSetGetEmergencyContactV3</code> in the menu)
/// 4: query emergency contacts (requires support for <code>getSupportSetGetEmergencyContactV3</code> in the menu)
@property (nonatomic) NSInteger operat;
@property (nonatomic, copy) NSArray<IDOContactItem *> * _Nullable items;
- (nonnull instancetype)initWithErrCode:(NSInteger)errCode operat:(NSInteger)operat items:(NSArray<IDOContactItem *> * _Nullable)items OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel24IDOSyncContactParamModel")
@interface IDOSyncContactParamModel : NSObject
/// Operation
/// 0: invalid
/// 1: set contacts
/// 2: query contacts
/// 3: set emergency contacts (requires support for <code>getSupportSetGetEmergencyContactV3</code> in the menu)
/// 4: query emergency contacts (requires support for <code>getSupportSetGetEmergencyContactV3</code> in the menu)
@property (nonatomic) NSInteger operat;
@property (nonatomic, copy) NSArray<IDOContactItem *> * _Nonnull items;
- (nonnull instancetype)initWithOperat:(NSInteger)operat items:(NSArray<IDOContactItem *> * _Nonnull)items OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum IDOSyncStatus : NSInteger;
enum IDOSyncDataType : NSInteger;
@class IDOSyncDataTypeClass;

/// 数据同步
SWIFT_PROTOCOL("_TtP16protocol_channel20IDOSyncDataInterface_")
@protocol IDOSyncDataInterface
/// 同步状态
@property (nonatomic, readonly) enum IDOSyncStatus syncStatus;
/// 开始同步所有数据
- (void)startSyncWithFuncProgress:(void (^ _Nonnull)(double))funcProgress funcData:(void (^ _Nonnull)(enum IDOSyncDataType, NSString * _Nonnull, NSInteger))funcData funcCompleted:(void (^ _Nonnull)(NSInteger))funcCompleted;
/// 同步指定数据（无进度且不支持的类型不会回调）
- (void)startSyncWithTypes:(NSArray<IDOSyncDataTypeClass *> * _Nonnull)types funcData:(void (^ _Nonnull)(enum IDOSyncDataType, NSString * _Nonnull, NSInteger))funcData funcCompleted:(void (^ _Nonnull)(NSInteger))funcCompleted;
/// 获取支持的同步数据类型
- (void)getSupportSyncDataTypeListWithCompletion:(void (^ _Nonnull)(NSArray<IDOSyncDataTypeClass *> * _Nonnull))completion;
/// 停止同步所有数据
- (void)stopSync;
@end

/// 同步数据类型
typedef SWIFT_ENUM(NSInteger, IDOSyncDataType, open) {
  IDOSyncDataTypeNullType = 0,
/// 步数
  IDOSyncDataTypeStepCount = 1,
/// 心率
  IDOSyncDataTypeHeartRate = 2,
/// 睡眠
  IDOSyncDataTypeSleep = 3,
/// 血压
  IDOSyncDataTypeBloodPressure = 4,
/// 血氧
  IDOSyncDataTypeBloodOxygen = 5,
/// 压力
  IDOSyncDataTypePressure = 6,
/// 噪音
  IDOSyncDataTypeNoise = 7,
/// 皮温
  IDOSyncDataTypePiven = 8,
/// 呼吸率
  IDOSyncDataTypeRespirationRate = 9,
/// 身体电量
  IDOSyncDataTypeBodyPower = 10,
/// HRV
  IDOSyncDataTypeHRV = 11,
/// 多运动
  IDOSyncDataTypeActivity = 12,
/// GPS
  IDOSyncDataTypeGPS = 13,
/// 游泳
  IDOSyncDataTypeSwim = 14,
/// V2步数（旧）
  IDOSyncDataTypeV2StepCount = 15,
/// V2睡眠（旧）
  IDOSyncDataTypeV2Sleep = 16,
/// V2心率（旧）
  IDOSyncDataTypeV2HeartRate = 17,
/// V2血压（旧）
  IDOSyncDataTypeV2BloodPressure = 18,
/// V2 GPS
  IDOSyncDataTypeV2GPS = 19,
/// V2多运动
  IDOSyncDataTypeV2Activity = 20,
};


SWIFT_CLASS("_TtC16protocol_channel20IDOSyncDataTypeClass")
@interface IDOSyncDataTypeClass : NSObject
- (nonnull instancetype)initWithType:(enum IDOSyncDataType)type OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// 状态
typedef SWIFT_ENUM(NSInteger, IDOSyncStatus, open) {
  IDOSyncStatusInit = 0,
/// 初始化
  IDOSyncStatusSyncing = 1,
/// 同步中
  IDOSyncStatusFinished = 2,
/// 同步完成
  IDOSyncStatusCanceled = 3,
/// 同步取消
  IDOSyncStatusStopped = 4,
/// 同步停止
  IDOSyncStatusTimeout = 5,
/// 同步超时
  IDOSyncStatusError = 6,
};


/// Set Taking Medicine Reminder Event Code
SWIFT_CLASS("_TtC16protocol_channel35IDOTakingMedicineReminderParamModel")
@interface IDOTakingMedicineReminderParamModel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Set Taking Medicine Reminder Event Code
SWIFT_CLASS("_TtC16protocol_channel39IDOTakingMedicineReminderParamModelObjc")
@interface IDOTakingMedicineReminderParamModelObjc : NSObject
/// ID ranging from 1 to 5
@property (nonatomic) NSInteger takingMedicineId;
/// 0 for off
/// 1 for on
@property (nonatomic) NSInteger onOff;
/// Starting hour of the reminder
@property (nonatomic) NSInteger startHour;
/// Starting minute of the reminder
@property (nonatomic) NSInteger startMinute;
/// Ending hour of the reminder
@property (nonatomic) NSInteger endHour;
/// Ending minute of the reminder
@property (nonatomic) NSInteger endMinute;
/// Repeat
@property (nonatomic, copy) NSArray<IDOWeekObjc *> * _Nonnull repeats;
/// Reminder interval in minutes
/// Default is 60 minutes
@property (nonatomic) NSInteger interval;
/// Do not disturb time period switch
/// 0 for off
/// 1 for on
/// Default is off
@property (nonatomic) NSInteger doNotDisturbOnOff;
/// Do not disturb start hour
@property (nonatomic) NSInteger doNotDisturbStartHour;
/// Do not disturb start minute
@property (nonatomic) NSInteger doNotDisturbStartMinute;
/// Do not disturb end hour
@property (nonatomic) NSInteger doNotDisturbEndHour;
/// Do not disturb end minute
@property (nonatomic) NSInteger doNotDisturbEndMinute;
- (nonnull instancetype)initWithTakingMedicineId:(NSInteger)takingMedicineId onOff:(NSInteger)onOff startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute endHour:(NSInteger)endHour endMinute:(NSInteger)endMinute repeats:(NSArray<IDOWeekObjc *> * _Nonnull)repeats interval:(NSInteger)interval doNotDisturbOnOff:(NSInteger)doNotDisturbOnOff doNotDisturbStartHour:(NSInteger)doNotDisturbStartHour doNotDisturbStartMinute:(NSInteger)doNotDisturbStartMinute doNotDisturbEndHour:(NSInteger)doNotDisturbEndHour doNotDisturbEndMinute:(NSInteger)doNotDisturbEndMinute OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Set Night-time Temperature Switch Event Code
SWIFT_CLASS("_TtC16protocol_channel30IDOTemperatureSwitchParamModel")
@interface IDOTemperatureSwitchParamModel : NSObject
/// Mode:
/// 1: On
/// 0: Off
@property (nonatomic) NSInteger mode;
/// Start time, hour
@property (nonatomic) NSInteger startHour;
/// Start time, minute
@property (nonatomic) NSInteger startMinute;
/// End time, hour
@property (nonatomic) NSInteger endHour;
/// End time, minute
@property (nonatomic) NSInteger endMinute;
/// Temperature unit setting:
/// 1 :Celsius
/// 2 :Fahrenheit
@property (nonatomic) NSInteger unit;
- (nonnull instancetype)initWithMode:(NSInteger)mode startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute endHour:(NSInteger)endHour endMinute:(NSInteger)endMinute unit:(NSInteger)unit OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// 工具、缓存
SWIFT_PROTOCOL("_TtP16protocol_channel17IDOToolsInterface_")
@protocol IDOToolsInterface
/// 图片转换格式 png->bmp
/// \param inPath 用于转换的png路径(包含文件名及后缀)
///
/// \param outPath 转换完的bmp路径(包含文件名及后缀)
///
/// \param format 转换成bmp的文件格式
///
- (void)png2BmpInPath:(NSString * _Nonnull)inPath outPath:(NSString * _Nonnull)outPath format:(NSInteger)format completion:(void (^ _Nonnull)(BOOL))completion;
/// 压缩png图片质量
/// \param inputFilePath 输入文件路径
///
/// \param outputFilePath 输出文件路径
///
- (void)compressToPNGWithInputFilePath:(NSString * _Nonnull)inputFilePath outputFilePath:(NSString * _Nonnull)outputFilePath completion:(void (^ _Nonnull)(BOOL))completion;
/// 创建EPO.DAT文件
/// \param dirPath 存放要制作epo文件的目录
///
/// \param epoFilePath 制作的epo文件存放路径
///
- (void)makeEpoFileWithDirPath:(NSString * _Nonnull)dirPath epoFilePath:(NSString * _Nonnull)epoFilePath completion:(void (^ _Nonnull)(BOOL))completion;
/// gps运动后优化轨迹,根据运动类型初始化速度阈值，若输入其他运动类型，会导致无运动轨迹
/// \param motionTypeIn 运动类型
/// 1、户外走路 = 52, 走路 = 1, 徒步 = 4, 运动类型设为0
/// 2、户外跑步 = 48, 跑步 = 2, 运动类型设为1
/// 3、户外骑行 = 50, 骑行 = 3, 运动型性设为2
///
/// \param completion 
///
- (void)gpsInitTypeWithMotionTypeIn:(NSInteger)motionTypeIn completion:(void (^ _Nonnull)(BOOL))completion;
/// gps数据实时处理入口,需要对输出的数据进行判断，若纬度为-180则为错误值，不应该输出
/// \param json { lon,经度,数据类型double
/// lat,纬度,数据类型double
/// timestamp,时间戳,数据类型int
/// accuracy,定位精度,数据类型double
/// gpsaccuracystatus,定位等级，0 = 定位未知, 1 = 定位好, 2 = 定位差,数据类型int }
///
/// \param completion 
///
- (void)gpsAlgProcessRealtimeWithJson:(NSString * _Nonnull)json completion:(void (^ _Nonnull)(NSString * _Nonnull))completion;
/// 平滑数据
/// \param json {lat,纬度数组,长度为len,数据类型double
/// lon,经度数组,长度为len,数据类型double len,数据长度}
///
/// \param completion 结果保存在数组lat和lon中
///
- (void)gpsSmoothDataWithJson:(NSString * _Nonnull)json completion:(void (^ _Nonnull)(NSString * _Nonnull))completion;
/// 获取log根路径
- (void)logPathWithCompletion:(void (^ _Nonnull)(NSString * _Nonnull))completion;
/// 获取当前设备缓存根路径
- (void)currentDevicePathWithCompletion:(void (^ _Nonnull)(NSString * _Nonnull))completion;
/// 导出日志 返回压缩后日志zip文件绝对路径
- (void)exportLogWithCompletion:(void (^ _Nonnull)(NSString * _Nonnull))completion;
/// 获取最后连接的设备(json)
- (void)lastConnectDeviceWithCompletion:(void (^ _Nonnull)(NSString * _Nullable))completion;
/// 获取连接过的设备列表(List[json])
- (void)loadDeviceExtListByDiskWithSortDesc:(BOOL)sortDesc completion:(void (^ _Nonnull)(NSArray<NSString *> * _Nonnull))completion;
@end

enum IDOTransType : NSInteger;

SWIFT_CLASS("_TtC16protocol_channel17IDOTransBaseModel")
@interface IDOTransBaseModel : NSObject
/// 文件类型
@property (nonatomic, readonly) enum IDOTransType fileType;
/// 文件绝对地址
@property (nonatomic, readonly, copy) NSString * _Nonnull filePath;
/// 文件名
@property (nonatomic, readonly, copy) NSString * _Nonnull fileName;
/// 文件大小
@property (nonatomic) NSInteger fileSize;
- (nonnull instancetype)initWithFileType:(enum IDOTransType)fileType filePath:(NSString * _Nonnull)filePath fileName:(NSString * _Nonnull)fileName fileSize:(NSInteger)fileSize OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// 消息图标
SWIFT_CLASS("_TtC16protocol_channel20IDOTransMessageModel")
@interface IDOTransMessageModel : IDOTransBaseModel
/// 事件类型
/// 参考 通消息通知
/// \code
/// 0x01：短信
/// 0x02：邮件
/// 0x03：微信
/// 0x04：QQ
/// 0x05：新浪微博
/// 0x06：facebook
/// 0x07：twitter
/// 0x08：WhatsApp
/// 0x09：Messenger
/// 0x0A：Instagram
/// 0x0B：Linked in
/// 0x0C：日历
/// 0x0D：skype；
/// 0x0E：闹钟
/// 0x0F：pokeman
/// 0x10：VKontakte
/// 0x11：Line
/// 0x12：Viber
/// 0x13：KakaoTalk
/// 0x14：Gmail
/// 0x15：Outlook,
/// 0x16：Snapchat
/// 0x17：TELEGRAM
/// 0x18：other
/// 0x20：chatwork
/// 0x21：slack
/// 0x22：Yahoo Mail
/// 0x23：Tumblr,
/// 0x24：Youtube
/// 0x25：Yahoo Pinterest
/// 0x26：TikTok
/// 0x27：Redbus
/// 0x28：Dailyhunt
/// 0x29：Hotstar
/// 0x2A：Inshorts
/// 0x2B：Paytm
/// 0x2C：Amazon
/// 0x2D：Flipkart
/// 0x2E：Prime
/// 0x2F：Netflix
/// 0x30：Gpay
/// 0x31：Phonpe
/// 0x32：Swiggy
/// 0x33：Zomato
/// 0x34：Make My trip
/// 0x35：Jio Tv
/// 0x36：keep
/// 0x37：Microsoft
/// 0x38：WhatsApp Business
/// 0x39：niosefit
/// 0x3A：missed_calls未接来电
/// 0x3B：Gpap
/// 0x3C：YTmusic
/// 0x3D：Uber
/// 0x3E：Ola
/// 0x3F：事项提醒
/// 0x40：Google meet
///
/// \endcode
@property (nonatomic, readonly) NSInteger evtType;
/// 应用包名
@property (nonatomic, readonly, copy) NSString * _Nonnull packName;
- (nonnull instancetype)initWithFilePath:(NSString * _Nonnull)filePath fileName:(NSString * _Nonnull)fileName fileSize:(NSInteger)fileSize evtType:(NSInteger)evtType packName:(NSString * _Nonnull)packName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFileType:(enum IDOTransType)fileType filePath:(NSString * _Nonnull)filePath fileName:(NSString * _Nonnull)fileName fileSize:(NSInteger)fileSize SWIFT_UNAVAILABLE;
@end


/// 音乐
SWIFT_CLASS("_TtC16protocol_channel18IDOTransMusicModel")
@interface IDOTransMusicModel : IDOTransBaseModel
/// 音乐id
@property (nonatomic, readonly) NSInteger musicId;
/// 歌手名
@property (nonatomic, readonly, copy) NSString * _Nullable singerName;
/// 使用SPP传输
@property (nonatomic, readonly) BOOL useSpp;
- (nonnull instancetype)initWithFilePath:(NSString * _Null_unspecified)filePath fileName:(NSString * _Nonnull)fileName fileSize:(NSInteger)fileSize musicId:(NSInteger)musicId singerName:(NSString * _Nullable)singerName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFileType:(enum IDOTransType)fileType filePath:(NSString * _Nonnull)filePath fileName:(NSString * _Nonnull)fileName fileSize:(NSInteger)fileSize SWIFT_UNAVAILABLE;
@end


/// 普通文件
/// 根据FileTransType区分
/// 注：以下类型需使用相应的分类：
/// <ul>
///   <li>
///     消息图标 - 使用 IDOTransMessageModel类
///   </li>
///   <li>
///     音乐 - 使用 IDOTransMusicModel
///   </li>
///   <li>
///     运动图标 - 使用 IDOTransSportModel
///   </li>
/// </ul>
SWIFT_CLASS("_TtC16protocol_channel19IDOTransNormalModel")
@interface IDOTransNormalModel : IDOTransBaseModel
- (nonnull instancetype)initWithFileType:(enum IDOTransType)fileType filePath:(NSString * _Nonnull)filePath fileName:(NSString * _Nonnull)fileName fileSize:(NSInteger)fileSize OBJC_DESIGNATED_INITIALIZER;
@end


/// 运动图标
SWIFT_CLASS("_TtC16protocol_channel18IDOTransSportModel")
@interface IDOTransSportModel : IDOTransBaseModel
/// 运动模式
/// \code
///  以前运动类型:
///  0:无，1:走路，2:跑步，3:骑行，4:徒步，5:游泳，6:爬山，7:羽毛球，8:其他，
///  9:健身，10:动感单车，11:椭圆机，12:跑步机，13:仰卧起坐，14:俯卧撑，15:哑铃，16:举重，
///  17:健身操，18:瑜伽，19:跳绳，20:乒乓球，21:篮球，22:足球 ，23:排球，24:网球，
///  25:高尔夫球，26:棒球，27:滑雪，28:轮滑，29:跳舞，31：室内划船/roller machine， 32：普拉提/pilates， 33:交叉训练/cross train,
///  34:有氧运动/cardio，35：尊巴舞/Zumba, 36:广场舞/square dance, 37:平板支撑/Plank, 38:健身房/gym 48:户外跑步，49:室内跑步，
///  50:户外骑行，51:室内骑行，52:户外走路，53:室内走路，54:泳池游泳，55:开放水域游泳，56:椭圆机，57:划船机，58:高强度间歇训练法，75:板球运动
///  基础运动：
///  101：功能性力量训练，102：核心训练，103：踏步机，104：整理放松
///  健身（25种）
///  110：传统力量训练，112：引体向上，114：开合跳，115：深蹲，116：高抬腿，117：拳击，118：杠铃，119：武术，
///  120：太极，121：跆拳道，122：空手道，123：自由搏击，124：击剑，125：射箭，126：体操，127:单杠，128:双杠,129:漫步机,
///  130:登山机
///  球类:
///  131:保龄球,132:台球,133:曲棍球,134:橄榄球,135:壁球,136:垒球,137:手球,138:毽球,139:沙滩足球,
///  140:藤球,141:躲避球
///  休闲运动
///  152:街舞,153:芭蕾,154:社交舞,155:飞盘,156:飞镖,157:骑马,158:爬楼,159:放风筝,
///  160:钓鱼
///  冰雪运动
///  161:雪橇,162:雪车,163:单板滑雪,164:雪上运动,165:高山滑雪,166:越野滑雪,167:冰壶,168:冰球,169:冬季两项
///  水上运动（10种）
///  170:冲浪,171:帆船,172:帆板,173:皮艇,174:摩托艇,175:划艇,176:赛艇,177:龙舟,178:水球,179:漂流,
///  极限运动（5种）
///  180:滑板,181:攀岩,182:蹦极,183:跑酷,184:BMX,
///  kr01定制项目
///  193:Outdoor Fun（户外玩耍）, 194:Other Activity（其他运动）
///
/// \endcode
@property (nonatomic, readonly) NSInteger sportType;
/// 图标类型 1:单张小运动图片 2:单张大运动图片 3:多运动动画图片 4:单张中运动图片 5:运动最小图标
@property (nonatomic, readonly) NSInteger iconType;
/// 运动图标 - 动画
@property (nonatomic, readonly) BOOL isSports;
- (nonnull instancetype)initWithFilePath:(NSString * _Nonnull)filePath fileName:(NSString * _Nonnull)fileName fileSize:(NSInteger)fileSize sportType:(NSInteger)sportType iconType:(NSInteger)iconType isSports:(BOOL)isSports OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFileType:(enum IDOTransType)fileType filePath:(NSString * _Nonnull)filePath fileName:(NSString * _Nonnull)fileName fileSize:(NSInteger)fileSize SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, IDOTransStatus, open) {
  IDOTransStatusNone = 0,
/// 无效类型
  IDOTransStatusInvalid = 1,
/// 文件不存在
  IDOTransStatusNotExists = 2,
/// 存在传输任务
  IDOTransStatusBusy = 3,
/// 配置
  IDOTransStatusConfig = 4,
/// 传输前操作
  IDOTransStatusBeforeOpt = 5,
/// 传输中
  IDOTransStatusTrans = 6,
/// 传输完成
  IDOTransStatusFinished = 7,
/// 快速配置中，不支持文件传输
  IDOTransStatusOnFastSynchronizing = 8,
/// 传输失败
  IDOTransStatusError = 9,
};

/// 传输文件类型
typedef SWIFT_ENUM(NSInteger, IDOTransType, open) {
/// 固件升级
  IDOTransTypeFw = 0,
/// 图片资源升级
  IDOTransTypeFzbin = 1,
/// 字库、ota等bin文件升级
  IDOTransTypeBin = 2,
/// 语言包升级
  IDOTransTypeLang = 3,
/// BT升级
  IDOTransTypeBt = 4,
/// 表盘
  IDOTransTypeIwfLz = 5,
/// 表盘 思澈
  IDOTransTypeWatch = 6,
/// 壁纸表盘
  IDOTransTypeWallpaperZ = 7,
/// 通讯录文件
  IDOTransTypeMl = 8,
/// agps 在线
  IDOTransTypeOnlineUbx = 9,
/// agps 线下
  IDOTransTypeOfflineUbx = 10,
/// 音乐（请使用 IDOTransMusicModel）
  IDOTransTypeMp3 = 11,
/// 消息图标 （请使用 IDOTransMessageModel）
  IDOTransTypeMsg = 12,
/// 运动图标 - 单个（请使用IDOTransSportModel）
  IDOTransTypeSport = 13,
/// 运动图标 - 动画（请使用IDOTransSportModel）
  IDOTransTypeSports = 14,
/// epo升级
  IDOTransTypeEpo = 15,
/// gps
  IDOTransTypeGps = 16,
  IDOTransTypeBpbin = 17,
/// alexa 语音
  IDOTransTypeVoice = 18,
/// 提示音
  IDOTransTypeTon = 19,
};


SWIFT_CLASS("_TtC16protocol_channel17IDOTransTypeClass")
@interface IDOTransTypeClass : NSObject
- (nonnull instancetype)initWithType:(enum IDOTransType)type OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Get non-deletable menu list in firmware event number
SWIFT_CLASS("_TtC16protocol_channel26IDOUnerasableMeunListModel")
@interface IDOUnerasableMeunListModel : NSObject
/// List of applications that cannot be deleted
/// \code
/// 0 invalid
/// 1 step
/// 2 Heart rate
/// 3 Sleep
/// 4 Take Pictures
/// 5 Alarm Clock
/// 6 Music
/// 7 stopwatch
/// 8 Timer
/// 9 Exercise mode
/// 10 Weather
/// 11 Breathing Exercises
/// 12 Finding your Phone
/// 13 pressure
/// 14 Data three rings
/// 15 time interface
/// 16 Last activity
/// 17 Health Data
/// 18 blood oxygen
/// 19 Menu Settings
/// 20 (20)aleax Voices are displayed in sequence
/// 21 X screen (New on gt01pro-X)
/// 22 calories (added by Doro Watch)
/// 23 distance (added by Doro Watch)
/// 24 One-touch measurement (Added in IDW05)
/// 25 renpho health(Added in IDW12)
/// 26 Compass (new on mp01)
/// 27 Barometric altimeter (new on mp01)
///
/// \endcode
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull itemList;
- (nonnull instancetype)initWithItemList:(NSArray<NSNumber *> * _Nonnull)itemList OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel12IDOUnitModel")
@interface IDOUnitModel : NSObject
/// Distance Unit:
/// 0: Invalid
/// 1: km (metric)
/// 2: mi (imperial)
@property (nonatomic) NSInteger distUnit;
/// Temperature Unit:
/// 0: Invalid<br/>1: ℃
/// 2: ℉
@property (nonatomic) NSInteger temp;
/// Language
/// | 代码 | 语言         | 功能表                      |
/// | –– | ———— | ————————— |
/// | -1   | 无效         | -                           |
/// | 1    | 中文         | languageCh                  |
/// | 2    | 英文         | languageEnglish             |
/// | 3    | 法语         | languageFrench              |
/// | 4    | 德语         | languageGerman              |
/// | 5    | 意大利语     | languageItalian             |
/// | 6    | 西班牙语     | languageSpanish             |
/// | 7    | 日语         | languageJapanese            |
/// | 8    | 波兰语       | languagePolish              |
/// | 9    | 捷克语       | languageCzech               |
/// | 10   | 罗马尼亚     | languageRomanian            |
/// | 11   | 立陶宛语     | languageLithuanian          |
/// | 12   | 荷兰语       | languageDutch               |
/// | 13   | 斯洛文尼亚语 | languageSlovenian           |
/// | 14   | 匈牙利语     | languageHungarian           |
/// | 15   | 俄罗斯语     | languageRussian             |
/// | 16   | 乌克兰语     | languageUkrainian           |
/// | 17   | 斯洛伐克语   | languageSlovak              |
/// | 18   | 丹麦语       | languageDanish              |
/// | 19   | 克罗地亚语   | languageCroatian            |
/// | 20   | 印尼语       | languageIndonesian          |
/// | 21   | 韩语         | languageKorean              |
/// | 22   | 印地语       | languageHindi               |
/// | 23   | 葡萄牙语     | languagePortuguese          |
/// | 24   | 土耳其语     | languageTurkish             |
/// | 25   | 泰国语       | languageThai                |
/// | 26   | 越南语       | languageVietnamese          |
/// | 27   | 缅甸语       | languageBurmese             |
/// | 28   | 菲律宾语     | languageFilipino            |
/// | 29   | 繁体中文     | languageTraditionalChinese  |
/// | 30   | 希腊语       | languageGreek               |
/// | 31   | 阿拉伯语     | languageArabic              |
/// | 32   | 瑞典语       | languageSweden              |
/// | 33   | 芬兰语       | languageFinland             |
/// | 34   | 波斯语       | languagePersia              |
/// | 35   | 挪威语       | languageNorwegian           |
/// | 36   | 马来语       | languageMalay               |
/// | 37   | 巴西葡语     | languageBrazilianPortuguese |
/// | 38   | 孟加拉语     | languageBengali             |
/// | 39   | 高棉语       | languageKhmer               |
@property (nonatomic) NSInteger language;
/// Swim pool unit setting:
/// 0: Invalid
/// 1: Default meters
/// 2: yards
@property (nonatomic) NSInteger swimPoolUnit;
- (nonnull instancetype)initWithDistUnit:(NSInteger)distUnit temp:(NSInteger)temp language:(NSInteger)language swimPoolUnit:(NSInteger)swimPoolUnit OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Set Unit event number
SWIFT_CLASS("_TtC16protocol_channel17IDOUnitParamModel")
@interface IDOUnitParamModel : NSObject
/// Distance Unit:
/// 0: Invalid
/// 1: km (metric)
/// 2: mi (imperial)
@property (nonatomic) NSInteger distUnit;
/// Weight Unit:
/// 0: Invalid
/// 1: kg
/// 2: lb
@property (nonatomic) NSInteger weightUnit;
/// Temperature Unit:
/// 0: Invalid<br/>1: ℃
/// 2: ℉
@property (nonatomic) NSInteger temp;
/// Walking Stride:
/// 0: Invalid
/// 0: cm
@property (nonatomic) NSInteger stride;
/// Language
/// | 代码 | 语言         | 功能表                      |
/// | –– | ———— | ————————— |
/// | -1   | 无效         | -                           |
/// | 1    | 中文         | languageCh                  |
/// | 2    | 英文         | languageEnglish             |
/// | 3    | 法语         | languageFrench              |
/// | 4    | 德语         | languageGerman              |
/// | 5    | 意大利语     | languageItalian             |
/// | 6    | 西班牙语     | languageSpanish             |
/// | 7    | 日语         | languageJapanese            |
/// | 8    | 波兰语       | languagePolish              |
/// | 9    | 捷克语       | languageCzech               |
/// | 10   | 罗马尼亚     | languageRomanian            |
/// | 11   | 立陶宛语     | languageLithuanian          |
/// | 12   | 荷兰语       | languageDutch               |
/// | 13   | 斯洛文尼亚语 | languageSlovenian           |
/// | 14   | 匈牙利语     | languageHungarian           |
/// | 15   | 俄罗斯语     | languageRussian             |
/// | 16   | 乌克兰语     | languageUkrainian           |
/// | 17   | 斯洛伐克语   | languageSlovak              |
/// | 18   | 丹麦语       | languageDanish              |
/// | 19   | 克罗地亚语   | languageCroatian            |
/// | 20   | 印尼语       | languageIndonesian          |
/// | 21   | 韩语         | languageKorean              |
/// | 22   | 印地语       | languageHindi               |
/// | 23   | 葡萄牙语     | languagePortuguese          |
/// | 24   | 土耳其语     | languageTurkish             |
/// | 25   | 泰国语       | languageThai                |
/// | 26   | 越南语       | languageVietnamese          |
/// | 27   | 缅甸语       | languageBurmese             |
/// | 28   | 菲律宾语     | languageFilipino            |
/// | 29   | 繁体中文     | languageTraditionalChinese  |
/// | 30   | 希腊语       | languageGreek               |
/// | 31   | 阿拉伯语     | languageArabic              |
/// | 32   | 瑞典语       | languageSweden              |
/// | 33   | 芬兰语       | languageFinland             |
/// | 34   | 波斯语       | languagePersia              |
/// | 35   | 挪威语       | languageNorwegian           |
/// | 36   | 马来语       | languageMalay               |
/// | 37   | 巴西葡语     | languageBrazilianPortuguese |
/// | 38   | 孟加拉语     | languageBengali             |
/// | 39   | 高棉语       | languageKhmer               |
@property (nonatomic) NSInteger language;
/// Time Format:
/// 0: Invalid<br/>1: 24-hour format
/// 2: 12-hour format
@property (nonatomic) NSInteger is12HourFormat;
/// Running Stride:
/// 0: Invalid
/// 1: cm
/// Default value for males: 90cm
@property (nonatomic) NSInteger strideRun;
/// Stride Calibration via GPS on/off:<br/>0: Invalid
/// 1: On
/// 2: Off
@property (nonatomic) NSInteger strideGpsCal;
/// Start day of the week:
/// 0: Monday
/// 1: Sunday
/// 3: Saturday
@property (nonatomic) NSInteger weekStartDate;
/// Calorie unit setting:
/// 0: Invalid
/// 1: Default kCal
/// 2: Cal
/// 3: kJ
@property (nonatomic) NSInteger calorieUnit;
/// Swim pool unit setting:
/// 0: Invalid
/// 1: Default meters
/// 2: yards
@property (nonatomic) NSInteger swimPoolUnit;
/// Cycling unit:
/// 0: Invalid
/// 1: km
/// 2: miles
@property (nonatomic) NSInteger cyclingUnit;
/// Unit for walking or running (km/miles) setting:<br/>0: Invalid
/// 1: km
/// 2: miles
/// Requires support from the device firmware <code>setSupportWalkRunUnit</code>
@property (nonatomic) NSInteger walkingRunningUnit;
- (nonnull instancetype)initWithDistUnit:(NSInteger)distUnit weightUnit:(NSInteger)weightUnit temp:(NSInteger)temp stride:(NSInteger)stride language:(NSInteger)language is12HourFormat:(NSInteger)is12HourFormat strideRun:(NSInteger)strideRun strideGpsCal:(NSInteger)strideGpsCal weekStartDate:(NSInteger)weekStartDate calorieUnit:(NSInteger)calorieUnit swimPoolUnit:(NSInteger)swimPoolUnit cyclingUnit:(NSInteger)cyclingUnit walkingRunningUnit:(NSInteger)walkingRunningUnit OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Raise-to-wake gesture event number
SWIFT_CLASS("_TtC16protocol_channel21IDOUpHandGestureModel")
@interface IDOUpHandGestureModel : NSObject
/// End time, hour
@property (nonatomic) NSInteger endHour;
/// End time, minute
@property (nonatomic) NSInteger endMinute;
/// Whether time range is available 1: Yes 0: No
@property (nonatomic) NSInteger hasTimeRange;
/// Switch 1: On 0: Off -1:Not Support
@property (nonatomic) NSInteger onOff;
/// Screen on duration in seconds
@property (nonatomic) NSInteger showSecond;
/// Start time, hour
@property (nonatomic) NSInteger startHour;
/// Start time, minute
@property (nonatomic) NSInteger startMinute;
- (nonnull instancetype)initWithEndHour:(NSInteger)endHour endMinute:(NSInteger)endMinute hasTimeRange:(NSInteger)hasTimeRange onOff:(NSInteger)onOff showSecond:(NSInteger)showSecond startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Raise-to-wake gesture event number
SWIFT_CLASS("_TtC16protocol_channel26IDOUpHandGestureParamModel")
@interface IDOUpHandGestureParamModel : NSObject
/// Switch
/// 1: On
/// 0: Off
@property (nonatomic) NSInteger onOff;
/// Duration for the screen to stay on, in seconds
@property (nonatomic) NSInteger showSecond;
/// Whether there is a time range
/// 1: Yes
/// 0: No
@property (nonatomic) NSInteger hasTimeRange;
/// Starting hour of the time range
@property (nonatomic) NSInteger startHour;
/// Starting minute of the time range
@property (nonatomic) NSInteger startMinute;
/// Ending hour of the time range
@property (nonatomic) NSInteger endHour;
/// Ending minute of the time range
@property (nonatomic) NSInteger endMinute;
- (nonnull instancetype)initOnOff:(NSInteger)onOff showSecond:(NSInteger)showSecond hasTimeRange:(NSInteger)hasTimeRange startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute endHour:(NSInteger)endHour endMinute:(NSInteger)endMinute OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Get device update status event number
SWIFT_CLASS("_TtC16protocol_channel20IDOUpdateStatusModel")
@interface IDOUpdateStatusModel : NSObject
/// Firmware version number
@property (nonatomic) NSInteger devVesion;
/// 0 for normal state
/// 1 for upgrade state
@property (nonatomic) NSInteger state;
- (nonnull instancetype)initWithDevVesion:(NSInteger)devVesion state:(NSInteger)state OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel20IDOUserInfoPramModel")
@interface IDOUserInfoPramModel : NSObject
@property (nonatomic) NSInteger year;
@property (nonatomic) NSInteger monuth;
@property (nonatomic) NSInteger day;
/// 身高 单位厘米
/// Height in centimeters
@property (nonatomic) NSInteger heigh;
/// 体重 单位千克 值需要x100
/// Weight in kilograms Value needs x100
@property (nonatomic) NSInteger weigh;
/// 性别 1：女  0：男
/// Gender 1: Female 0: Male
@property (nonatomic) NSInteger gender;
- (nonnull instancetype)initWithYear:(NSInteger)year monuth:(NSInteger)monuth day:(NSInteger)day heigh:(NSInteger)heigh weigh:(NSInteger)weigh gender:(NSInteger)gender OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Set Environmental Noise Volume On/Off and Threshold Event
SWIFT_CLASS("_TtC16protocol_channel20IDOV3NoiseParamModel")
@interface IDOV3NoiseParamModel : NSObject
/// All-day environmental noise volume switch
/// 1: On
/// 0: Off
@property (nonatomic) NSInteger mode;
/// Start time (hour)
@property (nonatomic) NSInteger startHour;
/// Start time (minute)
@property (nonatomic) NSInteger startMinute;
/// End time (hour)
@property (nonatomic) NSInteger endHour;
/// End time (minute)
@property (nonatomic) NSInteger endMinute;
/// Threshold switch
/// 1: On
/// 0: Off
@property (nonatomic) NSInteger highNoiseOnOff;
/// Threshold value
@property (nonatomic) NSInteger highNoiseValue;
- (nonnull instancetype)initWithMode:(NSInteger)mode startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute endHour:(NSInteger)endHour endMinute:(NSInteger)endMinute highNoiseOnOff:(NSInteger)highNoiseOnOff highNoiseValue:(NSInteger)highNoiseValue OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Get version information event number
SWIFT_CLASS("_TtC16protocol_channel19IDOVersionInfoModel")
@interface IDOVersionInfoModel : NSObject
/// SDK version
@property (nonatomic) NSInteger sdkVersion;
/// Heart rate algorithm version
@property (nonatomic) NSInteger hrAlgorithmVersion;
/// Sleep algorithm version
@property (nonatomic) NSInteger sleepAlgorithmVersion;
/// Step counter algorithm version
@property (nonatomic) NSInteger stepAlgorithmVersion;
/// Gesture recognition algorithm version
@property (nonatomic) NSInteger gestureRecognitionVersion;
/// PCB version (multiplied by 10, e.g., 11 for version 1.1)
@property (nonatomic) NSInteger pcbVersion;
/// Wearable version
@property (nonatomic) NSInteger spo2Version;
/// SpO2 algorithm version
@property (nonatomic) NSInteger wearVersion;
/// Stress level algorithm version
@property (nonatomic) NSInteger stressVersion;
/// Calorie algorithm version
@property (nonatomic) NSInteger kcalVersion;
/// Distance algorithm version
@property (nonatomic) NSInteger disVersion;
/// 3-axis sensor swimming algorithm version
@property (nonatomic) NSInteger axle3SwimVersion;
/// 6-axis sensor swimming algorithm version
@property (nonatomic) NSInteger axle6SwimVersion;
/// Activity mode recognition algorithm version
@property (nonatomic) NSInteger actModeTypeVersion;
/// All-day heart rate algorithm version
@property (nonatomic) NSInteger allDayHrVersion;
/// GPS algorithm version
@property (nonatomic) NSInteger gpsVersion;
/// Peripheral version for 206 customized projects
@property (nonatomic) NSInteger peripheralsVersion;
- (nonnull instancetype)initWithSdkVersion:(NSInteger)sdkVersion hrAlgorithmVersion:(NSInteger)hrAlgorithmVersion sleepAlgorithmVersion:(NSInteger)sleepAlgorithmVersion stepAlgorithmVersion:(NSInteger)stepAlgorithmVersion gestureRecognitionVersion:(NSInteger)gestureRecognitionVersion pcbVersion:(NSInteger)pcbVersion spo2Version:(NSInteger)spo2Version wearVersion:(NSInteger)wearVersion stressVersion:(NSInteger)stressVersion kcalVersion:(NSInteger)kcalVersion disVersion:(NSInteger)disVersion axle3SwimVersion:(NSInteger)axle3SwimVersion axle6SwimVersion:(NSInteger)axle6SwimVersion actModeTypeVersion:(NSInteger)actModeTypeVersion allDayHrVersion:(NSInteger)allDayHrVersion gpsVersion:(NSInteger)gpsVersion peripheralsVersion:(NSInteger)peripheralsVersion OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel23IDOVoiceReplyParamModel")
@interface IDOVoiceReplyParamModel : NSObject
/// Flag for continuing recording
/// 0: Stop recording, 1: Continue recording
@property (nonatomic) NSInteger flagIsContinue;
/// Title data, maximum 31 bytes
@property (nonatomic, copy) NSString * _Nonnull title;
/// Content data, maximum 511 bytes
@property (nonatomic, copy) NSString * _Nonnull textContent;
- (nonnull instancetype)initWithFlagIsContinue:(NSInteger)flagIsContinue title:(NSString * _Nonnull)title textContent:(NSString * _Nonnull)textContent OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Get walk reminder event number
SWIFT_CLASS("_TtC16protocol_channel18IDOWalkRemindModel")
@interface IDOWalkRemindModel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Get walk reminder event number
SWIFT_CLASS("_TtC16protocol_channel22IDOWalkRemindModelObjc")
@interface IDOWalkRemindModelObjc : NSObject
/// 0 Off，1 On
@property (nonatomic) NSInteger onOff;
/// Goal step (deprecated)
@property (nonatomic) NSInteger goalStep;
/// Start time (hour)
@property (nonatomic) NSInteger startHour;
/// Start time (minute)
@property (nonatomic) NSInteger startMinute;
/// End time (hour)
@property (nonatomic) NSInteger endHour;
/// End time (minute)
@property (nonatomic) NSInteger endMinute;
/// Repeat
@property (nonatomic, copy) NSArray<IDOWeekObjc *> * _Nonnull repeats;
/// Goal time (deprecated)
@property (nonatomic) NSInteger goalTime;
/// Notification type
/// 0: Invalid
/// 1: Allow notification
/// 2: Silent notification
/// 3: Close notification
/// Requires firmware to enable <code>setWalkReminderAddNotify</code>
@property (nonatomic) NSInteger notifyFlag;
/// Do not disturb switch
/// 0 Off
/// 1 On
/// Requires firmware to enable <code>getSupportSetGetNoReminderOnWalkReminderV2</code>
@property (nonatomic) NSInteger doNotDisturbOnOff;
/// Do not disturb start time (hour)
/// Requires firmware to enable <code>getSupportSetGetNoReminderOnWalkReminderV2</code>
@property (nonatomic) NSInteger noDisturbStartHour;
/// Do not disturb start time (minute)
/// Requires firmware to enable <code>getSupportSetGetNoReminderOnWalkReminderV2</code>
@property (nonatomic) NSInteger noDisturbStartMinute;
/// Do not disturb end time (hour)
/// Requires firmware to enable <code>getSupportSetGetNoReminderOnWalkReminderV2</code>
@property (nonatomic) NSInteger noDisturbEndHour;
/// Do not disturb end time (minute)
/// Requires firmware to enable <code>getSupportSetGetNoReminderOnWalkReminderV2</code>
@property (nonatomic) NSInteger noDisturbEndMinute;
- (nonnull instancetype)initOnOff:(NSInteger)onOff goalStep:(NSInteger)goalStep startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute endHour:(NSInteger)endHour endMinute:(NSInteger)endMinute repeats:(NSArray<IDOWeekObjc *> * _Nonnull)repeats goalTime:(NSInteger)goalTime notifyFlag:(NSInteger)notifyFlag doNotDisturbOnOff:(NSInteger)doNotDisturbOnOff noDisturbStartHour:(NSInteger)noDisturbStartHour noDisturbStartMinute:(NSInteger)noDisturbStartMinute noDisturbEndHour:(NSInteger)noDisturbEndHour noDisturbEndMinute:(NSInteger)noDisturbEndMinute OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel22IDOWalkRemindTimesItem")
@interface IDOWalkRemindTimesItem : NSObject
/// Walk reminder time: Hour
@property (nonatomic) NSInteger hour;
/// Walk reminder time: Minute
@property (nonatomic) NSInteger min;
- (nonnull instancetype)initWithHour:(NSInteger)hour min:(NSInteger)min OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel28IDOWalkRemindTimesParamModel")
@interface IDOWalkRemindTimesParamModel : NSObject
/// Switch: 1:On 0:Off
@property (nonatomic) NSInteger onOff;
@property (nonatomic, copy) NSArray<IDOWalkRemindTimesItem *> * _Nonnull items;
- (nonnull instancetype)initOnOff:(NSInteger)onOff items:(NSArray<IDOWalkRemindTimesItem *> * _Nonnull)items OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Set wallpaper dial list event number
SWIFT_CLASS("_TtC16protocol_channel28IDOWallpaperDialReplyV3Model")
@interface IDOWallpaperDialReplyV3Model : NSObject
/// 0 for success, non-zero for failure
@property (nonatomic) NSInteger errCode;
/// Operation: 0 for query, 1 for setting, 2 for deleting the wallpaper dial
@property (nonatomic) NSInteger operate;
/// Set location information
@property (nonatomic) NSInteger location;
/// Hide type
@property (nonatomic) NSInteger hideType;
/// Color of time control
@property (nonatomic) NSInteger timeColor;
/// Control type
@property (nonatomic) NSInteger widgetType;
/// Color of widget icons (1 byte reserved + R (1 byte) + G (1 byte) + B (1 byte))
@property (nonatomic) NSInteger widgetIconColor;
/// Color of widget numbers (1 byte reserved + R (1 byte) + G (1 byte) + B (1 byte))
@property (nonatomic) NSInteger widgetNumColor;
- (nonnull instancetype)initWithErrCode:(NSInteger)errCode operate:(NSInteger)operate location:(NSInteger)location hideType:(NSInteger)hideType timeColor:(NSInteger)timeColor widgetType:(NSInteger)widgetType widgetIconColor:(NSInteger)widgetIconColor widgetNumColor:(NSInteger)widgetNumColor OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Set wallpaper dial list event number
SWIFT_CLASS("_TtC16protocol_channel33IDOWallpaperDialReplyV3ParamModel")
@interface IDOWallpaperDialReplyV3ParamModel : NSObject
/// Operation: 0 for query, 1 for setting, 2 for deleting the wallpaper dial
@property (nonatomic) NSInteger operate;
/// Set location information, reference to the 9-grid layout
@property (nonatomic) NSInteger location;
/// Hide type: 0 for showing all, 1 for hiding sub-controls (icons and numbers)
@property (nonatomic) NSInteger hideType;
/// Color of time control (1 byte reserved + R (1 byte) + G (1 byte) + B (1 byte))
@property (nonatomic) NSInteger timeColor;
/// Control type: 1 for week/date, 2 for steps, 3 for distance, 4 for calories, 5 for heart rate, 6 for battery
@property (nonatomic) NSInteger widgetType;
/// Color of widget icons (1 byte reserved + R (1 byte) + G (1 byte) + B (1 byte))
@property (nonatomic) NSInteger widgetIconColor;
/// Color of widget numbers (1 byte reserved + R (1 byte) + G (1 byte) + B (1 byte))
@property (nonatomic) NSInteger widgetNumColor;
- (nonnull instancetype)initWithOperate:(NSInteger)operate location:(NSInteger)location hideType:(NSInteger)hideType timeColor:(NSInteger)timeColor widgetType:(NSInteger)widgetType widgetIconColor:(NSInteger)widgetIconColor widgetNumColor:(NSInteger)widgetNumColor OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Get watch ID event number
SWIFT_CLASS("_TtC16protocol_channel19IDOWatchDialIdModel")
@interface IDOWatchDialIdModel : NSObject
/// Watch ID
@property (nonatomic) NSInteger watchId;
- (nonnull instancetype)initWithWatchId:(NSInteger)watchId OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel21IDOWatchDialInfoModel")
@interface IDOWatchDialInfoModel : NSObject
/// Compression block size
@property (nonatomic) NSInteger blockSize;
/// Family name (maximum 10 bytes)
@property (nonatomic, copy) NSString * _Nonnull familyName;
/// Color format
@property (nonatomic) NSInteger format;
/// Screen height (pixel size)
@property (nonatomic) NSInteger height;
/// Size in 100x increments
@property (nonatomic) NSInteger sizex100;
/// Screen width (pixel size)
@property (nonatomic) NSInteger width;
- (nonnull instancetype)initWithBlockSize:(NSInteger)blockSize familyName:(NSString * _Nonnull)familyName format:(NSInteger)format height:(NSInteger)height sizex100:(NSInteger)sizex100 width:(NSInteger)width OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Set watch face event number
SWIFT_CLASS("_TtC16protocol_channel22IDOWatchDialParamModel")
@interface IDOWatchDialParamModel : NSObject
/// ID of the watch face to be set
/// Dial id
/// 0 invalid,currently supports1~4
@property (nonatomic) NSInteger dialId;
- (nonnull instancetype)initWithDialId:(NSInteger)dialId OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel20IDOWatchDialSortItem")
@interface IDOWatchDialSortItem : NSObject
/// Watch dial type 1: Normal Dial, 2: Wallpaper Dial, 3: Cloud Dial
@property (nonatomic) NSInteger type;
/// Serial number, starting from 0, not exceeding the total number of supported watch dials
@property (nonatomic) NSInteger sortNumber;
/// Watch dial ID, maximum 29 bytes
@property (nonatomic, copy) NSString * _Nonnull name;
- (nonnull instancetype)initWithType:(NSInteger)type sortNumber:(NSInteger)sortNumber name:(NSString * _Nonnull)name OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel26IDOWatchDialSortParamModel")
@interface IDOWatchDialSortParamModel : NSObject
/// Number of items in the watch dial sort list
@property (nonatomic) NSInteger sortItemNumb;
/// Array of watch dial sort items type, sort_number, and name
@property (nonatomic, copy) NSArray<IDOWatchDialSortItem *> * _Nonnull pSortItem;
- (nonnull instancetype)initWithSortItemNumb:(NSInteger)sortItemNumb pSortItem:(NSArray<IDOWatchDialSortItem *> * _Nonnull)pSortItem OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel17IDOWatchFaceModel")
@interface IDOWatchFaceModel : NSObject
/// Error code, 0 for success, non-zero for error
@property (nonatomic) NSInteger errCode;
/// Operation:<br />0 - Query the currently used watch face<br />1 - Set watch face<br />2 - Delete watch face<br />3 - Dynamic request space to set the corresponding space size
@property (nonatomic) NSInteger operate;
/// Watch face name, maximum 29 bytes
@property (nonatomic, copy) NSString * _Nullable fileName;
/// Number of files<br /><br />Requires the firmware to enable the function table <code>v3WatchDailSetAddSize</code>
/// If operate!=3, this data is the same as before, which is 1 and is saved as before
/// If operate=3: dynamic request space to set the corresponding space size, this corresponds to a deleted file name column
/// If <code>v3WatchDailSetAddSize</code> is not enabled, this field defaults to 1
@property (nonatomic) NSInteger fileCount;
- (nonnull instancetype)initWithErrCode:(NSInteger)errCode operate:(NSInteger)operate fileName:(NSString * _Nullable)fileName fileCount:(NSInteger)fileCount OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel22IDOWatchFaceParamModel")
@interface IDOWatchFaceParamModel : NSObject
/// Operation:
/// \code
/// 0 - Query the currently used watch face
/// 1 - Set watch face
/// 2 - Delete watch face
/// 3 - Dynamic request space to set the corresponding space size
///
/// \endcode
@property (nonatomic) NSInteger operate;
/// Watch face name, maximum 29 bytes
@property (nonatomic, copy) NSString * _Nonnull fileName;
/// Uncompressed file length
/// After the firmware opens the function table <code>v3WatchDailSetAddSize</code>, the app needs to send this field
/// Before the watch face is transmitted, the firmware needs to allocate corresponding space to save it, and the uncompressed file length needs to be transmitted
@property (nonatomic) NSInteger watchFileSize;
- (nonnull instancetype)initWithOperate:(NSInteger)operate fileName:(NSString * _Nonnull)fileName watchFileSize:(NSInteger)watchFileSize OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel12IDOWatchItem")
@interface IDOWatchItem : NSObject
/// Watch face type
/// 1: Normal watch face
/// 2: Wallpaper watch face
/// 3: Cloud watch face
@property (nonatomic) NSInteger type;
/// Current version number of the watch face (applies to cloud watch faces)
@property (nonatomic) NSInteger watchVersion;
/// Watch face order number
/// Start at 0
@property (nonatomic) NSInteger sortNumber;
/// Watch face name
@property (nonatomic, copy) NSString * _Nonnull name;
/// Size of the watch face, in bytes
/// Applies only if the firmware enables <code>v3SupportGetWatchSize</code>, otherwise the field is invalid
@property (nonatomic) NSInteger size;
- (nonnull instancetype)initWithType:(NSInteger)type watchVersion:(NSInteger)watchVersion sortNumber:(NSInteger)sortNumber name:(NSString * _Nonnull)name size:(NSInteger)size OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel17IDOWatchListModel")
@interface IDOWatchListModel : NSObject
/// Total number of local watch faces
@property (nonatomic) NSInteger localWatchNum;
/// Total number of cloud watch faces
@property (nonatomic) NSInteger cloudWatchNum;
/// Total number of wallpaper watch faces
@property (nonatomic) NSInteger wallpaperWatchNum;
/// Number of cloud watch faces used
@property (nonatomic) NSInteger userCloudWatchNum;
/// Number of wallpaper watch faces used
@property (nonatomic) NSInteger userWallpaperWatchNum;
/// ID of the currently displayed watch face, maximum 30 bytes
@property (nonatomic, copy) NSString * _Nonnull nowShowWatchName;
/// Framework version number, starting from 1
@property (nonatomic) NSInteger watchFrameMainVersion;
/// Maximum size of a single file, in kilobytes(reserve)
@property (nonatomic) NSInteger fileMaxSize;
/// Total capacity of watch faces
/// Uint:Byte
/// Set to 0 if the firmware enables <code>setWatchCapacitySizeDisplay</code>
@property (nonatomic) NSInteger watchCapacitySize;
/// Used capacity of watch faces
/// Uint:Byte
/// Set to 0 if the firmware enables <code>setWatchCapacitySizeDisplay</code>
@property (nonatomic) NSInteger userWatchCapacitySize;
/// Maximum continuous space available for downloading watch faces
/// Uint:Byte
/// Set to 0 if the firmware enables <code>setWatchCapacitySizeDisplay</code>
@property (nonatomic) NSInteger usableMaxDownloadSpaceSize;
@property (nonatomic, copy) NSArray<IDOWatchItem *> * _Nonnull items;
- (nonnull instancetype)initWithLocalWatchNum:(NSInteger)localWatchNum cloudWatchNum:(NSInteger)cloudWatchNum wallpaperWatchNum:(NSInteger)wallpaperWatchNum userCloudWatchNum:(NSInteger)userCloudWatchNum userWallpaperWatchNum:(NSInteger)userWallpaperWatchNum nowShowWatchName:(NSString * _Nonnull)nowShowWatchName watchFrameMainVersion:(NSInteger)watchFrameMainVersion fileMaxSize:(NSInteger)fileMaxSize watchCapacitySize:(NSInteger)watchCapacitySize userWatchCapacitySize:(NSInteger)userWatchCapacitySize usableMaxDownloadSpaceSize:(NSInteger)usableMaxDownloadSpaceSize items:(NSArray<IDOWatchItem *> * _Nonnull)items OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel18IDOWatchListV2Item")
@interface IDOWatchListV2Item : NSObject
@property (nonatomic, copy) NSString * _Nonnull fileName;
- (nonnull instancetype)initWithFileName:(NSString * _Nonnull)fileName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel19IDOWatchListV2Model")
@interface IDOWatchListV2Model : NSObject
/// Number of remaining available files
@property (nonatomic) NSInteger availableCount;
/// Maximum size of a single file (in KB)
@property (nonatomic) NSInteger fileMaxSize;
@property (nonatomic, copy) NSArray<IDOWatchListV2Item *> * _Nonnull items;
- (nonnull instancetype)initWithAvailableCount:(NSInteger)availableCount fileMaxSize:(NSInteger)fileMaxSize items:(NSArray<IDOWatchListV2Item *> * _Nonnull)items OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel20IDOWeatherDataFuture")
@interface IDOWeatherDataFuture : NSObject
/// Weather type
/// \code
/// 0x00    Other
/// 0x01    Sunny
/// 0x02    Cloudy
/// 0x03    Overcast
/// 0x04    Rain
/// 0x05    Heavy Rain
/// 0x06    Thunderstorm
/// 0x07    Snow
/// 0x08    Sleet
/// 0x09    Typhoon
/// 0x0A    Sandstorm
/// 0x0B    Clear Night
/// 0x0C    Cloudy Night
/// 0x0D    Hot
/// 0x0E    Cold
/// 0x0F    Gentle Breeze
/// 0x10    Strong Wind
/// 0x11    Haze
/// 0x12    Shower
/// 0x13    Cloudy to Sunny
/// 0x30    Thunder
/// 0x31    Hail
/// 0x32    Dust
/// 0x33    Tornado
///
/// \endcode
@property (nonatomic) NSInteger type;
/// future minimum temperature
@property (nonatomic) NSInteger minTemp;
/// future maximum temperature
@property (nonatomic) NSInteger maxTemp;
- (nonnull instancetype)initWithType:(NSInteger)type minTemp:(NSInteger)minTemp maxTemp:(NSInteger)maxTemp OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel24IDOWeatherDataParamModel")
@interface IDOWeatherDataParamModel : NSObject
/// Weather type
/// \code
/// 0x00    Other
/// 0x01    Sunny
/// 0x02    Cloudy
/// 0x03    Overcast
/// 0x04    Rain
/// 0x05    Heavy Rain
/// 0x06    Thunderstorm
/// 0x07    Snow
/// 0x08    Sleet
/// 0x09    Typhoon
/// 0x0A    Sandstorm
/// 0x0B    Clear Night
/// 0x0C    Cloudy Night
/// 0x0D    Hot
/// 0x0E    Cold
/// 0x0F    Gentle Breeze
/// 0x10    Strong Wind
/// 0x11    Haze
/// 0x12    Shower
/// 0x13    Cloudy to Sunny
/// 0x30    Thunder
/// 0x31    Hail
/// 0x32    Dust
/// 0x33    Tornado
///
/// \endcode
@property (nonatomic) NSInteger type;
/// Current temperature
@property (nonatomic) NSInteger temp;
/// Maximum temperature of the day
@property (nonatomic) NSInteger maxTemp;
/// Minimum temperature of the day
@property (nonatomic) NSInteger minTemp;
/// Current humidity
@property (nonatomic) NSInteger humidity;
/// Current UV intensity
@property (nonatomic) NSInteger uvIntensity;
/// Current air quality index (AQI)
@property (nonatomic) NSInteger aqi;
@property (nonatomic, copy) NSArray<IDOWeatherDataFuture *> * _Nonnull future;
- (nonnull instancetype)initWithType:(NSInteger)type temp:(NSInteger)temp maxTemp:(NSInteger)maxTemp minTemp:(NSInteger)minTemp humidity:(NSInteger)humidity uvIntensity:(NSInteger)uvIntensity aqi:(NSInteger)aqi future:(NSArray<IDOWeatherDataFuture *> * _Nonnull)future OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Set sunrise and sunset time event number
SWIFT_CLASS("_TtC16protocol_channel27IDOWeatherSunTimeParamModel")
@interface IDOWeatherSunTimeParamModel : NSObject
/// Hour of sunrise
@property (nonatomic) NSInteger sunriseHour;
/// Minute of sunrise
@property (nonatomic) NSInteger sunriseMin;
/// Hour of sunset
@property (nonatomic) NSInteger sunsetHour;
/// Minute of sunset
@property (nonatomic) NSInteger sunsetMin;
- (nonnull instancetype)initWithSunriseHour:(NSInteger)sunriseHour sunriseMin:(NSInteger)sunriseMin sunsetHour:(NSInteger)sunsetHour sunsetMin:(NSInteger)sunsetMin OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// V3设置天气数据
SWIFT_CLASS("_TtC16protocol_channel22IDOWeatherV3ParamModel")
@interface IDOWeatherV3ParamModel : NSObject
@property (nonatomic) NSInteger month;
@property (nonatomic) NSInteger day;
@property (nonatomic) NSInteger hour;
@property (nonatomic) NSInteger min;
@property (nonatomic) NSInteger sec;
/// The day of the week
/// bit0: Monday
/// bit1: Tuesday and so on up to Sunday
@property (nonatomic) NSInteger week;
/// Weather type
/// \code
/// 0: Other
/// 1: Sunny
/// 2: Cloudy
/// 3: Overcast
/// 4: Rain
/// 5: Heavy rain
/// 6: Thunderstorm
/// 7: Snow
/// 8: Sleet
/// 9: Typhoon
/// 10: Sandstorm
/// 11: Night clear
/// 12: Night cloudy
/// 13: Hot
/// 14: Cold
/// 15: Gentle breeze
/// 16: Strong wind
/// 17: Haze
/// 18: Shower
/// 19: Cloudy to sunny
/// 48: Thunder
/// 49: Hail
/// 50: Blowing sand
/// 51: Tornado (realme custom weather type idw02)
///
/// \endcode
@property (nonatomic) NSInteger weatherType;
/// Current temperature in Celsius
/// For negative temperatures, add 100 to the temperature and transmit
@property (nonatomic) NSInteger todayTmp;
/// Maximum temperature in Celsius
/// For negative temperatures, add 100 to the temperature and transmit
@property (nonatomic) NSInteger todayMaxTemp;
/// Minimum temperature in Celsius
/// For negative temperatures, add 100 to the temperature and transmit
@property (nonatomic) NSInteger todayMinTemp;
/// City name
/// Maximum of 74 bytes
@property (nonatomic, copy) NSString * _Nonnull cityName;
/// Air quality
/// Multiply by 10 for transmission
@property (nonatomic) NSInteger airQuality;
/// Precipitation probability
/// 0-100 percentage
@property (nonatomic) NSInteger precipitationProbability;
@property (nonatomic) NSInteger humidity;
/// UV intensity
/// Multiply by 10 for transmission
@property (nonatomic) NSInteger todayUvIntensity;
@property (nonatomic) NSInteger windSpeed;
@property (nonatomic) NSInteger sunriseHour;
@property (nonatomic) NSInteger sunriseMin;
@property (nonatomic) NSInteger sunsetHour;
@property (nonatomic) NSInteger sunsetMin;
/// Number of sunrise and sunset time details
/// Currently, the maximum number of days is set to 7
/// Invalid for version 1
@property (nonatomic) NSInteger sunriseItemNum;
@property (nonatomic, copy) NSString * _Nonnull airGradeItem;
@property (nonatomic, copy) NSArray<IDOHoursWeatherItem *> * _Nonnull hoursWeatherItems;
@property (nonatomic, copy) NSArray<IDOFutureItem *> * _Nonnull futureItems;
@property (nonatomic, copy) NSArray<IDOSunriseItem *> * _Nonnull sunriseItem;
- (nonnull instancetype)initWithMonth:(NSInteger)month day:(NSInteger)day hour:(NSInteger)hour min:(NSInteger)min sec:(NSInteger)sec week:(NSInteger)week weatherType:(NSInteger)weatherType todayTmp:(NSInteger)todayTmp todayMaxTemp:(NSInteger)todayMaxTemp todayMinTemp:(NSInteger)todayMinTemp cityName:(NSString * _Nonnull)cityName airQuality:(NSInteger)airQuality precipitationProbability:(NSInteger)precipitationProbability humidity:(NSInteger)humidity todayUvIntensity:(NSInteger)todayUvIntensity windSpeed:(NSInteger)windSpeed sunriseHour:(NSInteger)sunriseHour sunriseMin:(NSInteger)sunriseMin sunsetHour:(NSInteger)sunsetHour sunsetMin:(NSInteger)sunsetMin sunriseItemNum:(NSInteger)sunriseItemNum airGradeItem:(NSString * _Nonnull)airGradeItem hoursWeatherItems:(NSArray<IDOHoursWeatherItem *> * _Nonnull)hoursWeatherItems futureItems:(NSArray<IDOFutureItem *> * _Nonnull)futureItems sunriseItem:(NSArray<IDOSunriseItem *> * _Nonnull)sunriseItem OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, IDOWeek, open) {
  IDOWeekMonday = 0,
  IDOWeekTuesday = 1,
  IDOWeekWednesday = 2,
  IDOWeekThursday = 3,
  IDOWeekFriday = 4,
  IDOWeekSaturday = 5,
  IDOWeekSunday = 6,
};


SWIFT_CLASS("_TtC16protocol_channel11IDOWeekObjc")
@interface IDOWeekObjc : NSObject
@property (nonatomic) enum IDOWeek week;
- (nonnull instancetype)initWithWeek:(enum IDOWeek)week OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16protocol_channel22IDOWorldTimeParamModel")
@interface IDOWorldTimeParamModel : NSObject
/// Detail ID,Uniqueness
@property (nonatomic) NSInteger id;
/// Minute offset from current time to UTC 0
@property (nonatomic) NSInteger minOffset;
/// City name, up to 59 bytes
@property (nonatomic, copy) NSString * _Nonnull cityName;
@property (nonatomic) NSInteger sunriseHour;
@property (nonatomic) NSInteger sunriseMin;
@property (nonatomic) NSInteger sunsetHour;
@property (nonatomic) NSInteger sunsetMin;
/// 1: East longitude 2: West longitude
@property (nonatomic) NSInteger longitudeFlag;
/// Longitude, multiplied by 100, with 2 decimal places
@property (nonatomic) NSInteger longitude;
/// 1: North latitude 2: South latitude
@property (nonatomic) NSInteger latitudeFlag;
/// Latitude, multiplied by 100, with 2 decimal places
@property (nonatomic) NSInteger latitude;
- (nonnull instancetype)initWithId:(NSInteger)id minOffset:(NSInteger)minOffset cityName:(NSString * _Nonnull)cityName sunriseHour:(NSInteger)sunriseHour sunriseMin:(NSInteger)sunriseMin sunsetHour:(NSInteger)sunsetHour sunsetMin:(NSInteger)sunsetMin longitudeFlag:(NSInteger)longitudeFlag longitude:(NSInteger)longitude latitudeFlag:(NSInteger)latitudeFlag latitude:(NSInteger)latitude OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum IDOWriteType : NSInteger;

SWIFT_CLASS("_TtC16protocol_channel18IDOWriteStateModel")
@interface IDOWriteStateModel : NSObject
/// 写入状态是否成功
@property (nonatomic, readonly) BOOL state;
/// uuid
@property (nonatomic, readonly, copy) NSString * _Nullable uuid;
/// mac address
@property (nonatomic, readonly, copy) NSString * _Nullable macAddress;
/// 写入类型
@property (nonatomic, readonly) enum IDOWriteType type;
- (nonnull instancetype)initWithState:(BOOL)state uuid:(NSString * _Nullable)uuid macAddress:(NSString * _Nullable)macAddress type:(enum IDOWriteType)type OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// 写数据状态
typedef SWIFT_ENUM(NSInteger, IDOWriteType, open) {
/// 有响应
  IDOWriteTypeWithResponse = 0,
/// 无响应
  IDOWriteTypeWithoutResponse = 1,
/// 错误
  IDOWriteTypeError = 2,
};

typedef SWIFT_ENUM(NSInteger, NoticeMessageType, open) {
  NoticeMessageTypeSms = 0x01,
  NoticeMessageTypeEmail = 0x02,
  NoticeMessageTypeWx = 0x03,
  NoticeMessageTypeQq = 0x04,
  NoticeMessageTypeWeibo = 0x05,
  NoticeMessageTypeFacebook = 0x06,
  NoticeMessageTypeTwitter = 0x07,
  NoticeMessageTypeWhatsapp = 0x08,
  NoticeMessageTypeMessenger = 0x09,
  NoticeMessageTypeInstagram = 0x0a,
  NoticeMessageTypeLinkedin = 0x0b,
  NoticeMessageTypeCalendar = 0x0c,
  NoticeMessageTypeSkype = 0x0d,
  NoticeMessageTypeAlarm = 0x0e,
  NoticeMessageTypeVkontakte = 0x10,
  NoticeMessageTypeLine = 0x11,
  NoticeMessageTypeViber = 0x12,
  NoticeMessageTypeKakao_talk = 0x13,
  NoticeMessageTypeGmail = 0x14,
  NoticeMessageTypeOutlook = 0x15,
  NoticeMessageTypeSnapchat = 0x16,
  NoticeMessageTypeTelegram = 0x17,
  NoticeMessageTypeChatwork = 0x20,
  NoticeMessageTypeSlack = 0x21,
  NoticeMessageTypeTumblr = 0x23,
  NoticeMessageTypeYoutube = 0x24,
  NoticeMessageTypePinterest_yahoo = 0x25,
  NoticeMessageTypeTiktok = 0x26,
  NoticeMessageTypeRedbus = 0x27,
  NoticeMessageTypeDailyhunt = 0x28,
  NoticeMessageTypeHotstar = 0x29,
  NoticeMessageTypeInshorts = 0x2a,
  NoticeMessageTypePaytm = 0x2b,
  NoticeMessageTypeAmazon = 0x2c,
  NoticeMessageTypeFlipkart = 0x2d,
  NoticeMessageTypePrime = 0x2e,
  NoticeMessageTypeNetflix = 0x2f,
  NoticeMessageTypeGpay = 0x30,
  NoticeMessageTypePhonpe = 0x31,
  NoticeMessageTypeSwiggy = 0x32,
  NoticeMessageTypeZomato = 0x33,
  NoticeMessageTypeMakemytrip = 0x34,
  NoticeMessageTypeJiotv = 0x35,
  NoticeMessageTypeKeep = 0x36,
};

@protocol FlutterPluginRegistrar;

SWIFT_CLASS("_TtC16protocol_channel26SwiftProtocolChannelPlugin")
@interface SwiftProtocolChannelPlugin : NSObject <FlutterPlugin>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SwiftProtocolChannelPlugin * _Nonnull shared;)
+ (SwiftProtocolChannelPlugin * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (void)registerWithRegistrar:(id <FlutterPluginRegistrar> _Nonnull)registrar;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
